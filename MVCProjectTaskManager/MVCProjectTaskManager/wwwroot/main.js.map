{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/MyAnimation.ts","./src/app/admin/admin-routing/admin-routing.module.ts","./src/app/admin/admin.module.ts","./src/app/admin/components/about/about.component.ts","./src/app/admin/components/about/about.component.html","./src/app/admin/components/check-box-printer/check-box-printer.component.ts","./src/app/admin/components/check-box-printer/check-box-printer.component.html","./src/app/admin/components/client-locations/client-locations.component.ts","./src/app/admin/components/client-locations/client-locations.component.html","./src/app/admin/components/countries/countries.component.ts","./src/app/admin/components/countries/countries.component.html","./src/app/admin/components/dashboard/dashboard.component.ts","./src/app/admin/components/dashboard/dashboard.component.html","./src/app/admin/components/masters/masters.component.ts","./src/app/admin/components/masters/masters.component.html","./src/app/admin/components/my-profile/my-profile.component.ts","./src/app/admin/components/my-profile/my-profile.component.html","./src/app/admin/components/project-details/project-details.component.ts","./src/app/admin/components/project-details/project-details.component.html","./src/app/admin/components/project/project.component.ts","./src/app/admin/components/project/project.component.html","./src/app/admin/components/projects/projects.component.ts","./src/app/admin/components/projects/projects.component.html","./src/app/admin/components/task-priorities/task-priorities.component.ts","./src/app/admin/components/task-priorities/task-priorities.component.html","./src/app/admin/components/task-status/task-status.component.ts","./src/app/admin/components/task-status/task-status.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/sign-up/sign-up.component.ts","./src/app/components/sign-up/sign-up.component.html","./src/app/directives/alert.directive.ts","./src/app/directives/client-location-status-validator.directive.ts","./src/app/directives/component-loader.directive.ts","./src/app/directives/project-idunique-validator.directive.ts","./src/app/directives/repeater.directive.ts","./src/app/directives/team-size-validator.directive.ts","./src/app/employee/components/create-task/create-task.component.ts","./src/app/employee/components/create-task/create-task.component.html","./src/app/employee/components/edit-task/edit-task.component.ts","./src/app/employee/components/edit-task/edit-task.component.html","./src/app/employee/components/tasks/tasks.component.ts","./src/app/employee/components/tasks/tasks.component.html","./src/app/employee/components/update-task-status/update-task-status.component.ts","./src/app/employee/components/update-task-status/update-task-status.component.html","./src/app/employee/employee-routing/employee-routing.module.ts","./src/app/employee/employee.module.ts","./src/app/interceptors/jwt-interceptor.service.ts","./src/app/interceptors/jwt-un-authorized-interceptor.service.ts","./src/app/models/client-location.ts","./src/app/models/country.ts","./src/app/models/login-view-model.ts","./src/app/models/project.ts","./src/app/models/task-priority.ts","./src/app/models/task-status-detail.ts","./src/app/models/task-status.ts","./src/app/models/task.ts","./src/app/pipes/filter.pipe.ts","./src/app/pipes/paging.pipe.ts","./src/app/pipes/sort.pipe.ts","./src/app/services/client-locations.service.ts","./src/app/services/countries.service.ts","./src/app/services/custom-validators.service.ts","./src/app/services/dashboard.service.ts","./src/app/services/login.service.ts","./src/app/services/projects.service.ts","./src/app/services/router-logger.service.ts","./src/app/services/task-priorities.service.ts","./src/app/services/task-statuses.service.ts","./src/app/services/tasks.service.ts","./src/app/shared/shared.module.ts","./src/main.ts"],"sourcesContent":["import { trigger, transition, query, style, animate, group } from \"@angular/animations\";\r\n\r\nexport const fadeAnimation =\r\n    trigger(\"routeAnimations\", [\r\n        transition(\"* <=> *\", [\r\n            query(\":enter, :leave\",\r\n                style({ position: 'absolute', width: '98%' }),\r\n                { optional: true }),\r\n\r\n            group([\r\n\r\n                query(\":enter\", [\r\n                    style({ opacity: 0 }),\r\n                    animate(\"0.6s\", style({ opacity: '1' }))\r\n                ], { optional: true }),\r\n\r\n                query(\":leave\", [\r\n                    style({ opacity: 1 }),\r\n                    animate(\"0.6s\", style({ opacity: '0' }))\r\n                ], { optional: true })\r\n\r\n            ])\r\n        ])\r\n    ]);","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from '../components/dashboard/dashboard.component';\nimport { ProjectsComponent } from '../components/projects/projects.component';\nimport { ProjectDetailsComponent } from '../components/project-details/project-details.component';\nimport { MastersComponent } from '../components/masters/masters.component';\n\nconst routes:Routes = [\n  {\n    path: 'admin',\n    data: { expectedRole: 'Admin' },\n    children: [\n      { path: 'dashboard', component: DashboardComponent },\n      { path: 'projects', component: ProjectsComponent },\n      { path: 'projects/view/:projectid', component: ProjectDetailsComponent },\n      {path:'masters', component:MastersComponent}\n    ],\n  },\n\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ],\n  exports:[RouterModule]\n})\nexport class AdminRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { MyProfileComponent } from './components/my-profile/my-profile.component';\nimport { DashboardService } from '../services/dashboard.service';\nimport { ProjectsComponent } from './components/projects/projects.component';\nimport { ProjectComponent } from './components/project/project.component';\nimport { CheckBoxPrinterComponent } from './components/check-box-printer/check-box-printer.component';\nimport { ProjectDetailsComponent } from './components/project-details/project-details.component';\nimport { AdminRoutingModule } from './admin-routing/admin-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { CountriesComponent } from './components/countries/countries.component';\nimport { ClientLocationsComponent } from './components/client-locations/client-locations.component';\nimport { TaskPrioritiesComponent } from './components/task-priorities/task-priorities.component';\nimport { TaskStatusComponent } from './components/task-status/task-status.component';\nimport { MastersComponent } from './components/masters/masters.component';\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    AboutComponent,\n    MyProfileComponent,\n    ProjectsComponent,\n    ProjectComponent,\n    CheckBoxPrinterComponent,\n    ProjectDetailsComponent,\n    CountriesComponent,\n    ClientLocationsComponent,\n    TaskPrioritiesComponent,\n    TaskStatusComponent,\n    MastersComponent\n  ],\n  imports: [SharedModule, AdminRoutingModule],\n  exports: [\n    DashboardComponent,\n    AboutComponent,\n    MyProfileComponent,\n    ProjectsComponent,\n    ProjectDetailsComponent\n  ],\n  providers: [DashboardService],\n  // entryComponents: [CountriesComponent, ClientLocationsComponent, TaskPrioritiesComponent, TaskStatusComponent]\n})\n\nexport class AdminModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent {\n\n}\n","<p>about works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-check-box-printer',\n  templateUrl: './check-box-printer.component.html',\n  styleUrls: ['./check-box-printer.component.scss']\n})\nexport class CheckBoxPrinterComponent implements OnInit {\n  isChecked: boolean = false;\n\n  constructor() { }\n\n  ngOnInit()\n  {\n  }\n\n  check()\n  {\n    this.isChecked = true;\n  }\n\n  unCheck()\n  {\n    this.isChecked = false;\n  }\n}\n","<div>\n    <input type=\"checkbox\" value=\"true\" name=\"isChecked\" id=\"isChecked\" [(ngModel)]=\"isChecked\">\n  </div>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ClientLocation } from 'src/app/models/client-location';\nimport { FilterPipe } from 'src/app/pipes/filter.pipe';\nimport { ClientLocationsService } from 'src/app/services/client-locations.service';\n\n@Component({\n  selector: 'app-client-locations',\n  templateUrl: './client-locations.component.html',\n  styleUrls: ['./client-locations.component.scss']\n})\nexport class ClientLocationsComponent  implements OnInit {\n  //Objects for Holding Model Data\n  clientLocations: ClientLocation[] = [];\n  showLoading: boolean = true;\n\n  //Objects for Delete\n  deleteClientLocation: ClientLocation = new ClientLocation();\n  editIndex: number | any = null;\n  deleteIndex: number | any = null;\n\n  //Properties for Searching\n  searchBy: string = \"clientLocationName\";\n  searchText: string = \"\";\n\n  //Properties for Paging\n  currentPageIndex: number = 0;\n  pages: any[] = [];\n  pageSize: number = 7;\n\n  //Properties for Sorting\n  sortBy: string = \"clientLocationName\";\n  sortOrder: string = \"ASC\";\n\n  //Reactive Forms\n  newForm: FormGroup | any = null;\n  editForm: FormGroup | any = null;\n\n  //Autofocus TextBoxes\n  @ViewChild(\"defaultTextBox_New\") defaultTextBox_New: ElementRef | any = null;\n  @ViewChild(\"defaultTextBox_Edit\") defaultTextBox_Edit: ElementRef | any = null;\n\n  //Constructor\n  constructor(private clientLocationsService: ClientLocationsService, private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit() {\n    //Get data from database\n    this.clientLocationsService.getClientLocations().subscribe(\n      (response: ClientLocation[]) => {\n        this.clientLocations = response;\n        this.showLoading = false;\n        this.calculateNoOfPages();\n      }\n    );\n\n    //Create newForm\n    this.newForm = this.formBuilder.group({\n      clientLocationID: this.formBuilder.control(null),\n      clientLocationName: this.formBuilder.control(null, [Validators.required])\n    });\n\n    //Create editForm\n    this.editForm = this.formBuilder.group({\n      clientLocationID: this.formBuilder.control(null),\n      clientLocationName: this.formBuilder.control(null, [Validators.required])\n    });\n  }\n\n  calculateNoOfPages() {\n    //Get no. of Pages\n    let filterPipe = new FilterPipe();\n    var noOfPages = Math.ceil(filterPipe.transform(this.clientLocations, this.searchBy, this.searchText).length / this.pageSize);\n    this.pages = [];\n\n    //Generate pages\n    for (let i = 0; i < noOfPages; i++) {\n      this.pages.push({ pageIndex: i });\n    }\n\n    this.currentPageIndex = 0;\n  }\n\n  onPageIndexClicked(ind: number) {\n    //Set currentPageIndex\n    if (ind >= 0 && ind < this.pages.length) {\n      this.currentPageIndex = ind;\n    }\n  }\n\n  onNewClick(event: any) {\n    //reset the newForm\n    this.newForm.reset({ clientLocationID: 0 });\n    setTimeout(() => {\n      //Focus the ClientLocation textbox in newForm\n      this.defaultTextBox_New.nativeElement.focus();\n    }, 100);\n  }\n\n  onSaveClick() {\n    if (this.newForm.valid) {\n      //Invoke the REST-API call\n      this.clientLocationsService.insertClientLocation(this.newForm.value).subscribe({ next:(response) => {\n        //Add Response to Grid\n        var p: ClientLocation = new ClientLocation();\n        p.clientLocationID = response.clientLocationID;\n        p.clientLocationName = response.clientLocationName;\n        this.clientLocations.push(p);\n\n        //Reset the newForm\n        this.newForm.reset();\n        $(\"#newClientLocationFormCancel\").trigger(\"click\");\n        this.calculateNoOfPages();\n\n        this.calculateNoOfPages();\n      }, error:(error) => {\n        console.log(error);\n      }});\n    }\n  }\n\n  onEditClick(event: any, clientLocation: ClientLocation) {\n    //Reset the editForm\n    this.editForm.reset();\n    setTimeout(() => {\n      //Set data into editForm\n      this.editForm.patchValue(clientLocation);\n      this.editIndex = this.clientLocations.indexOf(clientLocation);\n\n      //Focus the ClientLocation textbox in editForm\n      this.defaultTextBox_Edit.nativeElement.focus();\n    }, 100);\n  }\n\n  onUpdateClick() {\n    if (this.editForm.valid) {\n      //Invoke the REST-API call\n      this.clientLocationsService.updateClientLocation(this.editForm.value).subscribe({next:(response: ClientLocation) => {\n        //Update the response in Grid\n        this.clientLocations[this.editIndex] = response;\n\n        //Reset the editForm\n        this.editForm.reset();\n        $(\"#editClientLocationFormCancel\").trigger(\"click\");\n      },\n        error:(error) => {\n          console.log(error);\n    }});\n    }\n  }\n\n  onDeleteClick(event: any, clientLocation: ClientLocation) {\n    //Set data into deleteClientLocation\n    this.deleteClientLocation.clientLocationID = clientLocation.clientLocationID;\n    this.deleteClientLocation.clientLocationName = clientLocation.clientLocationName;\n    this.deleteIndex = this.clientLocations.indexOf(clientLocation);\n  }\n\n  onDeleteConfirmClick() {\n    //Invoke the REST-API call\n    this.clientLocationsService.deleteClientLocation(this.deleteClientLocation.clientLocationID).subscribe({\n     next: (response) => {\n        //Delete object in Grid\n        this.clientLocations.splice(this.deleteIndex, 1);\n\n        //Clear deleteCountry\n        this.deleteClientLocation.clientLocationID = null;\n        this.deleteClientLocation.clientLocationName = null;\n\n        //Recall the calculateNoOfPages\n        this.calculateNoOfPages();\n      },\n    error:  (error) => {\n        console.log(error);\n  }});\n  }\n\n  onSearchTextChange(event: any) {\n    this.calculateNoOfPages();\n  }\n}\n","<h5>\n    Client Locations\n    <i class=\"fa fa-circle-o-notch fa-spin\" style=\"font-size:24px\" *ngIf=\"showLoading\"></i>\n  </h5>\n  \n  <div class=\"row\">\n    <div class=\"col-xl-12\">\n      <div class=\"form-group row\">\n  \n        <div class=\"col-md-12 col-lg-12 col-xl-2\">\n          <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#newClientLocationModal\" (click)=\"onNewClick($event)\">Create Client Location</button>\n        </div>\n  \n        <label for=\"drpSearchBy\" class=\"col-form-label col-md-6 col-lg-2 offset-xl-1 col-xl-2 text-right\">Search by:</label>\n  \n        <div class=\"col-md-6 col-lg-4 col-xl-3\">\n          <select class=\"form-control\" id=\"drpSearchBy\" name=\"SearchBy\" [(ngModel)]=\"searchBy\">\n            <option value=\"clientLocationName\">Client Location Name</option>\n          </select>\n        </div>\n  \n        <label for=\"textSearchText\" class=\"col-form-label col-md-6 col-lg-2 col-xl-1 text-right\">Search:</label>\n  \n        <div class=\"col-md-6 col-lg-4 col-xl-3\">\n          <div class=\"input-group\">\n            <input type=\"text\" class=\"form-control\" id=\"txtSearchText\" name=\"SearchText\" [(ngModel)]=\"searchText\" (keyup)=\"onSearchTextChange($event)\">\n          </div>\n        </div>\n      </div>\n    </div>\n  \n  \n    <div class=\"col-xl-12\">\n      <div class=\"row\">\n        <div class=\"col-xl-8 col-lg-9 mx-auto\">\n          <table class=\"table\">\n            <tr class=\"table-dark text-dark\">\n              <th>\n                Client Location Name\n                <i class=\"fa fa-sort hand-icon\" *ngIf=\"sortBy != 'clientLocationName' \" (click)=\"sortBy = 'clientLocationName'; sortOrder = 'ASC' \"></i>\n  \n                <i class=\"fa fa-sort-up hand-icon text-primary\" *ngIf=\"sortBy == 'clientLocationName' && sortOrder == 'ASC' \" (click)=\"sortOrder = 'DESC' \"></i>\n  \n                <i class=\"fa fa-sort-down hand-icon text-primary\" *ngIf=\"sortBy == 'clientLocationName' && sortOrder == 'DESC' \" (click)=\"sortOrder = 'ASC' \"></i>\n              </th>\n  \n              <th class=\"text-center\" style=\"width:200px\">Actions</th>\n            </tr>\n            \n            <tr *ngFor=\"let clientLocation of clientLocations | filter: searchBy : searchText | sort : sortBy : sortOrder | paging : currentPageIndex : pageSize; let i = index\">\n              <td>{{clientLocation.clientLocationName}}</td>\n              <td class=\"text-center\">\n                <button class=\"btn btn-info\" (click)=\"onEditClick($event, clientLocation)\" data-toggle=\"modal\" data-target=\"#editClientLocationModal\">Edit</button>&nbsp;\n                <button class=\"btn btn-warning\" (click)=\"onDeleteClick($event, clientLocation)\" data-toggle=\"modal\" data-target=\"#deleteModal\">Delete</button>\n              </td>\n            </tr>\n          </table>\n        </div>\n      </div>\n    </div>\n  \n    <div class=\"col-12\">\n      <ul class=\"pagination justify-content-center mt-1\">\n        <li class=\"page-item\" (click)=\"onPageIndexClicked(currentPageIndex - 1)\">\n          <a class=\"page-link bg-secondary text-white\" href=\"#\" onclick=\"return false\">Prev</a>\n        </li>\n  \n        <ng-container *ngIf=\"pages.length <= 10\">\n          <li class=\"page-item\" *ngFor=\"let page of pages\" [ngClass]=\"{ 'active': page.pageIndex == currentPageIndex}\" (click)=\"onPageIndexClicked(page.pageIndex)\">\n            <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{page.pageIndex + 1}}</a>\n          </li>\n        </ng-container>\n  \n        <ng-container *ngIf=\"pages.length > 10\">\n          <li class=\"page-item\" [ngClass]=\"{ 'active': currentPageIndex == 0}\" (click)=\"onPageIndexClicked(0)\">\n            <a class=\"page-link\" href=\"#\" onclick=\"return false\">1</a>\n          </li>\n  \n          <li class=\"page-item\" [ngClass]=\"{ 'active': currentPageIndex == 1}\" (click)=\"onPageIndexClicked(1)\">\n            <a class=\"page-link\" href=\"#\" onclick=\"return false\">2</a>\n          </li>\n  \n          <li *ngIf=\"currentPageIndex > 1 && currentPageIndex < pages.length - 2\">&nbsp;...&nbsp;</li>\n  \n          <li class=\"page-item\" [ngClass]=\" 'active' \" (click)=\"onPageIndexClicked(currentPageIndex)\" *ngIf=\"currentPageIndex > 1 && currentPageIndex < pages.length - 2\">\n            <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{currentPageIndex + 1}}</a>\n          </li>\n  \n          <li>&nbsp;...&nbsp;</li>\n  \n          <li class=\"page-item\" [ngClass]=\"{ 'active': currentPageIndex == pages.length - 2}\" (click)=\"onPageIndexClicked(pages.length - 2)\">\n            <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{pages.length - 1}}</a>\n          </li>\n  \n          <li class=\"page-item\" [ngClass]=\"{ 'active': currentPageIndex == pages.length - 1}\" (click)=\"onPageIndexClicked(pages.length - 1)\">\n            <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{pages.length}}</a>\n          </li>\n        </ng-container>\n  \n        <li class=\"page-item\" (click)=\"onPageIndexClicked(currentPageIndex + 1)\">\n          <a class=\"page-link bg-secondary text-white\" href=\"#\" onclick=\"return false\">Next</a>\n        </li>\n      </ul>\n    </div>\n  \n  </div>\n  \n  <form novalidate=\"novalidate\" [formGroup]=\"newForm\">\n    <div class=\"modal\" role=\"dialog\" id=\"newClientLocationModal\">\n      <div class=\"modal-dialog modal-md\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header bg-primary text-white\">\n            <div class=\"modal-title\">New Client Location</div>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n          </div>\n          <div class=\"modal-body\">\n  \n            <div class=\"form-group row\">\n              <label for=\"txtNewClientLocationName\" class=\"col-sm-4 col-form-label\">Client Location Name *</label>\n              <div class=\"col-sm-8\">\n                <input type=\"text\" id=\"txtNewClientLocationName\" class=\"form-control\" placeholder=\"Client Location Name\" name=\"ClientLocationName\"  formControlName=\"clientLocationName\" maxlength=\"30\" #defaultTextBox_New [ngClass]=\"{ 'is-invalid': newForm.get('clientLocationName').invalid && (newForm.get('clientLocationName').dirty || newForm.get('clientLocationName').touched || newForm.submitted), 'is-valid': newForm.get('clientLocationName').valid && (newForm.get('clientLocationName').dirty || newForm.get('clientLocationName').touched || newForm.submitted) }\">\n  \n                <span class=\"text-danger\" *ngIf=\"newForm.get('clientLocationName').invalid && (newForm.get('clientLocationName').dirty || newForm.get('clientLocationName').touched || newForm.submitted) && newForm.get('clientLocationName').errors?.required\">Client Location Name can't be blank</span>\n              </div>\n            </div>\n  \n          </div>\n          <div class=\"modal-footer\">\n            <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"newClientLocationFormCancel\" type=\"button\">Cancel</button>\n            <button class=\"btn btn-success\" (click)=\"onSaveClick()\">Save</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n  \n  <!-- Edit Client Location -->\n  <form novalidate=\"novalidate\" [formGroup]=\"editForm\">\n    <div class=\"modal\" role=\"dialog\" id=\"editClientLocationModal\">\n      <div class=\"modal-dialog modal-md\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header bg-primary text-white\">\n            <div class=\"modal-title\">Edit Client Location</div>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n          </div>\n          <div class=\"modal-body\">\n  \n            <div class=\"form-group row\">\n              <label for=\"txtEditClientLocationName\" class=\"col-sm-4 col-form-label\">Client Location Name *</label>\n              <div class=\"col-sm-8\">\n                <input type=\"text\" id=\"txtEditClientLocationName\" class=\"form-control\" placeholder=\"Client Location Name\" name=\"ClientLocationName\" formControlName=\"clientLocationName\" maxlength=\"30\" #defaultTextBox_Edit [ngClass]=\"{ 'is-invalid': editForm.get('clientLocationName').invalid && (editForm.get('clientLocationName').dirty || editForm.get('clientLocationName').touched || editForm.submitted), 'is-valid': editForm.get('clientLocationName').valid && (editForm.get('clientLocationName').dirty || editForm.get('clientLocationName').touched || editForm.submitted) }\">\n  \n                <span class=\"text-danger\" *ngIf=\"editForm.get('clientLocationName').invalid && (editForm.get('clientLocationName').dirty || editForm.get('clientLocationName').touched || editForm.submitted) && editForm.get('clientLocationName').errors?.required\">Client Location Name can't be blank</span>\n              </div>\n            </div>\n  \n          </div>\n          <div class=\"modal-footer\">\n            <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"editClientLocationFormCancel\" type=\"button\">Cancel</button>\n            <button class=\"btn btn-success\" (click)=\"onUpdateClick()\">Update</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n  \n  \n  <!-- Delete Client Location -->\n  <form>\n    <div class=\"modal\" role=\"dialog\" id=\"deleteModal\">\n      <div class=\"modal-dialog modal-md\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header bg-primary text-white\">\n            <div class=\"modal-title\">Delete Client Location</div>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n          </div>\n          <div class=\"modal-body\">\n  \n            <div class=\"text-warning\">Are you sure to delete this Client Location?</div>\n  \n            <div class=\"form-group row\">\n              <label for=\"txtDeleteClientLocationName\" class=\"col-sm-4 col-form-label\">Client Location Name</label>\n              <div class=\"col-sm-8\">\n                <input type=\"text\" id=\"txtDeleteClientLocationName\" class=\"form-control-plain-text\" style=\"width:300px\" placeholder=\"Client Location Name\" name=\"ClientLocationName\" [(ngModel)]=\"deleteClientLocation.clientLocationName\" disabled=\"disabled\">\n              </div>\n            </div>\n  \n          </div>\n          <div class=\"modal-footer\">\n            <button class=\"btn btn-warning\" data-dismiss=\"modal\" type=\"button\">Cancel</button>\n            <button class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"onDeleteConfirmClick()\">Delete</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Country } from 'src/app/models/country';\nimport { FilterPipe } from 'src/app/pipes/filter.pipe';\nimport { CountriesService } from 'src/app/services/countries.service';\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.scss']\n})\nexport class CountriesComponent implements OnInit {\n  //Objects for Holding Model Data\n  countries: Country[] = [];\n  showLoading: boolean = false;\n\n  //Objects for Delete\n  deleteCountry: Country = new Country();\n  editIndex: number | any = null;\n  deleteIndex: number | any = null;\n\n  //Properties for Searching\n  searchBy: string = \"countryName\";\n  searchText: string = \"\";\n\n  //Properties for Paging\n  currentPageIndex: number = 0;\n  pages: any[] = [];\n  pageSize: number = 7;\n\n  //Reactive Forms\n  newForm: FormGroup | any = null;\n  editForm: FormGroup | any = null;\n\n  //Autofocus TextBoxes\n  @ViewChild(\"defaultTextBox_New\") defaultTextBox_New: ElementRef | any = null;\n  @ViewChild(\"defaultTextBox_Edit\") defaultTextBox_Edit: ElementRef | any = null;\n\n   //Sorting\n   sortBy: string = \"countryName\";\n   sortOrder: string = \"ASC\"; //ASC | DESC\n\n  //Constructor\n  constructor(private countriesService: CountriesService, private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit() {\n    //Get data from database\n    this.countriesService.getCountries().subscribe(\n      (response: Country[]) => {\n        this.countries = response;\n        this.showLoading = false;\n        this.calculateNoOfPages();\n      }\n    );\n\n    //Create newForm\n    this.newForm = this.formBuilder.group({\n      countryID: this.formBuilder.control(null),\n      countryName: this.formBuilder.control(null, [Validators.required])\n    });\n\n    //Create editForm\n    this.editForm = this.formBuilder.group({\n      countryID: this.formBuilder.control(null),\n      countryName: this.formBuilder.control(null, [Validators.required])\n    });\n  }\n\n  calculateNoOfPages() {\n    //Get no. of Pages\n    let filterPipe = new FilterPipe();\n    var noOfPages = Math.ceil(filterPipe.transform(this.countries, this.searchBy, this.searchText).length / this.pageSize);\n    this.pages = [];\n\n    //Generate pages\n    for (let i = 0; i < noOfPages; i++) {\n      this.pages.push({ pageIndex: i });\n    }\n\n    this.currentPageIndex = 0;\n  }\n\n  onPageIndexClicked(ind: number) {\n    //Set currentPageIndex\n    if (ind >= 0 && ind < this.pages.length) {\n      this.currentPageIndex = ind;\n    }\n  }\n\n  onNewClick(event: any) {\n    //reset the newForm\n    this.newForm.reset({ countryID: null });\n    setTimeout(() => {\n      //Focus the ClientLocation textbox in newForm\n      this.defaultTextBox_New.nativeElement.focus();\n    }, 100);\n  }\n\n  onSaveClick() {\n    if (this.newForm.valid) {\n      //Invoke the REST-API call\n      this.countriesService.insertCountry(this.newForm.value).subscribe({\n        next:(response) => {\n        //Add Response to Grid\n        var p: Country = new Country();\n        p.countryID = response.countryID;\n        p.countryName = response.countryName;\n        this.countries.push(p);\n\n        //Reset the newForm\n        this.newForm.reset();\n        $(\"#newCountryFormCancel\").trigger(\"click\");\n        this.calculateNoOfPages();\n\n      }, error: (error) => {\n        console.log(error);\n      }});\n    }\n  }\n\n  onEditClick(event: any, country: Country) {\n    //Reset the editForm\n    this.editForm.reset();\n\n    setTimeout(() => {\n      //Set data into editForm\n      this.editForm.patchValue(country);\n      this.editIndex = this.countries.indexOf(country);\n\n      //Focus the ClientLocation textbox in editForm\n      this.defaultTextBox_Edit.nativeElement.focus();\n    }, 100);\n  }\n\n  onUpdateClick() {\n    if (this.editForm.valid) {\n      //Invoke the REST-API call\n      this.countriesService.updateCountry(this.editForm.value).subscribe((response: Country) => {\n        //Update the response in Grid\n        this.countries[this.editIndex] = response;\n\n        //Reset the editForm\n        this.editForm.reset();\n        $(\"#editCountryFormCancel\").trigger(\"click\");\n      },\n        (error) => {\n          console.log(error);\n        });\n    }\n  }\n\n  onDeleteClick(event: any, country: Country) {\n    //Set data into deleteCountry\n    this.deleteCountry.countryID = country.countryID;\n    this.deleteCountry.countryName = country.countryName;\n    this.deleteIndex = this.countries.indexOf(country);\n  }\n\n  onDeleteConfirmClick() {\n    //Invoke the REST-API call\n    this.countriesService.deleteCountry(this.deleteCountry.countryID).subscribe(\n      (response) => {\n        //Delete object in Grid\n        this.countries.splice(this.deleteIndex, 1);\n\n        //Clear deleteCountry\n        this.deleteCountry.countryID = null;\n        this.deleteCountry.countryName = null;\n\n        this.calculateNoOfPages();\n      },\n      (error) => {\n        console.log(error);\n      });\n  }\n\n  onSearchTextChange(event: any) {\n    //Recall the calculateNoOfPages\n    this.calculateNoOfPages();\n  }\n}\n","<!-- Heading Starts -->\n<h5>\n  Countries\n  <i class=\"fa fa-circle-o-notch fa-spin\" style=\"font-size:24px\" *ngIf=\"showLoading\"></i>\n</h5>\n<!-- Heading Ends -->\n\n<div class=\"row\">\n\n  <!-- Create Box and Search Box Starts -->\n  <div class=\"col-xl-12\">\n    <div class=\"form-group row\">\n\n      <div class=\"col-md-12 col-lg-12 col-xl-2\">\n        <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#newCountryModal\"\n          (click)=\"onNewClick($event)\">Create Country</button>\n      </div>\n\n      <label for=\"drpSearchBy\" class=\"col-form-label col-md-6 col-lg-2 offset-xl-1 col-xl-2 text-right\">Search\n        by:</label>\n\n      <div class=\"col-md-6 col-lg-4 col-xl-3\">\n        <select class=\"form-control\" id=\"drpSearchBy\" name=\"SearchBy\" [(ngModel)]=\"searchBy\">\n          <option value=\"countryName\">Country Name</option>\n        </select>\n      </div>\n\n      <label for=\"textSearchText\" class=\"col-form-label col-md-6 col-lg-2 col-xl-1 text-right\">Search:</label>\n\n      <div class=\"col-md-6 col-lg-4 col-xl-3\">\n        <div class=\"input-group\">\n          <input type=\"text\" class=\"form-control\" id=\"txtSearchText\" name=\"SearchText\" [(ngModel)]=\"searchText\"\n            (keyup)=\"onSearchTextChange($event)\">\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Create Box and Search Box Ends -->\n\n  <!-- Grid Box Starts -->\n  <div class=\"col-xl-12\">\n    <div class=\"row\">\n      <div class=\"col-xl-8 col-lg-9 mx-auto\">\n        <table class=\"table\">\n          <tr class=\"table-dark text-dark\">\n            <th>\n              Country Name\n              <i class=\"fa fa-sort hand-icon\" *ngIf=\"sortBy != 'countryName'\"\n                (click)=\"sortBy = 'countryName'; sortOrder = 'ASC' \"></i>\n\n              <i class=\"fa fa-sort-up hand-icon text-primary\" *ngIf=\"sortBy == 'countryName' && sortOrder == 'ASC'\"\n                (click)=\"sortOrder = 'DESC' \"></i>\n\n              <i class=\"fa fa-sort-down hand-icon text-primary\" *ngIf=\"sortBy == 'countryName' && sortOrder == 'DESC'\"\n                (click)=\"sortOrder = 'ASC' \"></i>\n            </th>\n\n            <th class=\"text-center\" style=\"width:200px\">Actions</th>\n          </tr>\n\n          <tr\n            *ngFor=\"let country of countries | filter: searchBy : searchText | sort: sortBy : sortOrder | paging : currentPageIndex : pageSize; let i = index\">\n            <td>{{country.countryName}}</td>\n            <td class=\"text-center\">\n              <button class=\"btn btn-info\" (click)=\"onEditClick($event, country)\" data-toggle=\"modal\"\n                data-target=\"#editCountryModal\">Edit</button>&nbsp;\n              <button class=\"btn btn-warning\" (click)=\"onDeleteClick($event, country)\" data-toggle=\"modal\"\n                data-target=\"#deleteCountryModal\">Delete</button>\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n  <!-- Grid Box Ends -->\n\n  <!-- Paging Box Starts -->\n  <div class=\"col-12\">\n    <ul class=\"pagination justify-content-center mt-1\">\n      <li class=\"page-item\" (click)=\"onPageIndexClicked(currentPageIndex - 1)\">\n        <a class=\"page-link bg-secondary text-white\" href=\"#\" onclick=\"return false\">Prev</a>\n      </li>\n\n      <ng-container *ngIf=\"pages.length <= 10\">\n        <li class=\"page-item\" *ngFor=\"let page of pages\" [ngClass]=\"{ 'active': page.pageIndex == currentPageIndex}\"\n          (click)=\"onPageIndexClicked(page.pageIndex)\">\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{page.pageIndex + 1}}</a>\n        </li>\n      </ng-container>\n\n      <ng-container *ngIf=\"pages.length > 10\">\n        <li class=\"page-item\" [ngClass]=\"{ 'active': currentPageIndex == 0}\" (click)=\"onPageIndexClicked(0)\">\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">1</a>\n        </li>\n\n        <li class=\"page-item\" [ngClass]=\"{ 'active': currentPageIndex == 1}\" (click)=\"onPageIndexClicked(1)\">\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">2</a>\n        </li>\n\n        <li *ngIf=\"currentPageIndex > 1 && currentPageIndex < pages.length - 2\">&nbsp;...&nbsp;</li>\n\n        <li class=\"page-item\" [ngClass]=\" 'active' \" (click)=\"onPageIndexClicked(currentPageIndex)\"\n          *ngIf=\"currentPageIndex > 1 && currentPageIndex < pages.length - 2\">\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{currentPageIndex + 1}}</a>\n        </li>\n\n        <li>&nbsp;...&nbsp;</li>\n\n        <li class=\"page-item\" [ngClass]=\"{ 'active': currentPageIndex == pages.length - 2}\"\n          (click)=\"onPageIndexClicked(pages.length - 2)\">\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{pages.length - 1}}</a>\n        </li>\n\n        <li class=\"page-item\" [ngClass]=\"{ 'active': currentPageIndex == pages.length - 1}\"\n          (click)=\"onPageIndexClicked(pages.length - 1)\">\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{pages.length}}</a>\n        </li>\n      </ng-container>\n\n      <li class=\"page-item\" (click)=\"onPageIndexClicked(currentPageIndex + 1)\">\n        <a class=\"page-link bg-secondary text-white\" href=\"#\" onclick=\"return false\">Next</a>\n      </li>\n    </ul>\n  </div>\n  <!-- Paging Box Ends -->\n\n</div>\n\n\n<!-- New Modal Starts -->\n<form novalidate=\"novalidate\" [formGroup]=\"newForm\">\n  <div class=\"modal\" role=\"dialog\" id=\"newCountryModal\">\n    <div class=\"modal-dialog modal-md\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header bg-primary text-white\">\n          <div class=\"modal-title\">New Country</div>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n        </div>\n        <div class=\"modal-body\">\n\n          <div class=\"form-group row\">\n            <label for=\"txtNewCountryName\" class=\"col-sm-4 col-form-label\">Country Name *</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtNewCountryName\" class=\"form-control\" placeholder=\"Country Name\"\n                name=\"CountryName\" formControlName=\"countryName\" maxlength=\"30\" #defaultTextBox_New\n                [ngClass]=\"{ 'is-invalid': newForm.get('countryName').invalid && (newForm.get('countryName').dirty || newForm.get('countryName').touched || newForm.submitted), 'is-valid': newForm.get('countryName').valid && (newForm.get('countryName').dirty || newForm.get('countryName').touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"newForm.get('countryName').invalid && (newForm.get('countryName').dirty || newForm.get('countryName').touched || newForm.submitted) && newForm.get('countryName').errors?.required\">Country\n                Name can't be blank</span>\n            </div>\n          </div>\n\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"newCountryFormCancel\" type=\"button\">Cancel</button>\n          <button class=\"btn btn-success\" (click)=\"onSaveClick()\">Save</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<!-- New Modal Ends -->\n\n\n<!-- Edit Modal Starts -->\n<form novalidate=\"novalidate\" [formGroup]=\"editForm\">\n  <div class=\"modal\" role=\"dialog\" id=\"editCountryModal\">\n    <div class=\"modal-dialog modal-md\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header bg-primary text-white\">\n          <div class=\"modal-title\">Edit Country</div>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n        </div>\n        <div class=\"modal-body\">\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditCountryName\" class=\"col-sm-4 col-form-label\">Country Name *</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtEditCountryName\" class=\"form-control\" placeholder=\"Country Name\"\n                name=\"CountryName\" formControlName=\"countryName\" maxlength=\"30\" #defaultTextBox_Edit\n                [ngClass]=\"{ 'is-invalid': editForm.get('countryName').invalid && (editForm.get('countryName').dirty || editForm.get('countryName').touched || editForm.submitted), 'is-valid': editForm.get('countryName').valid && (editForm.get('countryName').dirty || editForm.get('countryName').touched || editForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"editForm.get('countryName').invalid && (editForm.get('countryName').dirty || editForm.get('countryName').touched || editForm.submitted) && editForm.get('countryName').errors?.required\">Country\n                Name can't be blank</span>\n            </div>\n          </div>\n\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"editCountryFormCancel\" type=\"button\">Cancel</button>\n          <button class=\"btn btn-success\" (click)=\"onUpdateClick()\">Update</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<!-- Edit Modal Ends -->\n\n\n<!-- Delete Modal Starts -->\n<form>\n  <div class=\"modal\" role=\"dialog\" id=\"deleteCountryModal\">\n    <div class=\"modal-dialog modal-md\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header bg-primary text-white\">\n          <div class=\"modal-title\">Delete Country</div>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n        </div>\n        <div class=\"modal-body\">\n\n          <div class=\"text-warning\">Are you sure to delete this Country?</div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtDeleteCountryName\" class=\"col-sm-4 col-form-label\">Country Name</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtDeleteCountryName\" class=\"form-control-plain-text\" style=\"width:300px\"\n                placeholder=\"Country Name\" name=\"CountryName\" [(ngModel)]=\"deleteCountry.countryName\"\n                disabled=\"disabled\">\n            </div>\n          </div>\n\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-dismiss=\"modal\" type=\"button\">Cancel</button>\n          <button class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"onDeleteConfirmClick()\">Delete</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<!-- Delete Modal Ends -->","import { Component, OnInit } from '@angular/core';\nimport { DashboardService } from 'src/app/services/dashboard.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit\n{\n  Designation: string = \"\";\n  Username: string = \"\";\n  NoOfTeamMembers: number = 0;\n  TotalCostOfAllProjects: number = 0;\n  PendingTasks: number = 0;\n  UpComingProjects: number = 0;\n  ProjectCost: number = 0;\n  CurrentExpenditure: number = 0;\n  AvailableFunds: number = 0;\n  ToDay !: Date;\n\n  Clients: string[] = [];\n  Projects: string[] = [];\n  Years: number[] = [];\n  TeamMembersSummary: any = [];\n  TeamMembers: any = [];\n\nconstructor(private dashboardService:DashboardService){}\n\n  ngOnInit()\n  {\n    this.Designation = 'Team Leader';\n    this.Username = 'Scott Smith';\n    this.NoOfTeamMembers = 67;\n    this.TotalCostOfAllProjects = 240;\n    this.PendingTasks = 15;\n    this.UpComingProjects = 2;\n    this.ProjectCost = 2113507;\n    this.CurrentExpenditure = 96788;\n    this.AvailableFunds = 52536;\n    this.ToDay=new Date();\n    \n    this.Clients = [\n      'ABC Infotech Ltd.',\n      'DEF Software Solutions',\n      'GHI Industries',\n    ];\n\n    this.Projects = ['Project A', 'Project B', 'Project C', 'Project D'];\n\n    for (var i = 2019; i >= 2010; i--)\n    {\n      this.Years.push(i);\n    }\n\n    this.TeamMembersSummary = this.dashboardService.getTeamMembersSummary();\n\n    this.TeamMembers = [\n      {\n        Region: 'East',\n        Members: [\n          { ID: 1, Name: 'Ford', Status: 'Available' },\n          { ID: 2, Name: 'Miller', Status: 'Available' },\n          { ID: 3, Name: 'Jones', Status: 'Busy' },\n          { ID: 4, Name: 'James', Status: 'Busy' },\n        ],\n      },\n      {\n        Region: 'West',\n        Members: [\n          { ID: 5, Name: 'Anna', Status: 'Available' },\n          { ID: 6, Name: 'Arun', Status: 'Available' },\n          { ID: 7, Name: 'Varun', Status: 'Busy' },\n          { ID: 8, Name: 'Jasmine', Status: 'Busy' },\n        ],\n      },\n      {\n        Region: 'South',\n        Members: [\n          { ID: 9, Name: 'Krishna', Status: 'Available' },\n          { ID: 10, Name: 'Mohan', Status: 'Available' },\n          { ID: 11, Name: 'Raju', Status: 'Busy' },\n          { ID: 12, Name: 'Farooq', Status: 'Busy' },\n        ],\n      },\n      {\n        Region: 'North',\n        Members: [\n          { ID: 13, Name: 'Jacob', Status: 'Available' },\n          { ID: 14, Name: 'Smith', Status: 'Available' },\n          { ID: 15, Name: 'Jones', Status: 'Busy' },\n          { ID: 16, Name: 'James', Status: 'Busy' },\n        ],\n      },\n    ];\n  }\n\n  onProjectChange($event:any){if ($event.target.innerHTML.trim() == 'Project A')\n  {\n    this.ProjectCost = 2113507;\n    this.CurrentExpenditure = 96788;\n    this.AvailableFunds = 52436;\n  } else if ($event.target.innerHTML.trim() == 'Project B')\n  {\n    this.ProjectCost = 88923;\n    this.CurrentExpenditure = 22450;\n    this.AvailableFunds = 2640;\n  } else if ($event.target.innerHTML.trim() == 'Project C')\n  {\n    this.ProjectCost = 662183;\n    this.CurrentExpenditure = 7721;\n    this.AvailableFunds = 9811;\n  } else if ($event.target.innerHTML.trim() == 'Project D')\n  {\n    this.ProjectCost = 928431;\n    this.CurrentExpenditure = 562;\n    this.AvailableFunds = 883;\n  }}\n}\n","<nav>\n    <ol class=\"breadcrumb\">\n      <li class=\"breadcrumb-item\"><a routerLink=\"/\">Home</a></li>\n      <li class=\"breadcrumb-item active\">Dashboard</li>\n    </ol>\n  </nav>\n  \n  <h5>Dashboard</h5>\n  <h6>{{ToDay | date:\"d/M/y\"}}</h6>\n  <div class=\"row\">\n    <div class=\"col-lg-3 pb-3\" style=\"background-color: #e9e6e6\">\n      <div class=\"row\">\n        <div\n          class=\"col-11 text-white text-center mx-auto rounded pt-2 pb-2 font-weight-bold\"\n          style=\"\n            background-color: #a39e9e;\n            font-family: 'Arial Narrow Bold', sans-serif;\n          \"\n        >\n          {{ Designation | uppercase}}\n        </div>\n        <div class=\"col-12 text-center mt-2\">\n          <img src=\"assets/user.png\" width=\"120px\" />\n        </div>\n        <div\n          class=\"col-12 text-center pt-2 pb-2 font-weight-bold\"\n          style=\"font-family: Tahoma\"\n        >\n          {{ Username }}\n        </div>\n        <div class=\"col-12 text-center pt-2 pb-2\" style=\"font-family: Arial\">\n          TEAM SUMMARY\n        </div>\n        <div class=\"col-12 mb-3\">\n          <ul class=\"list-group\">\n            <li\n              class=\"list-group-item d-flex justify-content-between align-items-center\"\n            >\n              NO. OF TEAM MEMBERS\n              <span\n                class=\"badge badge-secondary badge-pill\"\n                style=\"font-size: 13px\"\n                >{{ NoOfTeamMembers }}</span\n              >\n            </li>\n            <li\n              class=\"list-group-item d-flex justify-content-between align-items-center\"\n            >\n              TOTAL COST OF ALL PROJECTS\n              <span\n                class=\"badge badge-secondary badge-pill\"\n                style=\"font-size: 13px\"\n                >$ {{ TotalCostOfAllProjects }} k</span\n              >\n            </li>\n            <li\n              class=\"list-group-item d-flex justify-content-between align-items-center\"\n            >\n              PENDING TASKS\n              <span\n                class=\"badge badge-secondary badge-pill\"\n                style=\"font-size: 13px\"\n                >{{ PendingTasks }}</span\n              >\n            </li>\n            <li\n              class=\"list-group-item d-flex justify-content-between align-items-center\"\n            >\n              UPCOMING PROJECTS\n              <span\n                class=\"badge badge-secondary badge-pill\"\n                style=\"font-size: 13px\"\n                >{{ UpComingProjects }}</span\n              >\n            </li>\n          </ul>\n        </div>\n        <div\n          class=\"col-12 text-center pt-2 pb-2\"\n          style=\"font-family: 'Arial Narrow'\"\n        >\n          CLIENTS\n        </div>\n        <div class=\"col-12\">\n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\" *ngFor=\"let client of Clients\">{{client}}</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-lg-6\">\n      <div class=\"row\">\n        <div class=\"col-12 pt-0 pb-2\" style=\"background-color: #e9e6e6\">\n          <div class=\"row mt-2\">\n            <div class=\"col-6 text-left\">\n              <div class=\"dropdown\">\n                <button\n                  class=\"btn btn-secondary dropdown-toggle\"\n                  type=\"button\"\n                  id=\"dropdownMenuButton1\"\n                  data-toggle=\"dropdown\"\n                >\n                  Project A\n                </button>\n                <div class=\"dropdown-menu\">\n                  <a class=\"dropdown-item\" href=\"#\" *ngFor=\"let project of Projects\" onclick=\"return false\"\n                  (click)=\"onProjectChange($event)\"\n                  >{{project}}</a></div>\n              </div>\n            </div>\n            <div class=\"col-6 text-right\">\n              <div class=\"dropdown\">\n                <button\n                  class=\"btn btn-secondary dropdown-toggle\"\n                  type=\"button\"\n                  id=\"dropdownMenuButton2\"\n                  data-toggle=\"dropdown\"\n                >\n                  2019\n                </button>\n                <div class=\"dropdown-menu\">\n                  <a class=\"dropdown-item\" href=\"#\" *ngFor=\"let year of Years\" onclick=\"return false\">{{year}}</a>                  \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div\n          class=\"col-11 mx-auto mt-1 text-white text-center pt-2 pb-2 mx-auto rounded font-weight-bold\"\n          style=\"background-color: #718d97; font-family: 'Arial Narrow'\"\n        >\n          PROJECT BRIEFING\n        </div>\n        <div class=\"col-12\">\n          <table class=\"table table-borderless\">\n            <tr>\n              <td>Project Cost</td>\n              <td>{{ ProjectCost |currency:\"USD\"}}</td>\n            </tr>\n            <tr>\n              <td>Current Expenditure</td>\n              <td>{{ CurrentExpenditure|currency:\"USD\" }}</td>\n            </tr>\n            <tr>\n              <td>Available Funds</td>\n              <td>{{ AvailableFunds |currency:\"USD\"}}</td>\n            </tr>\n          </table>\n        </div>\n        <div\n          class=\"col-11 mx-auto mt-1 text-white text-center pt-2 pb-2 mx-2 rounded font-weight-bold\"\n          style=\"background-color: #718d97; font-family: 'Arial Narrow'\"\n        >\n          TEAM MEMBERS SUMMARY\n        </div>\n        <div class=\"col-12\">\n          <table class=\"table\">\n            <tr>\n              <th>Region</th>\n              <th>Team Members Count</th>\n              <th>Temporarily Unavailable Members</th>\n            </tr>\n            <tr *ngFor=\"let teammembersummary of TeamMembersSummary\">\n              <td>\n                <b>{{teammembersummary.Region}}</b>\n              </td>\n              <td>{{teammembersummary.TeamMembersCount}}</td>\n              <td>{{teammembersummary.TemporarilyUnavailableMembers}}</td>\n            </tr>\n           \n          </table>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-lg-3\" style=\"background-color: #e9e6e6\">\n      <div class=\"row\">\n        <div\n          class=\"col-11 mx-auto mt-1 text-white text-center pt-1 pb-2 mx-2 rounded font-weight-bold\"\n          style=\"background-color: #718d97; font-family: 'Arial Narrow'\"\n        >\n          TEAM MEMBERS\n        </div>\n        <div class=\"col-lg-12 pt-2\">\n          <div class=\"accordion\" id=\"accordion1\">\n            <!-- east starts -->\n            <div class=\"card\" *ngFor=\"let teammember of TeamMembers; let i=index\">\n              <div class=\"card-header bg-secondary\" id=\"card1\">\n                <h2 class=\"mb-0\">\n                  <button\n                    class=\"btn btn-link text-white\"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    [attr.data-target]=\"'#cardbody'+i\"\n                  >\n                    {{teammember.Region}}\n                  </button>\n                </h2>\n              </div>\n              <div [id]=\"'cardbody'+i\" class=\"collapse\" data-parent=\"#accordion1\" [ngClass]=\"(i==0)?'show':''\">\n                <div class=\"card-body\">\n                  <table class=\"table\">\n                    <thead>\n                      <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Status</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr *ngFor=\"let member of teammember.Members\">\n                        <td>{{member.ID}}</td>\n                        <td>{{member.Name}}</td>\n                        <td [style.color]=\"(member.Status=='Busy')?'red':'black'\" >{{member.Status}}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n           \n          </div>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, ComponentFactoryResolver, OnInit, QueryList, ViewChildren } from '@angular/core';\nimport { ComponentLoaderDirective } from 'src/app/directives/component-loader.directive';\nimport { CountriesComponent } from '../countries/countries.component';\nimport { ClientLocationsComponent } from '../client-locations/client-locations.component';\nimport { TaskPrioritiesComponent } from '../task-priorities/task-priorities.component';\nimport { TaskStatusComponent } from '../task-status/task-status.component';\n\n@Component({\n  selector: 'app-masters',\n  templateUrl: './masters.component.html',\n  styleUrls: ['./masters.component.scss']\n})\nexport class MastersComponent implements OnInit {\n  masterMenuItems = [\n    { itemName: \"Countries\", displayName: \"Countries\", component: CountriesComponent },\n    { itemName: \"ClientLocations\", displayName: \"Client Locations\", component: ClientLocationsComponent },\n    { itemName: \"TaskPriorities\", displayName: \"Task Priorities\", component: TaskPrioritiesComponent },\n    { itemName: \"TaskStatus\", displayName: \"Task Status\", component: TaskStatusComponent },\n  ];\n\n  activeItem: string = \"\";\n  tabs: any[] = [];\n\n  @ViewChildren(ComponentLoaderDirective) componentLoaders: QueryList<ComponentLoaderDirective> | any = null;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n  }\n\n  ngOnInit() {\n  }\n\n  menuItemClick(clickedMasterMenuItem: any) {\n    //console.log(clickedMasterMenuItem);\n    this.activeItem = clickedMasterMenuItem.itemName;\n\n    let matchingTabs = this.tabs.filter((tab) => {\n      return tab.itemName == clickedMasterMenuItem.itemName\n    });\n\n    if (matchingTabs.length == 0) {\n      this.tabs.push({\n        tabIndex: this.tabs.length,\n        itemName: clickedMasterMenuItem.itemName,\n        displayName: clickedMasterMenuItem.displayName\n      });\n\n      setTimeout(() => {\n        var componentLoadersArray = this.componentLoaders.toArray();\n        var componentFactory = this.componentFactoryResolver.resolveComponentFactory(clickedMasterMenuItem.component);\n\n        var viewContainterRef = componentLoadersArray[this.tabs.length - 1].viewContainerRef;\n        this.tabs[this.tabs.length - 1].viewContainerRef = viewContainterRef;\n\n        var componentRef = viewContainterRef.createComponent(componentFactory);\n\n        if (clickedMasterMenuItem.component.name == \"CountriesComponent\") {\n          var componentInstance = componentRef.instance as CountriesComponent;\n         // componentInstance.message = \"Hello to Countries\";\n        }\n      }, 100);\n    }\n\n   \n  }\n  onCloseClick(clickedTab: any) {\n    clickedTab.viewContainerRef.remove();\n    this.tabs.splice(this.tabs.indexOf(clickedTab), 1);\n    if (this.tabs.length > 0) {\n      this.activeItem = this.tabs[0].itemName;\n    }\n  }\n}\n","<h5>Masters</h5>\n<div class=\"row\">\n    <div class=\"col-md-2\">\n        <div class=\"list-group\">\n            <a href=\"#\" class=\"list-group-item list-group-item-action\" onclick=\"return false\"\n                *ngFor=\"let masterMenuItem of masterMenuItems\"\n                [ngClass]=\"{ 'active': activeItem == masterMenuItem.itemName}\" (click)=\"menuItemClick(masterMenuItem)\">\n                {{masterMenuItem.displayName}}\n            </a>\n        </div>\n    </div>\n\n    <div class=\"col-md-8\">\n        <ul class=\"nav nav-tabs\" role=\"tablist\">\n            <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\n                <a class=\"nav-link\" data-toggle=\"tab\" role=\"tab\" [href]=\" '#' + tab.itemName\"\n                    [ngClass]=\"{ 'active': activeItem == tab.itemName}\" (click)=\"activeItem = tab.itemName\">\n                    {{tab.displayName}}\n                    <span class=\"fa fa-window-close\" (click)=\"onCloseClick(tab)\">\n                    </span>\n                </a>\n            </li>\n        </ul>\n\n        <div class=\"tab-content\">\n            <div class=\"tab-pane fade show\" role=\"tabpanel\" *ngFor=\"let tab of tabs\" [id]=\"tab.itemName\"\n                [ngClass]=\"{ 'active': activeItem == tab.itemName}\">\n                <div class=\"pl-md-3 pr-md-3 mx-auto\">\n                    <ng-template appComponentLoader>\n                    </ng-template>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.scss']\n})\nexport class MyProfileComponent {\n\n}\n","<p>my-profile works!</p>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Project } from 'src/app/models/project';\nimport { ProjectsService } from '../../../services/projects.service';\n\n@Component({\n  selector: 'app-project-details',\n  templateUrl: './project-details.component.html',\n  styleUrls: ['./project-details.component.scss']\n})\nexport class ProjectDetailsComponent {\n  project: Project;\n  routeParmsSubscription: Subscription | any = null;\n\n  constructor(private activatedRoute: ActivatedRoute, private projectsService: ProjectsService) {\n    this.project = new Project();\n  }\n\n  ngOnInit() {\n    this.routeParmsSubscription = this.activatedRoute.params.subscribe((params) => {\n      let pid = params[\"projectid\"];\n\n      this.projectsService.getProjectByProjectID(pid).subscribe((proj: Project) => {\n        this.project = proj;\n      });\n\n    });\n  }\n\n  ngOnDestroy() {\n    this.routeParmsSubscription.unsubscribe();\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-md-8 col-lg-6 col-xl-5 mx-auto\">\n      <div class=\"card card-primary mb-1\">\n  \n        <div class=\"card-header\">\n          <div>#{{project.projectID}}</div>\n          <h5>{{project.projectName}}</h5>\n        </div>\n  \n        <div class=\"card-body\">\n          <table class=\"table table-borderless table-sm\">\n            <tr>\n              <th>Date of Start</th>\n              <td>{{project.dateOfStart}}</td>\n            </tr>\n            <tr>\n              <th>Team Size</th>\n              <td>\n                <span>{{project.teamSize}} </span>\n                <!-- <span class=\"text-info\">{{project.teamSize}}</span> -->\n              </td>\n            </tr>\n            <tr>\n              <th>Client Location</th>\n              <td>{{project.clientLocation?.clientLocationName}}</td>\n            </tr>\n            <tr>\n              <th>Status</th>\n              <td>{{project.status}}</td>\n            </tr>\n          </table>\n        </div>\n  \n        <div class=\"card-footer\">\n          <a class=\"btn btn-info\" [routerLink]=\" [ '/admin', 'projects'] \">\n            Back\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, ContentChildren, EventEmitter, Input, OnInit, Output, QueryList } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Project } from 'src/app/models/project';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { CheckBoxPrinterComponent } from '../check-box-printer/check-box-printer.component';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.scss']\n})\nexport class ProjectComponent implements OnInit {\n\n  @Input(\"currentProject\") project !: Project;\n  @Input(\"recordIndex\") i !: number;\n\n  @Output() editClick = new EventEmitter();\n  @Output() deleteClick = new EventEmitter();\n\n  MySubscription: Subscription | any;\n  \n  hideDetails: boolean = false;\n\n  constructor(public projectsService:ProjectsService){}\n  ngOnInit(): void {\n    this.MySubscription = this.projectsService.MySubject.subscribe((hide) => {\n      this.hideDetails = hide;\n    });\n  }\n\n  onEditClick(event: any, i: number)\n  {\n    this.editClick.emit({event, i})\n  }\n\n  onDeleteClick(event: any, i: number)\n  {\n    this.deleteClick.emit({event, i})\n  }\n\n  ngOnDestroy()\n  {\n    this.MySubscription.unsubscribe();\n  }\n\n  @ContentChildren(\"selectionBox\") selectionBoxes: QueryList<CheckBoxPrinterComponent> | any = null;\n\n  isAllCheckedChange(b: boolean)\n  {\n    let selectionBox = this.selectionBoxes.toArray();\n    if (b)\n    {\n      for (let i = 0; i < selectionBox.length; i++)\n      {\n        selectionBox[i].check();\n      }\n    }\n    else\n    {\n      for (let i = 0; i < selectionBox.length; i++)\n      {\n        selectionBox[i].unCheck();\n      }\n    }\n  }\n}\n","<div class=\"card card-primary\">\n\n  <div class=\"card-header\">\n    <div class=\"row\">\n      <div class=\"col-11\">\n        <div>#{{project.projectID}}</div>\n        <h5>{{project.projectName}}</h5>\n      </div>\n      <div class=\"col-1\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"card-body\">\n    <table class=\"table table-borderless table-sm\" [hidden]=\"hideDetails\">\n      <tr>\n        <th>Date of Start</th>\n        <td>{{project.dateOfStart}}</td>\n      </tr>\n      <tr>\n        <th>Team Size</th>\n        <td>{{project.teamSize}}</td>\n      </tr>\n      <tr>\n        <th>Client Location</th>\n        <td>{{project.clientLocation?.clientLocationName}}</td>\n      </tr>\n      <tr>\n        <th>Status</th>\n        <td>{{project.status}}</td>\n      </tr>\n    </table>\n  </div>\n\n  <div class=\"card-footer\">\n    <button class=\"btn btn-info\" (click)=\"onEditClick($event, i)\" data-toggle=\"modal\" data-target=\"#editModal\">Edit</button>&nbsp;\n    <button class=\"btn btn-warning\" (click)=\"onDeleteClick($event, i)\" data-toggle=\"modal\" data-target=\"#deleteModal\">Delete</button>\n    <a class=\"btn btn-primary\" [routerLink]=\" ['/admin' ,'projects', 'view', project.projectID] \">Learn More</a>\n  </div>\n</div>","import { Component, ElementRef, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ClientLocation } from 'src/app/models/client-location';\nimport { ClientLocationsService } from 'src/app/services/client-locations.service';\nimport { Project } from 'src/app/models/project';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport * as $ from 'jquery';\nimport { ProjectComponent } from '../project/project.component';\nimport { FilterPipe } from 'src/app/pipes/filter.pipe';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss'],\n})\n\nexport class ProjectsComponent implements OnInit {\n  projects: Project[] = [];\n  clientLocations: ClientLocation[] = [];\n  showLoading: boolean = true;\n\n  newProject: Project = new Project();\n  editProject: Project = new Project();\n  editIndex: any = null;\n  deleteProject: Project = new Project();\n  deleteIndex: any = null;\n  searchBy: string = 'ProjectName';\n  searchText: string = '';\n\n  currentPageIndex: number = 0;\n  pages: any[] = [];\n  pageSize: number = 3;\n\n  @ViewChild(\"newForm\") newForm: NgForm | any = null;\n  @ViewChild(\"editForm\") editForm: NgForm | any = null;\n\n  constructor(\n    private projectService: ProjectsService,\n    private clientLocationsService: ClientLocationsService\n  ) {}\n\n  ngOnInit() {\n    this.projectService.getAllProjects().subscribe({\n      next: (response: Project[]) => {\n        this.projects = response;\n        this.showLoading = false;\n        this.calculateNoOfPages();\n      },\n      error: (error) => {\n        console.log(error);\n        alert('Authentication Failed');\n      },\n    });\n\n    this.clientLocationsService.getClientLocations().subscribe({\n      next: (response) => {\n        this.clientLocations = response;\n      },\n      error: (error) => {\n        console.log(error);\n      },\n    });\n  }\n\n  calculateNoOfPages()\n  {\n    let filterPipe = new FilterPipe();\n    var resultProjects = filterPipe.transform(this.projects, this.searchBy, this.searchText);\n    var noOfPages = Math.ceil(resultProjects.length  / this.pageSize);\n\n    this.pages = [];\n    for (let i = 0; i < noOfPages; i++)\n    {\n      this.pages.push( { pageIndex: i });\n    }\n\n    this.currentPageIndex = 0;\n  }\n\n  isAllChecked: boolean = false;\n\n  @ViewChildren(\"prj\") projs : QueryList<ProjectComponent> | any = null;\n\n  isAllCheckedChange(event: any)\n  {\n    let proj = this.projs.toArray();\n    for (let i = 0; i < proj.length; i++)\n    {\n      proj[i].isAllCheckedChange(this.isAllChecked);\n    }\n  }\n\n  @ViewChild(\"prjID\") prjID: ElementRef | any = null;\n\n  onNewClick(event: any)\n  {\n    this.newForm.resetForm();\n    setTimeout(() => {\n      this.prjID.nativeElement.focus();\n    }, 100);\n  }\n\n  onSaveClick() {\n    if (this.newForm.valid) {\n      this.newProject.clientLocation.clientLocationID = 0;\n      this.projectService.insertProject(this.newProject).subscribe({\n        next: (response) => {\n          //Add Project to Grid\n          var p: Project = new Project();\n          p.projectID = response.projectID;\n          p.projectName = response.projectName;\n          p.dateOfStart = response.dateOfStart;\n          p.teamSize = response.teamSize;\n          p.clientLocation = response.clientLocation;\n          p.active = response.active;\n          p.clientLocationID = response.clientLocationID;\n          p.status = response.status;\n          this.projects.push(p);\n\n          //Clear New Project Dialog - TextBoxes\n          this.newProject.projectID = null;\n          this.newProject.projectName = null;\n          this.newProject.dateOfStart = null;\n          this.newProject.teamSize = null;\n          this.newProject.active = false;\n          this.newProject.clientLocationID = null;\n          this.newProject.status = null;\n          \n          $('#newFormCancel').trigger('click');\n          this.calculateNoOfPages();\n        },\n        error: (error) => {\n          console.log(error);\n        },\n      });\n    }\n  }\n\n  onEditClick(event: any, index: number) {\n    this.editForm.resetForm();\n    setTimeout(() => {\n      this.editProject.projectID = this.projects[index].projectID;\n      this.editProject.projectName = this.projects[index].projectName;\n      this.editProject.dateOfStart = this.projects[index].dateOfStart\n        .split('/')\n        .reverse()\n        .join('-'); //yyyy-MM-dd\n      this.editProject.teamSize = this.projects[index].teamSize;\n      this.editProject.active = this.projects[index].active;\n      this.editProject.clientLocationID = this.projects[index].clientLocationID;\n      this.editProject.clientLocation = this.projects[index].clientLocation;\n      this.editProject.status = this.projects[index].status;\n      this.editIndex = index;\n    }, 100);\n  }\n\n  onUpdateClick() {\n    debugger;\n    if (this.editForm.valid) {\n      this.projectService.updateProject(this.editProject).subscribe({\n        next: (response: Project) => {\n          var p: Project = new Project();\n          p.projectID = response.projectID;\n          p.projectName = response.projectName;\n          p.dateOfStart = response.dateOfStart;\n          p.teamSize = response.teamSize;\n          p.clientLocation = response.clientLocation;\n          p.active = response.active;\n          p.clientLocationID = response.clientLocationID;\n          p.status = response.status;\n          this.projects[this.editIndex] = p;\n\n          this.editProject.projectID = null;\n          this.editProject.projectName = null;\n          this.editProject.dateOfStart = null;\n          this.editProject.teamSize = null;\n          this.newProject.active = false;\n          this.newProject.clientLocationID = null;\n          this.newProject.status = null;\n\n          $('#editFormCancel').trigger('click');\n        },\n        error: (error) => {\n          console.log(error);\n        },\n      });\n    }\n  }\n\n  onDeleteClick(event: any, index: number) {\n    this.deleteIndex = index;\n    this.deleteProject.projectID = this.projects[index].projectID;\n    this.deleteProject.projectName = this.projects[index].projectName;\n    this.deleteProject.dateOfStart = this.projects[index].dateOfStart;\n    this.deleteProject.teamSize = this.projects[index].teamSize;\n  }\n\n  onDeleteConfirmClick() {\n    this.projectService.deleteProject(this.deleteProject.projectID).subscribe({\n      next: (response) => {\n        this.projects.splice(this.deleteIndex, 1);\n        this.deleteProject.projectID = null;\n        this.deleteProject.projectName = null;\n        this.deleteProject.dateOfStart = null;\n        this.deleteProject.teamSize = null;\n        this.calculateNoOfPages();\n      },\n      error: (error) => {\n        console.log(error);\n      },\n    });\n  }\n\n  onSearchClick() {\n    // this.projectService\n    //   .SearchProjects(this.searchBy, this.searchText)\n    //   .subscribe({\n    //     next: (response: Project[]) => {\n    //       this.projects = response;\n    //     },\n    //     error: (error) => {\n    //       console.log(error);\n    //     },\n    //   });\n  }\n\n  onSearchTextKeyup(event: any)\n  {\n    this.calculateNoOfPages();\n  }\n\n  onHideShowDetails(event:any){\n    this.projectService.toggleDetails();\n  }\n\n  onPageIndexClicked(pageIndex: number)\n  {\n    this.currentPageIndex = pageIndex;\n  }\n}\n","<h1>\n  Projects\n  <i class=\"fa fa-circle-o-notch fa-spin\" style=\"font-size:34px\" *ngIf=\"showLoading\"></i>\n</h1>\n<div class=\"row\">\n  <div class=\"col-xl-12 mx-auto\">\n    <div class=\"form-group form-row\">\n\n      <div class=\"col-2\">\n        <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#newModal\" (click)=\"onNewClick($event)\">Create\n          Project</button>\n      </div>\n      <div class=\"col-2\">\n        <button class=\"btn btn-secondary\" (click)=\"onHideShowDetails($event)\">Hide/Show Details</button>\n      </div>\n\n      <div class=\"col-1 custom-control custom-checkbox\">\n        <input type=\"checkbox\" value=\"true\" name=\"isAllChecked\" id=\"isAllChecked\" [(ngModel)]=\"isAllChecked\"\n          class=\"custom-control-input\" (change)=\"isAllCheckedChange($event)\">\n        <label class=\"custom-control-label\" for=\"isAllChecked\"></label>\n      </div>\n\n      <label for=\"drpSearchBy\" class=\"col-form-label col-1 text-right\">Search by:</label>\n\n      <div class=\"col-2\">\n        <select class=\"form-control\" id=\"drpSearchBy\" name=\"SearchBy\" [(ngModel)]=\"searchBy\">\n          <option value=\"projectID\">Project ID</option>\n          <option value=\"projectName\">Project Name</option>\n          <option value=\"dateOfStart\">Date of Start</option>\n          <option value=\"teamSize\">Team Size</option>\n        </select>\n      </div>\n\n      <label for=\"textSearchText\" class=\"col-form-label col-1 text-right\">Search:</label>\n\n      <div class=\"col-3\">\n        <div class=\"input-group\">\n          <input type=\"text\" class=\"form-control\" id=\"txtSearchText\" name=\"SearchText\" [(ngModel)]=\"searchText\"\n            (keyup)=\"onSearchTextKeyup($event)\">\n          <!-- <div class=\"input-group-append\" (click)=\"onSearchClick()\">\n            <span class=\"input-group-text\"><i class=\"fa fa-search\"></i></span>\n          </div> -->\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n  <div class=\"col-xl-12 mx-auto\">\n    <div class=\"row\">\n      <div class=\"col-md-4 mb-1 projectcard\"\n        *ngFor=\"let project of projects | filter: searchBy: searchText | paging : currentPageIndex : pageSize; let i=index\">\n        <app-project #prj [currentProject]=\"project\" [recordIndex]=\"i\" (editClick)=\"onEditClick($event,i)\"\n          (deleteClick)=\"onDeleteClick($event, i)\">\n          <app-check-box-printer #selectionBox>\n          </app-check-box-printer>\n\n        </app-project>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <ul class=\"pagination justify-content-center mt-1\">\n          \n          <li class=\"page-item\" *ngFor=\"let page of pages\" (click)=\"onPageIndexClicked(page.pageIndex)\" [ngClass]=\" { 'active': page.pageIndex == currentPageIndex}\">\n            <a href=\"#\" onclick=\"return false\" class=\"page-link\">\n              {{page.pageIndex + 1}}\n            </a>\n          </li>\n\n        </ul>\n      </div>\n    </div>\n\n  </div>\n</div>\n\n<form #newForm=\"ngForm\" novalidate=\"novalidate\" appClientLocationStatusValidator>\n  <div class=\"modal\" role=\"dialog\" id=\"newModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\" style=\"width:700px\">\n        <div class=\"modal-header bg-primary text-white\">\n          <div class=\"modal-title\">New Project</div>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n        </div>\n        <div class=\"modal-body\">\n\n          <div class=\"form-group row\">\n            <label for=\"txtNewProjectID\" class=\"col-sm-4 col-form-label\">Project ID</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtNewProjectID\" style=\"width:130px\" class=\"form-control\" placeholder=\"Project ID\"\n                name=\"ProjectID\" [(ngModel)]=\"newProject.projectID\" required=\"required\" pattern=\"^[0-9]*$\"\n                appProjectIDUniqueValidator #newProjectID=\"ngModel\" #prjID\n                [ngClass]=\"{ 'is-invalid': newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted), 'is-valid': newProjectID.valid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) && newProjectID.errors!['required']\">Project\n                ID can't be blank</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) && newProjectID.errors!['pattern']\">Project\n                ID should contain numbers only</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) && newProjectID.errors!['uniqueProjectID']\">Duplicate\n                Project ID</span>\n\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtNewProjectName\" class=\"col-sm-4 col-form-label\">Project Name</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtNewProjectName\" class=\"form-control\" placeholder=\"Project Name\"\n                name=\"ProjectName\" [(ngModel)]=\"newProject.projectName\" required=\"required\" minlength=\"3\" maxlength=\"30\"\n                pattern=\"^[A-Za-z0-9 /-]*$\" #newProjectName=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted), 'is-valid': newProjectName.valid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) && newProjectName.errors!['required']\">Project\n                Name can't be blank</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) && newProjectName.errors!['pattern']\">Project\n                Name can contain alphabets, digits, dot, hyphen or space only</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) && newProjectName.errors!['minlength']\">Project\n                name should be at least 3 characters long</span>\n\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtNewDateOfStart\" class=\"col-sm-4 col-form-label\">Date of Start</label>\n            <div class=\"col-sm-8\">\n              <input type=\"date\" id=\"txtNewDateOfStart\" style=\"width:180px\" class=\"form-control\"\n                placeholder=\"Date of Start\" name=\"DateOfStart\" [(ngModel)]=\"newProject.dateOfStart\" required=\"required\"\n                #newDateOfStart=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': newDateOfStart.invalid && (newDateOfStart.dirty || newDateOfStart.touched || newForm.submitted), 'is-valid': newDateOfStart.valid && (newDateOfStart.dirty || newDateOfStart.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"newDateOfStart.invalid && (newDateOfStart.dirty || newDateOfStart.touched || newForm.submitted) && newDateOfStart.errors!['required']\">Date\n                of Start can't be blank</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtTeamSize\" class=\"col-sm-4 col-form-label\">Team Size</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtTeamSize\" style=\"width:150px\" class=\"form-control\" placeholder=\"Team Size\"\n                name=\"TeamSize\" [(ngModel)]=\"newProject.teamSize\" pattern=\"^[0-9]*$\" maxlength=\"7\"\n                appTeamSizeValidator=\"5\" #newTeamSize=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted), 'is-valid': newTeamSize.valid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) && newTeamSize.errors!['required']\">Team\n                Size should be a number</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) && newTeamSize.errors!['divisible']\">Team\n                Size should be divisble by 5</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"col-sm-4 col-form-label\">&nbsp;</label>\n            <div class=\"col-sm-8\">\n              <div class=\"form-check\">\n                <input type=\"checkbox\" id=\"chkNewActive\" value=\"true\" class=\"form-check-input\"\n                  [(ngModel)]=\"newProject.active\" name=\"active\">\n                <label class=\"form-check-label\" for=\"chkNewActive\">Active</label>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"rbNewStatusInForce\" class=\"col-sm-4\">Status</label>\n            <div class=\"col-sm-8\">\n\n              <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" id=\"rbNewStatusInForce\" value=\"In Force\" class=\"form-check-input\" name=\"Status\"\n                  [(ngModel)]=\"newProject.status\" required=\"required\" #newStatusInForce=\"ngModel\">\n                <label for=\"rbNewStatusInForce\" class=\"form-check-label\">In Force</label>\n              </div>\n\n              <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" id=\"rbNewStatusSupport\" value=\"Support\" class=\"form-check-input\" name=\"Status\"\n                  [(ngModel)]=\"newProject.status\" required=\"required\" #newStatusSupport=\"ngModel\">\n                <label for=\"rbNewStatusSupport\" class=\"form-check-label\">Support</label>\n              </div>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newStatusInForce.invalid && (newStatusInForce.dirty || newStatusInForce.touched || newForm.submitted) && newStatusInForce.errors!['required']\">Please\n                select status</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"drpNewClientLocation\" class=\"col-sm-4 col-form-label\">Client Location</label>\n            <div class=\"col-sm-8\">\n              <select id=\"drpNewClientLocation\" class=\"form-control\" name=\"ClientLocation\"\n                [(ngModel)]=\"newProject.clientLocationID\" required=\"required\" #newClientLocationID=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': newClientLocationID.invalid && (newClientLocationID.dirty || newClientLocationID.touched || newForm.submitted), 'is-valid': newClientLocationID.valid && (newClientLocationID.dirty || newClientLocationID.touched || newForm.submitted) }\">\n                <option value=\"null\">Please Select</option>\n                <option *ngFor=\"let clientLocation of clientLocations\" [value]=\"clientLocation.clientLocationID\">\n                  {{clientLocation.clientLocationName}}\n                </option>\n              </select>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newClientLocationID.invalid && (newClientLocationID.dirty || newClientLocationID.touched || newForm.submitted) && newClientLocationID.errors!['required']\">Please\n                client location</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newForm.invalid && (newForm.dirty || newForm.touched || newForm.submitted) && (newForm.errors? newForm.errors!['clientLocationStatus'] : false)\">Support\n                projects are not allowed at Tokyo</span>\n            </div>\n          </div>\n\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"newFormCancel\">Cancel</button>\n          <button class=\"btn btn-success\" (click)=\"onSaveClick()\">Save</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n<!-- Edit Project -->\n<form #editForm=\"ngForm\" novalidate=\"novalidate\" appClientLocationStatusValidator>\n  <div class=\"modal\" role=\"dialog\" id=\"editModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\" style=\"width:700px\">\n        <div class=\"modal-header\">\n          <div class=\"modal-title\">Edit Project</div>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n        </div>\n        <div class=\"modal-body\">\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditProjectID\" class=\"col-sm-4 col-form-label\">Project ID</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtEditProjectID\" style=\"width:130px\" class=\"form-control-plain-text\"\n                placeholder=\"Project ID\" name=\"ProjectID\" [(ngModel)]=\"editProject.projectID\" disabled=\"disabled\"\n                required=\"required\" pattern=\"^[0-9]*$\" appProjectIDUniqueValidator #editProjectID=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || newForm.submitted), 'is-valid': editProjectID.valid && (editProjectID.dirty || editProjectID.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || editForm.submitted) && editProjectID.errors!['required']\">Project\n                ID can't be blank</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || editForm.submitted) && editProjectID.errors!['pattern']\">Project\n                ID should contain numbers only</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || editForm.submitted) && editProjectID.errors!['uniqueProjectID']\">Duplicate\n                Project ID</span>\n\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditProjectName\" class=\"col-sm-4 col-form-label\">Project Name</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtEditProjectName\" class=\"form-control\" placeholder=\"Project Name\"\n                name=\"ProjectName\" [(ngModel)]=\"editProject.projectName\" required=\"required\" minlength=\"3\"\n                maxlength=\"30\" pattern=\"^[A-Za-z0-9 /-]*$\" #editProjectName=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted), 'is-valid': editProjectName.valid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) && editProjectName.errors!['required']\">Project\n                Name can't be blank</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) && editProjectName.errors!['pattern']\">Project\n                Name can contain alphabets, digits, dot, hyphen or space only</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) && editProjectName.errors!['minlength']\">Project\n                name should be at least 3 characters long</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditDateOfStart\" class=\"col-sm-4 col-form-label\">Date of Start</label>\n            <div class=\"col-sm-8\">\n              <input type=\"date\" id=\"txtEditDateOfStart\" style=\"width:180px\" class=\"form-control\"\n                placeholder=\"Date of Start\" name=\"DateOfStart\" [(ngModel)]=\"editProject.dateOfStart\" required=\"required\"\n                #editDateOfStart=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': editDateOfStart.invalid && (editDateOfStart.dirty || editDateOfStart.touched || editForm.submitted), 'is-valid': editDateOfStart.valid && (editDateOfStart.dirty || editDateOfStart.touched || editForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"editDateOfStart.invalid && (editForm.submitted) && editDateOfStart.errors!['required']\">Date of\n                Start can't be blank</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditTeamSize\" class=\"col-sm-4 col-form-label\">Team Size</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtEditTeamSize\" style=\"width:150px\" class=\"form-control\" placeholder=\"Team Size\"\n                name=\"TeamSize\" [(ngModel)]=\"editProject.teamSize\" pattern=\"^[0-9]*$\" maxlength=\"7\"\n                appTeamSizeValidator=\"5\" #editTeamSize=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted), 'is-valid': editTeamSize.valid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted) && editTeamSize.errors!['required']\">Team\n                Size should be a number</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted) && editTeamSize.errors!['divisible']\">Team\n                Size should be divisble by 5</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"col-sm-4 col-form-label\">&nbsp;</label>\n            <div class=\"col-sm-8\">\n              <div class=\"form-check\">\n                <input type=\"checkbox\" id=\"chkEditActive\" value=\"true\" class=\"form-check-input\"\n                  [(ngModel)]=\"editProject.active\" name=\"active\">\n                <label class=\"form-check-label\" for=\"chkEditActive\">Active</label>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"rbEditStatusInForce\" class=\"col-sm-4\">Status</label>\n            <div class=\"col-sm-8\">\n\n              <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" id=\"rbEditStatusInForce\" value=\"In Force\" class=\"form-check-input\" name=\"Status\"\n                  [(ngModel)]=\"editProject.status\" required=\"required\" #editStatusInForce=\"ngModel\">\n                <label for=\"rbEditStatusInForce\" class=\"form-check-label\">In Force</label>\n              </div>\n\n              <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" id=\"rbEditStatusSupport\" value=\"Support\" class=\"form-check-input\" name=\"Status\"\n                  [(ngModel)]=\"editProject.status\" required=\"required\" #editStatusSupport=\"ngModel\">\n                <label for=\"rbEditStatusSupport\" class=\"form-check-label\">Support</label>\n              </div>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editStatusInForce.invalid && (editStatusInForce.dirty || editStatusInForce.touched || editForm.submitted) && editStatusInForce.errors!['required']\">Please\n                select status</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"drpEditClientLocation\" class=\"col-sm-4 col-form-label\">Client Location</label>\n            <div class=\"col-sm-8\">\n              <select id=\"drpEditClientLocation\" class=\"form-control\" name=\"ClientLocation\"\n                [(ngModel)]=\"editProject.clientLocationID\" required=\"required\" #editClientLocationID=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': editClientLocationID.invalid && (editClientLocationID.dirty || editClientLocationID.touched || editForm.submitted), 'is-valid': editClientLocationID.valid && (editClientLocationID.dirty || editClientLocationID.touched || editForm.submitted) }\">\n                <option value=\"null\">Please Select</option>\n                <option *ngFor=\"let clientLocation of clientLocations\" [value]=\"clientLocation.clientLocationID\">\n                  {{clientLocation.clientLocationName}}\n                </option>\n              </select>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editClientLocationID.invalid && (editClientLocationID.dirty || editClientLocationID.touched || editForm.submitted) && editClientLocationID.errors!['required']\">Please\n                client location</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editForm.invalid && (editForm.dirty || editForm.touched || editForm.submitted) && (editForm.errors? editForm.errors!['clientLocationStatus'] : false)\">Support\n                projects are not allowed at Tokyo</span>\n            </div>\n          </div>\n\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"editFormCancel\">Cancel</button>\n          <button class=\"btn btn-success\" (click)=\"onUpdateClick()\">Update</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n\n<!-- Delete Project -->\n<form>\n  <div class=\"modal\" role=\"dialog\" id=\"deleteModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\" style=\"width:700px\">\n        <div class=\"modal-header\">\n          <div class=\"modal-title\">Delete Project</div>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n        </div>\n        <div class=\"modal-body\">\n\n          <div class=\"text-warning\">Are you sure to delete this Project?</div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtDeleteProjectID\" class=\"col-sm-4 col-form-label\">Project ID</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtDeleteProjectID\" style=\"width:100px\" class=\"form-control-plain-text\"\n                placeholder=\"Project ID\" name=\"ProjectID\" [(ngModel)]=\"deleteProject.projectID\" disabled=\"disabled\">\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtDeleteProjectName\" class=\"col-sm-4 col-form-label\">Project Name</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtDeleteProjectName\" class=\"form-control-plain-text\" placeholder=\"Project Name\"\n                name=\"ProjectName\" [(ngModel)]=\"deleteProject.projectName\" disabled=\"disabled\">\n            </div>\n          </div>\n\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-dismiss=\"modal\">Cancel</button>\n          <button class=\"btn btn-success\" data-dismiss=\"modal\" (click)=\"onDeleteConfirmClick()\">Delete</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TaskPriority } from 'src/app/models/task-priority';\nimport { FilterPipe } from 'src/app/pipes/filter.pipe';\nimport { TaskPrioritiesService } from 'src/app/services/task-priorities.service';\n\n@Component({\n  selector: 'app-task-priorities',\n  templateUrl: './task-priorities.component.html',\n  styleUrls: ['./task-priorities.component.scss']\n})\nexport class TaskPrioritiesComponent implements OnInit {\n  //Objects for Holding Model Data\n  taskPriorities: TaskPriority[] = [];\n  showLoading: boolean = true;\n\n  //Objects for Delete\n  deleteTaskPriority: TaskPriority = new TaskPriority();\n  editIndex: number | any = null;\n  deleteIndex: number | any = null;\n\n  //Properties for Searching\n  searchBy: string = \"taskPriorityName\";\n  searchText: string = \"\";\n\n  //Properties for Paging\n  currentPageIndex: number = 0;\n  pages: any[] = [];\n  pageSize: number = 7;\n\n  //Properties for Sorting\n  sortBy: string = \"taskPriorityName\";\n  sortOrder: string = \"ASC\";\n\n  //Reactive Forms\n  newForm: FormGroup | any = null;\n  editForm: FormGroup | any = null;\n\n  //Autofocus TextBoxes\n  @ViewChild(\"defaultTextBox_New\") defaultTextBox_New: ElementRef | any = null;\n  @ViewChild(\"defaultTextBox_Edit\") defaultTextBox_Edit: ElementRef | any = null;\n\n  //Constructor\n  constructor(private taskPrioritiesService: TaskPrioritiesService, private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit() {\n    //Get data from database\n    this.taskPrioritiesService.getTaskPriorities().subscribe(\n      (response: TaskPriority[]) => {\n        this.taskPriorities = response;\n        this.showLoading = false;\n        this.calculateNoOfPages();\n      }\n    );\n\n    //Create newForm\n    this.newForm = this.formBuilder.group({\n      taskPriorityID: this.formBuilder.control(null),\n      taskPriorityName: this.formBuilder.control(null, [Validators.required])\n    });\n\n    //Create editForm\n    this.editForm = this.formBuilder.group({\n      taskPriorityID: this.formBuilder.control(null),\n      taskPriorityName: this.formBuilder.control(null, [Validators.required])\n    });\n  }\n\n  calculateNoOfPages() {\n    //Get no. of Pages\n    let filterPipe = new FilterPipe();\n    var noOfPages = Math.ceil(filterPipe.transform(this.taskPriorities, this.searchBy, this.searchText).length / this.pageSize);\n    this.pages = [];\n\n    //Generate pages\n    for (let i = 0; i < noOfPages; i++) {\n      this.pages.push({ pageIndex: i });\n    }\n\n    this.currentPageIndex = 0;\n  }\n\n  onPageIndexClicked(ind: number) {\n    //Set currentPageIndex\n    if (ind >= 0 && ind < this.pages.length) {\n      this.currentPageIndex = ind;\n    }\n  }\n\n  onNewClick(event: any) {\n    //reset the newForm\n    this.newForm.reset({ taskPriorityID: 0 });\n    setTimeout(() => {\n      //Focus the TaskPriority textbox in newForm\n      this.defaultTextBox_New.nativeElement.focus();\n    }, 100);\n  }\n\n  onSaveClick() {\n    if (this.newForm.valid) {\n      //Invoke the REST-API call\n      this.taskPrioritiesService.insertTaskPriority(this.newForm.value).subscribe({ next:(response) => {\n        //Add Response to Grid\n        var p: TaskPriority = new TaskPriority();\n        p.taskPriorityID = response.taskPriorityID;\n        p.taskPriorityName = response.taskPriorityName;\n        this.taskPriorities.push(p);\n\n        //Reset the newForm\n        this.newForm.reset();\n        $(\"#newTaskPriorityFormCancel\").trigger(\"click\");\n        this.calculateNoOfPages();\n\n        this.calculateNoOfPages();\n      }, error: (error) => {\n        console.log(error);\n      }});\n    }\n  }\n\n  onEditClick(event: any, taskPriority: TaskPriority) {\n    //Reset the editForm\n    this.editForm.reset();\n    setTimeout(() => {\n      //Set data into editForm\n      this.editForm.patchValue(taskPriority);\n      this.editIndex = this.taskPriorities.indexOf(taskPriority);\n\n      //Focus the TaskPriority textbox in editForm\n      this.defaultTextBox_Edit.nativeElement.focus();\n    }, 100);\n  }\n\n  onUpdateClick() {\n    if (this.editForm.valid) {\n      //Invoke the REST-API call\n      this.taskPrioritiesService.updateTaskPriority(this.editForm.value).subscribe({ next:(response: TaskPriority) => {\n        //Update the response in Grid\n        this.taskPriorities[this.editIndex] = response;\n\n        //Reset the editForm\n        this.editForm.reset();\n        $(\"#editTaskPriorityFormCancel\").trigger(\"click\");\n      },\n       error: (error) => {\n          console.log(error);\n        }});\n    }\n  }\n\n  onDeleteClick(event: any, taskPriority: TaskPriority) {\n    //Set data into deleteTaskPriority\n    this.deleteTaskPriority.taskPriorityID = taskPriority.taskPriorityID;\n    this.deleteTaskPriority.taskPriorityName = taskPriority.taskPriorityName;\n    this.deleteIndex = this.taskPriorities.indexOf(taskPriority);\n  }\n\n  onDeleteConfirmClick() {\n    //Invoke the REST-API call\n    this.taskPrioritiesService.deleteTaskPriority(this.deleteTaskPriority.taskPriorityID).subscribe(\n     {next: (response) => {\n        //Delete object in Grid\n        this.taskPriorities.splice(this.deleteIndex, 1);\n\n        //Clear deleteCountry\n        this.deleteTaskPriority.taskPriorityID = null;\n        this.deleteTaskPriority.taskPriorityName = null;\n\n        //Recall the calculateNoOfPages\n        this.calculateNoOfPages();\n      },\n     error: (error) => {\n        console.log(error);\n      }});\n  }\n\n  onSearchTextChange(event: any) {\n    this.calculateNoOfPages();\n  }\n}\n","<h5>\n    Task Priorities\n    <i class=\"fa fa-circle-o-notch fa-spin\" style=\"font-size:24px\" *ngIf=\"showLoading\"></i>\n  </h5>\n  \n  <div class=\"row\">\n    <div class=\"col-xl-12\">\n      <div class=\"form-group row\">\n  \n        <div class=\"col-md-12 col-lg-12 col-xl-2\">\n          <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#newTaskPriorityModal\" (click)=\"onNewClick($event)\">Create Task Priority</button>\n        </div>\n  \n        <label for=\"drpSearchBy\" class=\"col-form-label col-md-6 col-lg-2 offset-xl-1 col-xl-2 text-right\">Search by:</label>\n  \n        <div class=\"col-md-6 col-lg-4 col-xl-3\">\n          <select class=\"form-control\" id=\"drpSearchBy\" name=\"SearchBy\" [(ngModel)]=\"searchBy\">\n            <option value=\"taskPriorityName\">Task Priority Name</option>\n          </select>\n        </div>\n  \n        <label for=\"textSearchText\" class=\"col-form-label col-md-6 col-lg-2 col-xl-1 text-right\">Search:</label>\n  \n        <div class=\"col-md-6 col-lg-4 col-xl-3\">\n          <div class=\"input-group\">\n            <input type=\"text\" class=\"form-control\" id=\"txtSearchText\" name=\"SearchText\" [(ngModel)]=\"searchText\" (keyup)=\"onSearchTextChange($event)\">\n          </div>\n        </div>\n      </div>\n    </div>\n  \n  \n    <div class=\"col-xl-12\">\n      <div class=\"row\">\n        <div class=\"col-xl-8 col-lg-9 mx-auto\">\n          <table class=\"table\">\n            <tr class=\"table-dark text-dark\">\n              <th>\n                Task Priority Name\n                <i class=\"fa fa-sort hand-icon\" *ngIf=\"sortBy != 'taskPriorityName' \" (click)=\"sortBy = 'taskPriorityName'; sortOrder = 'ASC' \"></i>\n  \n                <i class=\"fa fa-sort-up hand-icon text-primary\" *ngIf=\"sortBy == 'taskPriorityName' && sortOrder == 'ASC' \" (click)=\"sortOrder = 'DESC' \"></i>\n  \n                <i class=\"fa fa-sort-down hand-icon text-primary\" *ngIf=\"sortBy == 'taskPriorityName' && sortOrder == 'DESC' \" (click)=\"sortOrder = 'ASC' \"></i>\n              </th>\n  \n              <th class=\"text-center\" style=\"width:200px\">Actions</th>\n            </tr>\n            \n            <tr *ngFor=\"let taskPriority of taskPriorities | filter: searchBy : searchText | sort : sortBy : sortOrder | paging : currentPageIndex : pageSize; let i = index\">\n              <td>{{taskPriority.taskPriorityName}}</td>\n              <td class=\"text-center\">\n                <button class=\"btn btn-info\" (click)=\"onEditClick($event, taskPriority)\" data-toggle=\"modal\" data-target=\"#editTaskPriorityModal\">Edit</button>&nbsp;\n                <button class=\"btn btn-warning\" (click)=\"onDeleteClick($event, taskPriority)\" data-toggle=\"modal\" data-target=\"#deleteModal\">Delete</button>\n              </td>\n            </tr>\n          </table>\n        </div>\n      </div>\n    </div>\n  \n    <div class=\"col-12\">\n      <ul class=\"pagination justify-content-center mt-1\">\n        <li class=\"page-item\" (click)=\"onPageIndexClicked(currentPageIndex - 1)\">\n          <a class=\"page-link bg-secondary text-white\" href=\"#\" onclick=\"return false\">Prev</a>\n        </li>\n  \n        <ng-container *ngIf=\"pages.length <= 10\">\n          <li class=\"page-item\" *ngFor=\"let page of pages\" [ngClass]=\"{ 'active': page.pageIndex == currentPageIndex}\" (click)=\"onPageIndexClicked(page.pageIndex)\">\n            <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{page.pageIndex + 1}}</a>\n          </li>\n        </ng-container>\n  \n        <ng-container *ngIf=\"pages.length > 10\">\n          <li class=\"page-item\" [ngClass]=\"{ 'active': currentPageIndex == 0}\" (click)=\"onPageIndexClicked(0)\">\n            <a class=\"page-link\" href=\"#\" onclick=\"return false\">1</a>\n          </li>\n  \n          <li class=\"page-item\" [ngClass]=\"{ 'active': currentPageIndex == 1}\" (click)=\"onPageIndexClicked(1)\">\n            <a class=\"page-link\" href=\"#\" onclick=\"return false\">2</a>\n          </li>\n  \n          <li *ngIf=\"currentPageIndex > 1 && currentPageIndex < pages.length - 2\">&nbsp;...&nbsp;</li>\n  \n          <li class=\"page-item\" [ngClass]=\" 'active' \" (click)=\"onPageIndexClicked(currentPageIndex)\" *ngIf=\"currentPageIndex > 1 && currentPageIndex < pages.length - 2\">\n            <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{currentPageIndex + 1}}</a>\n          </li>\n  \n          <li>&nbsp;...&nbsp;</li>\n  \n          <li class=\"page-item\" [ngClass]=\"{ 'active': currentPageIndex == pages.length - 2}\" (click)=\"onPageIndexClicked(pages.length - 2)\">\n            <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{pages.length - 1}}</a>\n          </li>\n  \n          <li class=\"page-item\" [ngClass]=\"{ 'active': currentPageIndex == pages.length - 1}\" (click)=\"onPageIndexClicked(pages.length - 1)\">\n            <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{pages.length}}</a>\n          </li>\n        </ng-container>\n  \n        <li class=\"page-item\" (click)=\"onPageIndexClicked(currentPageIndex + 1)\">\n          <a class=\"page-link bg-secondary text-white\" href=\"#\" onclick=\"return false\">Next</a>\n        </li>\n      </ul>\n    </div>\n  \n  </div>\n  \n  <form novalidate=\"novalidate\" [formGroup]=\"newForm\">\n    <div class=\"modal\" role=\"dialog\" id=\"newTaskPriorityModal\">\n      <div class=\"modal-dialog modal-md\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header bg-primary text-white\">\n            <div class=\"modal-title\">New Task Priority</div>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n          </div>\n          <div class=\"modal-body\">\n  \n            <div class=\"form-group row\">\n              <label for=\"txtNewTaskPriorityName\" class=\"col-sm-4 col-form-label\">Task Priority Name *</label>\n              <div class=\"col-sm-8\">\n                <input type=\"text\" id=\"txtNewTaskPriorityName\" class=\"form-control\" placeholder=\"Task Priority Name\" name=\"TaskPriorityName\"  formControlName=\"taskPriorityName\" maxlength=\"30\" #defaultTextBox_New [ngClass]=\"{ 'is-invalid': newForm.get('taskPriorityName').invalid && (newForm.get('taskPriorityName').dirty || newForm.get('taskPriorityName').touched || newForm.submitted), 'is-valid': newForm.get('taskPriorityName').valid && (newForm.get('taskPriorityName').dirty || newForm.get('taskPriorityName').touched || newForm.submitted) }\">\n  \n                <span class=\"text-danger\" *ngIf=\"newForm.get('taskPriorityName').invalid && (newForm.get('taskPriorityName').dirty || newForm.get('taskPriorityName').touched || newForm.submitted) && newForm.get('taskPriorityName').errors?.required\">Task Priority Name can't be blank</span>\n              </div>\n            </div>\n  \n          </div>\n          <div class=\"modal-footer\">\n            <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"newTaskPriorityFormCancel\" type=\"button\">Cancel</button>\n            <button class=\"btn btn-success\" (click)=\"onSaveClick()\">Save</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n  \n  <!-- Edit Task Priority -->\n  <form novalidate=\"novalidate\" [formGroup]=\"editForm\">\n    <div class=\"modal\" role=\"dialog\" id=\"editTaskPriorityModal\">\n      <div class=\"modal-dialog modal-md\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header bg-primary text-white\">\n            <div class=\"modal-title\">Edit Task Priority</div>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n          </div>\n          <div class=\"modal-body\">\n  \n            <div class=\"form-group row\">\n              <label for=\"txtEditTaskPriorityName\" class=\"col-sm-4 col-form-label\">Task Priority Name *</label>\n              <div class=\"col-sm-8\">\n                <input type=\"text\" id=\"txtEditTaskPriorityName\" class=\"form-control\" placeholder=\"Task Priority Name\" name=\"TaskPriorityName\" formControlName=\"taskPriorityName\" maxlength=\"30\" #defaultTextBox_Edit [ngClass]=\"{ 'is-invalid': editForm.get('taskPriorityName').invalid && (editForm.get('taskPriorityName').dirty || editForm.get('taskPriorityName').touched || editForm.submitted), 'is-valid': editForm.get('taskPriorityName').valid && (editForm.get('taskPriorityName').dirty || editForm.get('taskPriorityName').touched || editForm.submitted) }\">\n  \n                <span class=\"text-danger\" *ngIf=\"editForm.get('taskPriorityName').invalid && (editForm.get('taskPriorityName').dirty || editForm.get('taskPriorityName').touched || editForm.submitted) && editForm.get('taskPriorityName').errors?.required\">Task Priority Name can't be blank</span>\n              </div>\n            </div>\n  \n          </div>\n          <div class=\"modal-footer\">\n            <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"editTaskPriorityFormCancel\" type=\"button\">Cancel</button>\n            <button class=\"btn btn-success\" (click)=\"onUpdateClick()\">Update</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n  \n  \n  <!-- Delete Task Priority -->\n  <form>\n    <div class=\"modal\" role=\"dialog\" id=\"deleteModal\">\n      <div class=\"modal-dialog modal-md\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header bg-primary text-white\">\n            <div class=\"modal-title\">Delete Task Priority</div>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n          </div>\n          <div class=\"modal-body\">\n  \n            <div class=\"text-warning\">Are you sure to delete this Task Priority?</div>\n  \n            <div class=\"form-group row\">\n              <label for=\"txtDeleteTaskPriorityName\" class=\"col-sm-4 col-form-label\">Task Priority Name</label>\n              <div class=\"col-sm-8\">\n                <input type=\"text\" id=\"txtDeleteTaskPriorityName\" class=\"form-control-plain-text\" style=\"width:300px\" placeholder=\"Task Priority Name\" name=\"TaskPriorityName\" [(ngModel)]=\"deleteTaskPriority.taskPriorityName\" disabled=\"disabled\">\n              </div>\n            </div>\n  \n          </div>\n          <div class=\"modal-footer\">\n            <button class=\"btn btn-warning\" data-dismiss=\"modal\" type=\"button\">Cancel</button>\n            <button class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"onDeleteConfirmClick()\">Delete</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TaskStatus } from 'src/app/models/task-status';\nimport { FilterPipe } from 'src/app/pipes/filter.pipe';\nimport { TaskStatusesService } from 'src/app/services/task-statuses.service';\n\n@Component({\n  selector: 'app-task-status',\n  templateUrl: './task-status.component.html',\n  styleUrls: ['./task-status.component.scss']\n})\nexport class TaskStatusComponent implements OnInit\n{\n  //Objects for Holding Model Data\n  taskStatuses: TaskStatus[] = [];\n  showLoading: boolean = true;\n\n  //Objects for Delete\n  deleteTaskStatus: TaskStatus = new TaskStatus();\n  editIndex: number|any = null;\n  deleteIndex: number|any = null;\n\n  //Properties for Searching\n  searchBy: string = \"taskStatusName\";\n  searchText: string = \"\";\n\n\n  //Properties for Paging\n  currentPageIndex: number = 0;\n  pages: any[] = [];\n  pageSize: number = 7;\n\n  //Properties for Sorting\n  sortBy: string = \"taskStatusName\";\n  sortOrder: string = \"ASC\";\n\n  //Reactive Forms\n  newForm: FormGroup | any = null;\n  editForm: FormGroup | any = null;\n\n  //Autofocus TextBoxes\n  @ViewChild(\"defaultTextBox_New\") defaultTextBox_New: ElementRef| any = null;\n  @ViewChild(\"defaultTextBox_Edit\") defaultTextBox_Edit: ElementRef| any = null;\n\n  //Constructor\n  constructor(private taskStatusesService: TaskStatusesService, private formBuilder: FormBuilder)\n  {\n  }\n\n  ngOnInit()\n  {\n    //Get data from database\n    this.taskStatusesService.getTaskStatuses().subscribe(\n      (response: TaskStatus[]) =>\n      {\n        this.taskStatuses = response;\n        this.showLoading = false;\n        this.calculateNoOfPages();\n      }\n    );\n\n    //Create newForm\n    this.newForm = this.formBuilder.group({\n      taskStatusID: this.formBuilder.control(null),\n      taskStatusName: this.formBuilder.control(null, [Validators.required])\n    });\n\n    //Create editForm\n    this.editForm = this.formBuilder.group({\n      taskStatusID: this.formBuilder.control(null),\n      taskStatusName: this.formBuilder.control(null, [Validators.required])\n    });\n  }\n\n  calculateNoOfPages()\n  {\n    //Get no. of Pages\n    let filterPipe = new FilterPipe();\n    var noOfPages = Math.ceil(filterPipe.transform(this.taskStatuses, this.searchBy, this.searchText).length / this.pageSize);\n    this.pages = [];\n\n    //Generate pages\n    for (let i = 0; i < noOfPages; i++)\n    {\n      this.pages.push({ pageIndex: i });\n    }\n\n    this.currentPageIndex = 0;\n  }\n\n  onPageIndexClicked(ind:any)\n  {\n    //Set currentPageIndex\n    if (ind >= 0 && ind < this.pages.length)\n    {\n      this.currentPageIndex = ind;\n    }\n  }\n\n  onNewClick(event:any)\n  {\n    //reset the newForm\n    this.newForm.reset({ taskStatusID: 0 });\n    setTimeout(() =>\n    {\n      //Focus the TaskStatus textbox in newForm\n      this.defaultTextBox_New.nativeElement.focus();\n    }, 100);\n  }\n\n  onSaveClick()\n  {\n    if (this.newForm.valid)\n    {\n      //Invoke the REST-API call\n      this.taskStatusesService.insertTaskStatus(this.newForm.value).subscribe((response) =>\n      {\n        //Add Response to Grid\n        var p: TaskStatus = new TaskStatus();\n        p.taskStatusID = response.taskStatusID;\n        p.taskStatusName = response.taskStatusName;\n        this.taskStatuses.push(p);\n\n        //Reset the newForm\n        this.newForm.reset();\n        $(\"#newTaskStatusFormCancel\").trigger(\"click\");\n        this.calculateNoOfPages();\n\n        this.calculateNoOfPages();\n      }, (error) =>\n        {\n          console.log(error);\n        });\n    }\n  }\n\n  onEditClick(event:any, taskStatus: TaskStatus)\n  {\n    //Reset the editForm\n    this.editForm.reset();\n    setTimeout(() =>\n    {\n      this.editForm.patchValue(taskStatus);\n      this.editIndex = this.taskStatuses.indexOf(taskStatus);\n\n      //Focus the TaskStatus textbox in editForm\n      this.defaultTextBox_Edit.nativeElement.focus();\n    }, 100);\n  }\n\n  onUpdateClick()\n  {\n    if (this.editForm.valid)\n    {\n      //Invoke the REST-API call\n      this.taskStatusesService.updateTaskStatus(this.editForm.value).subscribe((response: TaskStatus) =>\n      {\n        //Update the response in Grid\n        this.taskStatuses[this.editIndex] = response;\n\n        //Reset the editForm\n        this.editForm.reset();\n        $(\"#editTaskStatusFormCancel\").trigger(\"click\");\n      },\n        (error) =>\n        {\n          console.log(error);\n        });\n    }\n  }\n\n  onDeleteClick(event:any, taskStatus: TaskStatus)\n  {\n    //Set data into deleteTaskStatus\n    this.deleteTaskStatus.taskStatusID = taskStatus.taskStatusID;\n    this.deleteTaskStatus.taskStatusName = taskStatus.taskStatusName;\n    this.deleteIndex = this.taskStatuses.indexOf(taskStatus);\n  }\n\n  onDeleteConfirmClick()\n  {\n    //Invoke the REST-API call\n    this.taskStatusesService.deleteTaskStatus(this.deleteTaskStatus.taskStatusID).subscribe(\n      (response) =>\n      {\n        //Delete object in Grid\n        this.taskStatuses.splice(this.deleteIndex, 1);\n\n        //Clear deleteCountry\n        this.deleteTaskStatus.taskStatusID = null;\n        this.deleteTaskStatus.taskStatusName = null;\n\n        //Recall the calculateNoOfPages\n        this.calculateNoOfPages();\n      },\n      (error) =>\n      {\n        console.log(error);\n      });\n  }\n\n  onSearchTextChange(event:any)\n  {\n    this.calculateNoOfPages();\n  }\n}\n","<h5>\n    Task Statuses\n    <i class=\"fa fa-circle-o-notch fa-spin\" style=\"font-size:24px\" *ngIf=\"showLoading\"></i>\n  </h5>\n  \n  <div class=\"row\">\n    <div class=\"col-xl-12\">\n      <div class=\"form-group row\">\n  \n        <div class=\"col-md-12 col-lg-12 col-xl-2\">\n          <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#newTaskStatusModal\" (click)=\"onNewClick($event)\">Create Task Status</button>\n        </div>\n  \n        <label for=\"drpSearchBy\" class=\"col-form-label col-md-6 col-lg-2 offset-xl-1 col-xl-2 text-right\">Search by:</label>\n  \n        <div class=\"col-md-6 col-lg-4 col-xl-3\">\n          <select class=\"form-control\" id=\"drpSearchBy\" name=\"SearchBy\" [(ngModel)]=\"searchBy\">\n            <option value=\"taskStatusName\">Task Status Name</option>\n          </select>\n        </div>\n  \n        <label for=\"textSearchText\" class=\"col-form-label col-md-6 col-lg-2 col-xl-1 text-right\">Search:</label>\n  \n        <div class=\"col-md-6 col-lg-4 col-xl-3\">\n          <div class=\"input-group\">\n            <input type=\"text\" class=\"form-control\" id=\"txtSearchText\" name=\"SearchText\" [(ngModel)]=\"searchText\" (keyup)=\"onSearchTextChange($event)\">\n          </div>\n        </div>\n      </div>\n    </div>\n  \n  \n    <div class=\"col-xl-12\">\n      <div class=\"row\">\n        <div class=\"col-xl-8 col-lg-9 mx-auto\">\n          <table class=\"table\">\n            <tr class=\"table-dark text-dark\">\n              <th>\n                Task Status Name\n                <i class=\"fa fa-sort hand-icon\" *ngIf=\"sortBy != 'taskStatusName' \" (click)=\"sortBy = 'taskStatusName'; sortOrder = 'ASC' \"></i>\n  \n                <i class=\"fa fa-sort-up hand-icon text-primary\" *ngIf=\"sortBy == 'taskStatusName' && sortOrder == 'ASC' \" (click)=\"sortOrder = 'DESC' \"></i>\n  \n                <i class=\"fa fa-sort-down hand-icon text-primary\" *ngIf=\"sortBy == 'taskStatusName' && sortOrder == 'DESC' \" (click)=\"sortOrder = 'ASC' \"></i>\n              </th>\n  \n              <th class=\"text-center\" style=\"width:200px\">Actions</th>\n            </tr>\n            \n            <tr *ngFor=\"let taskStatus of taskStatuses | filter: searchBy : searchText | sort : sortBy : sortOrder | paging : currentPageIndex : pageSize; let i = index\">\n              <td>{{taskStatus.taskStatusName}}</td>\n              <td class=\"text-center\">\n                <button class=\"btn btn-info\" (click)=\"onEditClick($event, taskStatus)\" data-toggle=\"modal\" data-target=\"#editTaskStatusModal\">Edit</button>&nbsp;\n                <button class=\"btn btn-warning\" (click)=\"onDeleteClick($event, taskStatus)\" data-toggle=\"modal\" data-target=\"#deleteModal\">Delete</button>\n              </td>\n            </tr>\n          </table>\n        </div>\n      </div>\n    </div>\n  \n    <div class=\"col-12\">\n      <ul class=\"pagination justify-content-center mt-1\">\n        <li class=\"page-item\" (click)=\"onPageIndexClicked(currentPageIndex - 1)\">\n          <a class=\"page-link bg-secondary text-white\" href=\"#\" onclick=\"return false\">Prev</a>\n        </li>\n  \n        <ng-container *ngIf=\"pages.length <= 10\">\n          <li class=\"page-item\" *ngFor=\"let page of pages\" [ngClass]=\"{ 'active': page.pageIndex == currentPageIndex}\" (click)=\"onPageIndexClicked(page.pageIndex)\">\n            <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{page.pageIndex + 1}}</a>\n          </li>\n        </ng-container>\n  \n        <ng-container *ngIf=\"pages.length > 10\">\n          <li class=\"page-item\" [ngClass]=\"{ 'active': currentPageIndex == 0}\" (click)=\"onPageIndexClicked(0)\">\n            <a class=\"page-link\" href=\"#\" onclick=\"return false\">1</a>\n          </li>\n  \n          <li class=\"page-item\" [ngClass]=\"{ 'active': currentPageIndex == 1}\" (click)=\"onPageIndexClicked(1)\">\n            <a class=\"page-link\" href=\"#\" onclick=\"return false\">2</a>\n          </li>\n  \n          <li *ngIf=\"currentPageIndex > 1 && currentPageIndex < pages.length - 2\">&nbsp;...&nbsp;</li>\n  \n          <li class=\"page-item\" [ngClass]=\" 'active' \" (click)=\"onPageIndexClicked(currentPageIndex)\" *ngIf=\"currentPageIndex > 1 && currentPageIndex < pages.length - 2\">\n            <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{currentPageIndex + 1}}</a>\n          </li>\n  \n          <li>&nbsp;...&nbsp;</li>\n  \n          <li class=\"page-item\" [ngClass]=\"{ 'active': currentPageIndex == pages.length - 2}\" (click)=\"onPageIndexClicked(pages.length - 2)\">\n            <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{pages.length - 1}}</a>\n          </li>\n  \n          <li class=\"page-item\" [ngClass]=\"{ 'active': currentPageIndex == pages.length - 1}\" (click)=\"onPageIndexClicked(pages.length - 1)\">\n            <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{pages.length}}</a>\n          </li>\n        </ng-container>\n  \n        <li class=\"page-item\" (click)=\"onPageIndexClicked(currentPageIndex + 1)\">\n          <a class=\"page-link bg-secondary text-white\" href=\"#\" onclick=\"return false\">Next</a>\n        </li>\n      </ul>\n    </div>\n  \n  </div>\n  \n  <form novalidate=\"novalidate\" [formGroup]=\"newForm\">\n    <div class=\"modal\" role=\"dialog\" id=\"newTaskStatusModal\">\n      <div class=\"modal-dialog modal-md\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header bg-primary text-white\">\n            <div class=\"modal-title\">New Task Status</div>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n          </div>\n          <div class=\"modal-body\">\n  \n            <div class=\"form-group row\">\n              <label for=\"txtNewTaskStatusName\" class=\"col-sm-4 col-form-label\">Task Status Name *</label>\n              <div class=\"col-sm-8\">\n                <input type=\"text\" id=\"txtNewTaskStatusName\" class=\"form-control\" placeholder=\"Task Status Name\" name=\"TaskStatusName\"  formControlName=\"taskStatusName\" maxlength=\"30\" #defaultTextBox_New [ngClass]=\"{ 'is-invalid': newForm.get('taskStatusName').invalid && (newForm.get('taskStatusName').dirty || newForm.get('taskStatusName').touched || newForm.submitted), 'is-valid': newForm.get('taskStatusName').valid && (newForm.get('taskStatusName').dirty || newForm.get('taskStatusName').touched || newForm.submitted) }\">\n  \n                <span class=\"text-danger\" *ngIf=\"newForm.get('taskStatusName').invalid && (newForm.get('taskStatusName').dirty || newForm.get('taskStatusName').touched || newForm.submitted) && newForm.get('taskStatusName').errors?.required\">Task Status Name can't be blank</span>\n              </div>\n            </div>\n  \n          </div>\n          <div class=\"modal-footer\">\n            <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"newTaskStatusFormCancel\" type=\"button\">Cancel</button>\n            <button class=\"btn btn-success\" (click)=\"onSaveClick()\">Save</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n  \n  <!-- Edit Task Status -->\n  <form novalidate=\"novalidate\" [formGroup]=\"editForm\">\n    <div class=\"modal\" role=\"dialog\" id=\"editTaskStatusModal\">\n      <div class=\"modal-dialog modal-md\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header bg-primary text-white\">\n            <div class=\"modal-title\">Edit Task Status</div>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n          </div>\n          <div class=\"modal-body\">\n  \n            <div class=\"form-group row\">\n              <label for=\"txtEditTaskStatusName\" class=\"col-sm-4 col-form-label\">Task Status Name *</label>\n              <div class=\"col-sm-8\">\n                <input type=\"text\" id=\"txtEditTaskStatusName\" class=\"form-control\" placeholder=\"Task Status Name\" name=\"TaskStatusName\" formControlName=\"taskStatusName\" maxlength=\"30\" #defaultTextBox_Edit [ngClass]=\"{ 'is-invalid': editForm.get('taskStatusName').invalid && (editForm.get('taskStatusName').dirty || editForm.get('taskStatusName').touched || editForm.submitted), 'is-valid': editForm.get('taskStatusName').valid && (editForm.get('taskStatusName').dirty || editForm.get('taskStatusName').touched || editForm.submitted) }\">\n  \n                <span class=\"text-danger\" *ngIf=\"editForm.get('taskStatusName').invalid && (editForm.get('taskStatusName').dirty || editForm.get('taskStatusName').touched || editForm.submitted) && editForm.get('taskStatusName').errors?.required\">Task Status Name can't be blank</span>\n              </div>\n            </div>\n  \n          </div>\n          <div class=\"modal-footer\">\n            <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"editTaskStatusFormCancel\" type=\"button\">Cancel</button>\n            <button class=\"btn btn-success\" (click)=\"onUpdateClick()\">Update</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n  \n  \n  <!-- Delete Task Status -->\n  <form>\n    <div class=\"modal\" role=\"dialog\" id=\"deleteModal\">\n      <div class=\"modal-dialog modal-md\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header bg-primary text-white\">\n            <div class=\"modal-title\">Delete Task Status</div>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n          </div>\n          <div class=\"modal-body\">\n  \n            <div class=\"text-warning\">Are you sure to delete this Task Status?</div>\n  \n            <div class=\"form-group row\">\n              <label for=\"txtDeleteTaskStatusName\" class=\"col-sm-4 col-form-label\">Task Status Name</label>\n              <div class=\"col-sm-8\">\n                <input type=\"text\" id=\"txtDeleteTaskStatusName\" class=\"form-control-plain-text\" style=\"width:300px\" placeholder=\"Task Status Name\" name=\"TaskStatusName\" [(ngModel)]=\"deleteTaskStatus.taskStatusName\" disabled=\"disabled\">\n              </div>\n            </div>\n  \n          </div>\n          <div class=\"modal-footer\">\n            <button class=\"btn btn-warning\" data-dismiss=\"modal\" type=\"button\">Cancel</button>\n            <button class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"onDeleteConfirmClick()\">Delete</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AboutComponent } from './admin/components/about/about.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignUpComponent },\n  { path: 'about', component: AboutComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true, enableTracing:true })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { LoginService } from './services//login.service';\nimport { RouterLoggerService } from './services/router-logger.service';\nimport { NavigationEnd, Router, RouterOutlet } from '@angular/router';\nimport { fadeAnimation } from './MyAnimation';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations:[fadeAnimation]\n})\nexport class AppComponent {\n  constructor(public loginService:LoginService, private routerLoggerService:RouterLoggerService, private router:Router){}\n\n  ngOnIntIt(){\n    this.loginService.detectIfAlreadyLoggedIn();\n\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        let userName = (this.loginService.currentUserName) ? this.loginService.currentUserName : \"anonymous\";\n\n        let logMsg = new Date().toLocaleString() + \": \" + userName + \" navigates to \" + event.url;\n\n        this.routerLoggerService.log(logMsg).subscribe();\n      }\n    });\n  }\n\n  getState(outlet: RouterOutlet) {\n    return outlet.isActivated ? outlet.activatedRoute.snapshot.url[0].path : \"none\";\n  }\n}\n","<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n  <a class=\"navbar-brand\" href=\"#\"> Project Task Manager </a>\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#mynav\"\n  >\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"mynav\">\n    <ul class=\"navbar-nav mr-auto\">\n\n      <ng-container *ngIf=\"loginService.currentUserName != null && loginService.currentUserRole == 'Admin'\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"['/admin','dashboard']\">Dashboard</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"['/admin','projects']\">Projects</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"['/admin','masters']\">Masters</a>\n        </li>\n      </ng-container>\n\n      <ng-container *ngIf=\"loginService.currentUserName != null && loginService.currentUserRole == 'Employee'\">\n        <li class=\"nav-item\" >\n          <a class=\"nav-link\" [routerLink]=\"['/employee','tasks']\">Tasks</a>\n        </li>\n      </ng-container>\n\n      <ng-container *ngIf=\"loginService.currentUserName == null\">\n        <li class=\"nav-item\" >\n          <a class=\"nav-link\" [routerLink]=\"['/login']\">Login</a>\n        </li>\n        <li class=\"nav-item\" >\n          <a class=\"nav-link\" [routerLink]=\"['/signup']\">Sign Up</a>\n        </li>\n      </ng-container>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLink]=\"['/about']\">About</a>\n      </li>\n      \n      <ng-container *ngIf=\"loginService.currentUserName != null\">\n        <li class=\"nav-item\" >\n          <a class=\"nav-link\" href=\"/myprofile\">{{loginService.currentUserName}}</a>\n        </li>\n        <li class=\"nav-item\" >\n          <a class=\"nav-link\" href=\"#\" (click)=\"loginService.Logout()\">Logout</a>\n        </li>\n      </ng-container>\n      \n     \n    </ul>\n    <form class=\"form-inline my-2 my-lg-0\">\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"search\"\n            ><i class=\"fa fa-search\"></i\n          ></span>\n        </div>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Search\" />\n      </div>\n      <button class=\"btn btn-warning my2- my-sm-0 ml-1\" type=\"button\">Search</button>\n    </form>\n  </div>\n</nav>\n\n<div class=\"container-fluid\" [@routeAnimations]=\"getState(outlet)\">\n  <router-outlet #outlet=\"outlet\"></router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AdminModule } from './admin/admin.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LoginComponent } from './components/login/login.component';\nimport { JwtInterceptorService } from './interceptors/jwt-interceptor.service';\nimport { JwtUnAuthorizedInterceptorService } from './interceptors/jwt-un-authorized-interceptor.service';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { AlertDirective } from './directives/alert.directive';\nimport { RepeaterDirective } from './directives/repeater.directive';\nimport { EmployeeModule } from './employee/employee.module';\nimport { AppComponent } from './app.component';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [AppComponent, LoginComponent, SignUpComponent,  AlertDirective, RepeaterDirective],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    AdminModule,\n    EmployeeModule,\n    SharedModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: () => {\n          return sessionStorage.getItem(\"currentUser\")\n            ? JSON.parse(sessionStorage.getItem(\"currentUser\") as string).token\n            : null;\n        },\n      },\n    }),\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptorService,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtUnAuthorizedInterceptorService,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { LoginViewModel } from '../../models/login-view-model';\nimport { LoginService } from '../../services/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  loginViewModel: LoginViewModel = new LoginViewModel();\n  loginError: string = '';\n  constructor(private loginService: LoginService, private router: Router) {}\n\n  ngOnInit() {}\n  onLoginClick(event: any) {\n    this.loginService.Login(this.loginViewModel).subscribe({\n      next: (response) => {\n        if(this.loginService.currentUserRole==\"Admin\"){\n        this.router.navigate([\"/admin\",\"dashboard\"]);\n      }\n      else{\n        this.router.navigate([\"/employee\",\"tasks\"])\n      }\n      },\n      error: (error) => {\n        console.log(error);\n        this.loginError = 'Invalid Username or Password';\n      },\n    });\n  }\n}\n","<form>\n    <div class=\"row\">\n      <div class=\"col-lg-6 col-xl-5 col-md-9 mx-auto\">\n        <div class=\"card mt-4\">\n          <div class=\"card-header bg-secondary text-white\">\n            <h3>Login</h3>\n            <div appAlert [error]= \"loginError\" *ngIf=\"loginError\"></div>\n          </div>\n          <div class=\"card-body\">\n            <div class=\"form-group form-row\">\n              <label for=\"UserName\" class=\"col-md-4 col-form-label\">Username</label>\n              <div class=\"col-md-8\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Username\" [(ngModel)]=\"loginViewModel.UserName\" name=\"UserName\" autofocus=\"autofocus\">\n              </div>\n            </div>\n  \n            <div class=\"form-group form-row\">\n              <label for=\"Password\" class=\"col-md-4 col-form-label\">Password</label>\n              <div class=\"col-md-8\">\n                <input type=\"password\" class=\"form-control\" placeholder=\"Password\" [(ngModel)]=\"loginViewModel.Password\" name=\"Password\">\n              </div>\n            </div>\n  \n          </div>\n  \n          <div class=\"card-footer text-right\">\n            <!-- <span class=\"text-danger\">{{loginError}}&nbsp;</span> -->\n            <button class=\"btn btn-primary\" (click)=\"onLoginClick($event)\">Login</button>\n            <!-- <div *appRepeater=\"5; let i\">\n              <a class=\"btn btn-primary\" data-toggle=\"collapse\" [href]=\" '#collapse' + i \" role=\"button\">Show Details</a>\n  \n              <div class=\"collapse\" [id]=\" 'collapse' + i\">\n                <div class=\"card card-body\">\n                  Actual details here\n                </div>\n              </div>\n            </div> -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>","import { Component, OnInit } from '@angular/core';\nimport {\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Country } from '../../models/country';\nimport { CountriesService } from '../../services/countries.service';\nimport { CustomValidatorsService } from '../../services/custom-validators.service';\nimport { LoginService } from '../../services/login.service';\nimport { Router } from '@angular/router';\nimport { SignUpViewModel } from '../../models/sign-up-view-model';\nimport { CanComponentDeactivate } from '../../guards/can-deactivate-guard.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss'],\n})\n\nexport class SignUpComponent implements OnInit , CanComponentDeactivate{\n  signUpForm: FormGroup | any = null;\n  genders = ['male', 'female'];\n  countries: Country[] = [];\n  registerError: string | null = null;\n canLeave:boolean = false;\n\n  constructor(\n    private countriesService: CountriesService,\n    private formBuilder: FormBuilder,\n    private customValidatorsService: CustomValidatorsService,\n    private loginService: LoginService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.countriesService.getCountries().subscribe((response) => {\n      this.countries = response;\n    });\n\n    this.signUpForm = this.formBuilder.group(\n      {\n        personName: this.formBuilder.group({\n          firstName: [null, [Validators.required, Validators.minLength(2)]],\n          lastName: [null, [Validators.required, Validators.minLength(2)]],\n        }),\n\n        email: [\n          null,\n          [Validators.required, Validators.email],\n          [this.customValidatorsService.DuplicateEmailValidator()],\n          { updateOn: 'blur' },\n        ],\n        mobile: [\n          null,\n          [Validators.required, Validators.pattern(/^[789]\\d{9}$/)],\n        ],\n        dateOfBirth: [\n          null,\n          [\n            Validators.required,\n            this.customValidatorsService.minimumAgeValidator(18),\n          ],\n        ],\n        password: [null, [Validators.required]],\n        confirmPassword: [null, [Validators.required]],\n        gender: [null, [Validators.required]],\n        countryID: [null, [Validators.required]],\n        receiveNewsLetters: [null],\n        skills: this.formBuilder.array([]),\n      },\n      {\n        validators: [\n          this.customValidatorsService.compareValidator(\n            'confirmPassword',\n            'password'\n          ),\n        ],\n      }\n    );\n\n    this.signUpForm.valueChanges.subscribe((value: any) => {\n      //console.log(value);\n      this.canLeave=false;\n    });\n  }\n\n  onSubmitClick() {\n    debugger;\n    //Display current form value\n    this.signUpForm['submitted'] = true;\n    console.log(this.signUpForm);\n\n    if (this.signUpForm.valid) {\n      var signUpVieModel = this.signUpForm.value as SignUpViewModel;\n      this.loginService.Register(signUpVieModel).subscribe({\n        next: (response) => {\n          this.canLeave = true;\n          this.router.navigate([\"/employee\",\"tasks\"]);\n        },\n        error: (error) => {\n          console.log(error);\n          this.registerError = 'Unable to submit';\n        },\n      });\n    }\n\n    //setValue\n    // this.signUpForm.setValue({\n    //   firstName: \"Adam\",\n    //   lastName: \"Smith\",\n    //   email: \"smith@gmail.com\",\n    //   mobile: \"9876543210\",\n    //   dateOfBirth: \"2020-01-01\",\n    //   gender: \"male\",\n    //   countryID: 3,\n    //   receiveNewsLetters: true\n    // });\n\n    //patchValue\n    // this.signUpForm.patchValue({\n    //   firstName: \"Adam\",\n    //   lastName: \"Smith\",\n    //   email: \"smith@gmail.com\"\n    // });\n\n    //reset\n    //this.signUpForm.reset();\n\n    //reset with Parameters\n    // this.signUpForm.reset({\n    //   firstName: \"Adam\",\n    //   lastName: \"Smith\",\n    //   email: \"smith@gmail.com\"\n    // });\n  }\n\n  onAddSkill() {\n    var formGroup = new FormGroup({\n      skillName: new FormControl(null, [Validators.required]),\n      skillLevel: new FormControl(null, [Validators.required]),\n    });\n\n    (<FormArray>this.signUpForm.get('skills')).push(formGroup);\n  }\n\n  onRemoveClick(index: number) {\n    (<FormArray>this.signUpForm.get('skills')).removeAt(index);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-8 col-xl-6 mx-auto\">\n\n    <form [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmitClick()\">\n\n      <div class=\"card mt-1\">\n        <div class=\"card-header\">\n          <h4>Sign Up</h4>\n        </div>\n\n        <div class=\"card-body\">\n\n          <div class=\"form-group form-row\" formGroupName=\"personName\">\n            <label for=\"firstName\" class=\"col-md-4 col-form-label\">First Name:</label>\n            <div class=\"col-md-8\">\n              <input type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"First Name\" class=\"form-control\" formControlName=\"firstName\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('personName.firstName').valid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted) && signUpForm.get('personName.firstName').errors?.required\">First name can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted) && signUpForm.get('personName.firstName').errors?.minlength\">First name should contain at least 2 characters</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\" formGroupName=\"personName\">\n            <label for=\"lastName\" class=\"col-md-4 col-form-label\">Last Name:</label>\n            <div class=\"col-md-8\">\n              <input type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"Last Name\" class=\"form-control\" formControlName=\"lastName\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('personName.lastName').valid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted) && signUpForm.get('personName.lastName').errors?.required\">Last name can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted) && signUpForm.get('personName.lastName').errors?.minlength\">Last name should contain at least 2 characters</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"email\" class=\"col-md-4 col-form-label\">Email:</label>\n            <div class=\"col-md-8\">\n              <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"Email\" class=\"form-control\" formControlName=\"email\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('email').valid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) && signUpForm.get('email').errors?.required\">Email can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) && signUpForm.get('email').errors?.email\">Email is invalid</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) && signUpForm.get('email').errors?.uniqueEmail\">Email already exists</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"mobile\" class=\"col-md-4 col-form-label\">Mobile:</label>\n            <div class=\"col-md-8\">\n              <input type=\"text\" name=\"mobile\" id=\"mobile\" placeholder=\"Mobile\" class=\"form-control\" formControlName=\"mobile\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('mobile').valid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted) && signUpForm.get('mobile').errors?.required\">Mobile can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted) && signUpForm.get('mobile').errors?.pattern\">Mobile is invalid</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"dateOfBirth\" class=\"col-md-4 col-form-label\">Date of Birth:</label>\n            <div class=\"col-md-8\">\n              <input type=\"date\" name=\"dateOfBirth\" id=\"dateOfBirth\" placeholder=\"Date of Birth\" class=\"form-control\" formControlName=\"dateOfBirth\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('dateOfBirth').valid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted) && signUpForm.get('dateOfBirth').errors?.required\">Date of Birth can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted) && signUpForm.get('dateOfBirth').errors?.minAge\">Minimum Age must be 18</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"password\" class=\"col-md-4 col-form-label\">Password:</label>\n            <div class=\"col-md-8\">\n              <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" class=\"form-control\" formControlName=\"password\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('password').invalid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('password').valid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('password').invalid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted) && signUpForm.get('password').errors?.required\">Password can't be blank</span>\n            </div>\n          </div>\n\n\n          <div class=\"form-group form-row\">\n            <label for=\"confirmPassword\" class=\"col-md-4 col-form-label\">Confirm Password:</label>\n            <div class=\"col-md-8\">\n              <input type=\"password\" name=\"confirmPassword\" id=\"confirmPassword\" placeholder=\"Confirm Password\" class=\"form-control\" formControlName=\"confirmPassword\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('confirmPassword').invalid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('confirmPassword').valid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('confirmPassword').invalid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted) && signUpForm.get('confirmPassword').errors?.required\">Confirm Password can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.invalid && (signUpForm.dirty || signUpForm.touched || signUpForm.submitted) && signUpForm.errors?.compareValidator\">Password and Confirm Password do not match</span>\n            </div>\n          </div>\n\n\n          <div class=\"form-group form-row\">\n            <label class=\"col-md-4 col-form-label\">Gender:</label>\n            <div class=\"col-md-8\">\n\n              <div class=\"form-check-label form-check-inline\" *ngFor=\"let gender of genders\">\n                <input type=\"radio\" name=\"gender\" [id]=\"gender\" [value]=\"gender\" class=\"form-check-input\" formControlName=\"gender\">\n                <label [for]=\"gender\" class=\"form-check-label\">{{gender}}</label>\n              </div>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('gender').invalid && (signUpForm.get('gender').dirty || signUpForm.get('gender').touched || signUpForm.submitted) && signUpForm.get('gender').errors?.required\">Please select gender</span>\n\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"countryID\" class=\"col-md-4 col-form-label\">Country:</label>\n            <div class=\"col-md-8\">\n              <select name=\"countryID\" id=\"countryID\" class=\"form-control\" formControlName=\"countryID\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('countryID').invalid && (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('countryID').valid && (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted) }\">\n                <option value=\"null\">Please Select</option>\n                <option *ngFor=\"let country of countries\" [value]=\"country.countryID\">\n                  {{country.countryName}}\n                </option>\n              </select>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('countryID').invalid && (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted) && signUpForm.get('countryID').errors?.required\">Please select country</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label class=\"col-md-4 col-form-label\"></label>\n            <div class=\"col-md-8\">\n              <input type=\"checkbox\" name=\"receiveNewsLetters\" id=\"receiveNewsLetters\" value=\"true\" class=\"form-check-input\" formControlName=\"receiveNewsLetters\">\n              <label for=\"receiveNewsLetters\" class=\"form-check-label\">Receive News Letters</label>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label class=\"col-md-4 col-form-label\">Skills:</label>\n            <div class=\"col-md-8\" formArrayName=\"skills\">\n              <div class=\"row\" *ngFor=\"let skill of signUpForm.get('skills').controls; let i = index\" [formGroupName]=\"i\">\n\n                <div class=\"col-5\">\n                  <input type=\"text\" name=\"skillName\" id=\"skillName\" placeholder=\"Skill Name\" formControlName=\"skillName\" class=\"form-control\" [ngClass]=\"{\n                    'is-invalid': skill.get('skillName').invalid && (skill.get('skillName').dirty || skill.get('skillName').touched || signUpForm.submitted),\n    \n                    'is-valid': skill.get('skillName').valid && (skill.get('skillName').dirty || skill.get('skillName').touched || signUpForm.submitted) }\">\n                </div>\n\n                <div class=\"col-4\">\n                  <select name=\"level\" id=\"level\" formControlName=\"skillLevel\" class=\"form-control\" [ngClass]=\"{\n                    'is-invalid': skill.get('skillLevel').invalid && (skill.get('skillLevel').dirty || skill.get('skillLevel').touched || signUpForm.submitted),\n    \n                    'is-valid': skill.get('skillLevel').valid && (skill.get('skillLevel').dirty || skill.get('skillLevel').touched || signUpForm.submitted) }\">\n                    <option value=\"null\">Please Select</option>\n                    <option value=\"Beginner\">Beginner</option>\n                    <option value=\"Intermediate\">Intermediate</option>\n                    <option value=\"Professional\">Professional</option>\n                    <option value=\"Expert\">Expert</option>\n                  </select>\n                </div>\n\n                <div class=\"col-3\">\n                  <button class=\"btn btn-danger\" type=\"button\" (click)=\"onRemoveClick(i)\">Remove</button>\n                </div>\n              </div>\n\n              <button class=\"btn btn-primary\" type=\"button\" (click)=\"onAddSkill()\">Add Skill</button>\n            </div>\n\n          </div>\n\n          <!-- {{signUpForm.value | json}} -->\n        </div>\n\n        <div class=\"card-footer\">\n          <button class=\"btn btn-success float-right\">Create Account</button>\n          <div class=\"text-danger\">{{registerError}}</div>\n        </div>\n\n      </div>\n\n    </form>\n  </div>\n</div>","import { Directive, ElementRef, HostBinding, HostListener, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appAlert]'\n})\nexport class AlertDirective {\n  @Input(\"error\") error: string | any = null;\n  @HostBinding(\"title\") title: string | null = null;\n\n  constructor(private elementRef:ElementRef, private renderer2: Renderer2) { }\n\n  divElement: any;\n  spanElement: any;\n  spanText: any;\n\n  ngOnInit() {\n    /* div */\n    this.divElement = this.renderer2.createElement(\"div\"); //<div></div>\n\n    this.renderer2.setAttribute(this.divElement, \"role\", \"alert\"); //<div role=\"alert\"> </div>\n\n    this.renderer2.setAttribute(this.divElement, \"class\", \"alert alert-danger fade show\");\n    //<div role=\"alert\" class=\"alert alert-danger fade show\"> </div>\n\n    this.renderer2.setStyle(this.divElement, \"transition\", \"transform 0.5s\");\n    //<div role=\"alert\" class=\"alert alert-danger fade show\" style=\"transition: transform 0.5s\"> </div>\n\n    /* span */\n    this.spanElement = this.renderer2.createElement(\"span\");\n    this.renderer2.setAttribute(this.spanElement, \"class\", \"message\");\n    //<span class=\"message\"></span>\n\n    /* spanText */\n    this.spanText = this.renderer2.createText(this.error);\n    this.renderer2.appendChild(this.spanElement, this.spanText);\n    //<span class=\"message\">${this.error}</span>\n\n    this.renderer2.appendChild(this.divElement, this.spanElement);\n    //<div role=\"alert\" class=\"alert alert-danger fade show\" style=\"transition: transform 0.5s\"> <span class=\"message\">${this.error}</span> </div>\n\n    this.elementRef.nativeElement.appendChild(this.divElement);\n\n    this.title = \"Please try again!\";\n  }\n\n  @HostListener(\"mouseenter\", [\"$event\"])\n  onMouseEnter(event: any) {\n    //this.elementRef.nativeElement.querySelector(\".alert\").style.transform = \"scale(1.1)\";\n    this.renderer2.setStyle(this.divElement, \"transform\", \"scale(1.1)\");\n  }\n\n  @HostListener(\"mouseleave\", [\"$event\"])\n  onMouseLeave() {\n    //this.elementRef.nativeElement.querySelector(\".alert\").style.transform = \"scale(1)\";\n    this.renderer2.setStyle(this.divElement, \"transform\", \"scale(1)\");\n  }\n}\n","import { Directive } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\n\n@Directive({\n  selector: '[appClientLocationStatusValidator]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: ClientLocationStatusValidatorDirective, multi: true }]\n})\nexport class ClientLocationStatusValidatorDirective implements Validator {\n\n  constructor() { }\n  validate(control: AbstractControl): ValidationErrors | null {\n    let isValid = true;\n    if (control.value.ClientLocation == 6 && control.value.Status == \"Support\") {\n      isValid = false; //indicates invalid\n    }\n\n    if (isValid == true) {\n      return null; //valid\n    }\n    else {\n      return { clientLocationStatus: { valid: false } }; //invalid\n    }\n  }\n\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appComponentLoader]'\n})\nexport class ComponentLoaderDirective {\n\n  constructor(public viewContainerRef:ViewContainerRef) { }\n\n}\n","import { Directive } from '@angular/core';\nimport { AbstractControl, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { ProjectsService } from './../services/projects.service';\nimport { Observable, map } from 'rxjs';\nimport { Project } from './../models/project';\n\n@Directive({\n  selector: '[appProjectIDUniqueValidator]',\n  providers: [ { provide: NG_ASYNC_VALIDATORS, useExisting: ProjectIDUniqueValidatorDirective, multi: true }]\n})\nexport class ProjectIDUniqueValidatorDirective {\n\n  constructor(private projectsService: ProjectsService) { }\n\n  validate(control: AbstractControl) : Observable<ValidationErrors | null>\n  {\n    return this.projectsService.getProjectByProjectID(control.value).pipe(map( (existingProject: Project) => {\n      if (existingProject != null)\n      {\n        return { uniqueProjectID: { valid: false }};\n      }\n      else\n      {\n        return null;\n      }\n    }));\n  }\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appRepeater]'\n})\nexport class RepeaterDirective {\n  @Input(\"appRepeater\") n: number = 0;\n\n  constructor(private viewContainerRef: ViewContainerRef, private templateRef: TemplateRef<any>) {\n    this.viewContainerRef.clear();\n  }\n\n  ngOnInit() {\n    for (let i = 0; i < this.n; i++) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef, { $implicit: i });\n    }\n  }\n\n}\n","import { Directive, Input } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\n\n@Directive({\n  selector: '[appTeamSizeValidator]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: TeamSizeValidatorDirective, multi: true }]\n})\nexport class TeamSizeValidatorDirective implements Validator{\n\n  constructor() { }\n\n  @Input(\"appTeamSizeValidator\") n: number | any = 0;\n\n  validate(control: AbstractControl): ValidationErrors | null\n  {\n    let currentValue = control.value;\n    let isValid = currentValue % this.n == 0;\n\n    if (isValid)\n    {\n      return null; //valid\n    }\n    else\n    {\n      return { divisible: { valid: false } }; //indicates invalid\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Project } from 'src/app/models/project';\nimport { TaskPriority } from 'src/app/models/task-priority';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { TaskPrioritiesService } from 'src/app/services/task-priorities.service';\nimport { TasksService } from 'src/app/services/tasks.service';\n\n@Component({\n  selector: 'app-create-task',\n  templateUrl: './create-task.component.html',\n  styleUrls: ['./create-task.component.scss']\n})\nexport class CreateTaskComponent implements OnInit\n{\n  newTaskForm: FormGroup |any;\n  projects: Observable<Project[]> |any;\n  employees: Observable<any> |any ;\n  taskPriorities: Observable<TaskPriority[]> |any;\n  \n  constructor(private tasksService: TasksService, private router: Router, private projectsService: ProjectsService, private taskPrioritiesService: TaskPrioritiesService, private loginService: LoginService)\n  {\n  }\n\n  ngOnInit()\n  {\n    this.newTaskForm = new FormGroup({\n      taskID: new FormControl(0),\n      taskName: new FormControl(null, [ Validators.required ]),\n      description: new FormControl(null, []),\n      projectID: new FormControl(null, [ Validators.required ]),\n      assignedTo: new FormControl(null, [ Validators.required ]),\n      taskPriorityID: new FormControl(2, [ Validators.required ])\n    });\n\n    this.projects = this.projectsService.getAllProjects();\n    this.employees = this.loginService.getAllEmployes();\n    this.taskPriorities = this.taskPrioritiesService.getTaskPriorities();\n  }\n\n  onCreateTaskClick(event:any)\n  {\n    this.newTaskForm[\"submitted\"] = true;\n\n    if (this.newTaskForm.valid)\n    {\n      this.tasksService.insertTask(this.newTaskForm.value).subscribe(() => {\n        this.router.navigate( [ \"/employee\", \"tasks\" ]);\n      }, (error) => {\n        console.log(error);\n      });\n    }\n    else\n    {\n      console.log(this.newTaskForm.errors);\n    }\n  }\n}","<p>create-task works!</p>\n<h1>Create Task</h1>\n<form [formGroup]=\"newTaskForm\" novalidate=\"novalidate\">\n  <div class=\"row\">\n\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"taskName\" class=\"text-infor\" style=\"font-size:18px\">Task Name:</label>\n        <input type=\"text\" class=\"form-control\" id=\"taskName\" placeholder=\"Task Name\" style=\"font-size:20px\" autofocus=\"autofocus\" formControlName=\"taskName\">\n\n        <span class=\"text-danger\" *ngIf=\"newTaskForm.get('taskName').invalid && (newTaskForm.get('taskName').dirty || newTaskForm.get('taskName').touched || newTaskForm.submitted) && newTaskForm.get('taskName').errors?.required\">Task Name can't be blank</span>\n      </div>\n    </div>\n\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"description\" class=\"text-info\">Description:</label>\n        <textarea class=\"form-control\" id=\"description\" placeholder=\"Description\" formControlName=\"description\"></textarea>\n      </div>\n    </div>\n\n    <div class=\"col-lg-6\">\n      <div class=\"form-group form-row\">\n        <label for=\"projectID\" class=\"text-info col-md-3 col-form-label\">Project:</label>\n        <div class=\"col-md-9\">\n          <select class=\"form-control\" id=\"projectID\" formControlName=\"projectID\">\n            <option value=\"null\">Please Select</option>\n\n            <option *ngFor=\"let project of projects | async\" [value]=\"project.projectID\">\n              {{project.projectName}}\n            </option>\n          </select>\n\n          <span class=\"text-danger\" *ngIf=\"newTaskForm.get('projectID').invalid && (newTaskForm.get('projectID').dirty || newTaskForm.get('projectID').touched || newTaskForm.submitted) && newTaskForm.get('projectID').errors?.required\">Please select project, to which the task belongs to.</span>\n        </div>\n      </div>\n\n      <div class=\"form-group form-row\">\n        <label for=\"assignedTo\" class=\"text-info col-md-3 col-form-label\">Assigned To:</label>\n        <div class=\"col-md-9\">\n          <select class=\"form-control\" id=\"assignedTo\" formControlName=\"assignedTo\">\n            <option value=\"null\">Please Select</option>\n\n            <option [value]=\"employee.id\" *ngFor=\"let employee of employees | async\">\n              {{employee.userName}}\n            </option>\n          </select>\n\n          <span class=\"text-danger\" *ngIf=\"newTaskForm.get('assignedTo').invalid && (newTaskForm.get('assignedTo').dirty || newTaskForm.get('assignedTo').touched || newTaskForm.submitted) && newTaskForm.get('assignedTo').errors?.required\">Select the employee, to whom the task id assigned.</span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-6\">\n      <div class=\"form-group form-row\">\n        <label for=\"taskPriorityID\" class=\"text-info col-md-3 col-form-label\">Priority:</label>\n        <div class=\"col-md-9\">\n          <select class=\"form-control\" id=\"taskPriorityID\" formControlName=\"taskPriorityID\">\n            <option value=\"null\">Please Select</option>\n\n            <option [value]=\"taskPriority.taskPriorityID\" *ngFor=\"let taskPriority of taskPriorities | async\">\n              {{taskPriority.taskPriorityName}}\n            </option>\n          </select>\n\n          <span class=\"text-danger\" *ngIf=\"newTaskForm.get('taskPriorityID').invalid && (newTaskForm.get('taskPriorityID').dirty || newTaskForm.get('taskPriorityID').touched || newTaskForm.taskPriorityID) && newTaskForm.get('taskPriorityID').errors?.required\">Select the employee, to whom the task id assigned.</span>\n        </div>\n      </div>\n\n      <div class=\"form-group form-row\">\n          <label for=\"taskStatus\" class=\"text-info col-md-3 col-form-label\">Status:</label>\n          <div class=\"col-md-9\">\n            <input type=\"text\" class=\"form-control-plaintext\" id=\"taskStatus\" placeholder=\"Task Status\" value=\"Holding\" readonly=\"readonly\">\n          </div>\n        </div>\n    </div>\n\n\n    <div class=\"col-lg-12 border-top text-center\">\n      <div>\n        <button class=\"btn btn-success btn-lg mt-2\" (click)=\"onCreateTaskClick($event)\">Create Task</button>\n      </div>\n      <a class=\"btn btn-info btn-sm mt-1\" [routerLink]=\" [ '/employee', 'tasks' ] \">Back to Tasks</a>\n    </div>\n\n  </div>\n</form>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-task',\n  templateUrl: './edit-task.component.html',\n  styleUrls: ['./edit-task.component.scss']\n})\nexport class EditTaskComponent {\n\n}\n","<p>edit-task works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { GroupedTask } from 'src/app/models/grouped-task';\nimport { LoginService } from 'src/app/services/login.service';\nimport { TasksService } from 'src/app/services/tasks.service';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss']\n})\n\nexport class TasksComponent implements OnInit\n{\n  taskGroups: GroupedTask[] = [];\n\n  constructor(private tasksService: TasksService, public loginService: LoginService)\n  {\n  }\n\n  ngOnInit()\n  {\n    this.tasksService.getTasks().subscribe((response) => {\n      this.taskGroups = response;\n    });\n  }\n\n  /* Get background color based on task status */\n  getTaskGroupBgCssClass(taskStatusName:any) : string\n  {\n    var className=\"\";\n    switch (taskStatusName)\n    {\n      case \"Holding\": className = \"bg-secondary text-white\"; break;\n      case \"Prioritized\": className = \"bg-primary text-white\"; break;\n      case \"Started\": className = \"bg-info text-white\"; break;\n      case \"Finished\": className = \"bg-success text-white\"; break;\n      case \"Reverted\": className = \"bg-danger text-white\"; break;\n    }\n    return className;\n  }\n\n  /* Get background color based on task priority */\n  getTaskPriorityBadgeCssClass(taskPriorityName:any) : string\n  {\n    var className=\"\";\n    switch (taskPriorityName)\n    {\n      case \"Urgent\": className = \"badge-danger\"; break;\n      case \"Normal\": className = \"badge-primary\"; break;\n      case \"Below Normal\": className = \"badge-info\"; break;\n      case \"Low\": className = \"badge-secondary\"; break;\n    }\n    return className;\n  }\n\n  /* Get text color based on task status */\n  getTaskGroupTextCssClass(taskStatusName:any) : string\n  {\n    var className=\"\";\n    switch (taskStatusName)\n    {\n      case \"Holding\": className = \"text-secondary\"; break;\n      case \"Prioritized\": className = \"text-primary\"; break;\n      case \"Started\": className = \"text-info\"; break;\n      case \"Finished\": className = \"text-success\"; break;\n      case \"Reverted\": className = \"text-danger\"; break;\n    }\n    return className;\n  }\n}","<h1>Tasks</h1>\n<a [routerLink]=\" [ '/employee', 'createtask' ] \" class=\"btn btn-primary\">Create Task</a>\n\n<div class=\"row mt-1 mb-2\">\n\n    <div class=\"col-lg-6 mb-1\" *ngFor=\"let taskGroup of taskGroups\">\n        <div class=\"card card-primary\">\n\n            <div class=\"card-header\" [ngClass]=\"getTaskGroupBgCssClass(taskGroup.taskStatusName)\">\n                <div class=\"card-title\">\n                    <h4>\n                        {{taskGroup.taskStatusName}}\n                        <span class=\"badge badge-warning float-right\">\n                            {{taskGroup.tasks.length}}\n                        </span>\n                    </h4>\n                </div>\n            </div>\n\n            <div class=\"card-body\">\n\n                <div class=\"card mb-1\" *ngFor=\"let task of taskGroup.tasks; let i = index\">\n\n                    <div class=\"card-header\">\n                        #{{i + 1}} &nbsp;&nbsp; {{task.taskName}}\n\n                        <div class=\"badge float-right mr-1\" style=\"font-size:15px\" [ngClass]=\"getTaskPriorityBadgeCssClass(task.taskPriority?.taskPriorityName)\">\n                            {{task.taskPriority?.taskPriorityName}}\n                        </div>\n                    </div>\n\n                    <div class=\"card-body\">\n                        <div>{{task.description}}</div>\n\n                        <div>\n                            <table class=\"table table-sm table-borderless\">\n                                <tr>\n                                    <td>Created:</td>\n                                    <td>\n                                        <i class=\"fa fa-user\"></i>\n                                        {{task.createdByUser?.userName}}\n                                        &nbsp;&nbsp;&nbsp;\n                                        <i class=\"fa fa-calendar\"></i>\n                                        {{task.createdOnString}}\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>Assigned to:</td>\n                                    <td>\n                                        <i class=\"fa fa-user-o\"></i>\n                                        {{task.assignedToUser?.userName}}\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>Project:</td>\n                                    <td>\n                                        <i class=\"fa fa-briefcase\"></i>\n                                        {{task.project?.projectName}} -\n                                        {{task.project?.clientLocation?.clientLocationName}}\n                                    </td>\n                                </tr>\n                            </table>\n\n                            <table class=\"table table-sm table-bordered\">\n                                <thead class=\"table-light\">\n                                    <th>Date</th>\n                                    <th>Status</th>\n                                    <th>User</th>\n                                    <th>Description</th>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let taskStatusDetail of task.taskStatusDetails\">\n                                        <td>\n                                            <i class=\"fa fa-calendar\"></i>\n                                            {{taskStatusDetail?.statusUpdationDateTimeString}}\n                                        </td>\n                                        <td class=\"text-primary\" [ngClass]=\"getTaskGroupTextCssClass(taskStatusDetail?.taskStatus?.taskStatusName)\">\n                                            {{taskStatusDetail?.taskStatus?.taskStatusName}}\n                                        </td>\n                                        <td>\n                                            <i class=\"fa fa-user\"></i>\n                                            {{taskStatusDetail?.user?.userName}}\n                                        </td>\n                                        <td>\n                                            {{taskStatusDetail?.description}}\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n\n                    </div>\n\n                    <div class=\"card-footer\">\n                        <div class=\"btn-group\">\n                            <a [routerLink]=\" [ '/employee', 'updatetaskstatus', task.taskID ] \" class=\"btn btn-sm btn-outline-secondary\">\n                                <i class=\"fa fa-pencil\"></i>\n                                Change Status\n                            </a>\n\n                            <a [routerLink]=\" [ '/employee', 'edittask', task.taskID ] \" class=\"btn btn-sm btn-outline-secondary\" *ngIf=\"task.createdByUser?.userName == loginService.currentUserName\">\n                                <i class=\"fa fa-pencil-square-o\"></i>\n                                Edit\n                            </a>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Task } from 'src/app/models/task';\nimport { TaskStatus } from 'src/app/models/task-status';\nimport { TaskStatusDetail } from 'src/app/models/task-status-detail';\nimport { TaskStatusesService } from 'src/app/services/task-statuses.service';\nimport { TasksService } from 'src/app/services/tasks.service';\n\n@Component({\n  selector: 'app-update-task-status',\n  templateUrl: './update-task-status.component.html',\n  styleUrls: ['./update-task-status.component.scss']\n})\n\nexport class UpdateTaskStatusComponent implements OnInit {\n  //Properties to represent taskstatusdetails\n  taskID: number|any;\n  currentTask: Task = new Task();\n  currentTaskStatusDetail: TaskStatusDetail = new TaskStatusDetail();\n  editTaskStatusForm: FormGroup|any;\n  taskStatuses: Observable<TaskStatus[]>|any;\n\n  constructor(private tasksService: TasksService, private router: Router, private taskStatuesService: TaskStatusesService, private activatedRoute: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    //Receive taskid parameter\n    this.activatedRoute.params.subscribe((params) => {\n      this.taskID = params[\"taskid\"];\n    });\n\n    //Create reactive form\n    this.editTaskStatusForm = new FormGroup({\n      thisStatusDetailID: new FormControl(0),\n      taskID: new FormControl(null),\n      taskStatusID: new FormControl(null, [Validators.required]),\n      description: new FormControl(null)\n    });\n\n    //get taskstatuses from db for dropdownlist\n    this.taskStatuses = this.taskStatuesService.getTaskStatuses();\n\n    //get task by taskid\n    this.tasksService.getTaskByTaskID(this.taskID).subscribe((task: Task) => {\n      this.currentTask = task;\n\n      //Load task details into Reactive form\n      this.currentTaskStatusDetail.taskID = this.taskID;\n      this.currentTaskStatusDetail.description = null;\n      this.currentTaskStatusDetail.taskStatusID = task.currentTaskStatusID;\n      this.currentTaskStatusDetail.taskStatusDetailID = 0;\n      console.log(this.currentTaskStatusDetail);\n      this.editTaskStatusForm.patchValue(this.currentTaskStatusDetail);\n    });\n  }\n\n  onUpdateTaskStatusClick(event:any) {\n    this.editTaskStatusForm[\"submitted\"] = true;\n\n    if (this.editTaskStatusForm.valid) {\n      //send REST-API call to server\n      this.tasksService.updateTaskStatus(this.editTaskStatusForm.value).subscribe({next:(response) => {\n        this.router.navigate([\"/employee\", \"tasks\"]);\n      }, error:(error) => {\n        console.log(error);\n      }});\n    }\n    else {\n      console.log(this.editTaskStatusForm.errors);\n    }\n  }\n}","<h1>Update Task Status</h1>\n<form [formGroup]=\"editTaskStatusForm\" novalidate=\"novalidate\">\n\n  <div class=\"row\">\n\n    <div class=\"col-12\">\n      <table class=\"table table-sm table-borderless\">\n        <tr>\n          <td style=\"width:65px\">Created:</td>\n          <td>\n            <i class=\"fa fa-user\"></i>\n            {{currentTask.createdByUser?.userName}}\n            &nbsp;&nbsp;&nbsp;\n            <i class=\"fa fa-calendar\"></i>\n            {{currentTask.createdOn}}\n          </td>\n\n          <td class=\"text-right\">Last Updated on:</td>\n          <td>\n            <i class=\"fa fa-calendar-check-o\"></i>\n            {{currentTask.lastUpdatedOn}}\n          </td>\n        </tr>\n      </table>\n    </div>\n\n    <div class=\"col-lg-12\">\n      <div class=\"form-group\">\n        <label for=\"description\" class=\"text-info\">Description:</label>\n        <textarea class=\"form-control\" id=\"description\" placeholder=\"Description\" formControlName=\"description\"></textarea>\n      </div>\n    </div>\n\n    <div class=\"col-lg-6\">\n\n      <div class=\"form-group form-row\">\n        <label for=\"taskStatusID\" class=\"text-info col-md-3 col-form-label\">Status:</label>\n        <div class=\"col-md-9\">\n          <select class=\"form-control\" id=\"taskStatusID\" formControlName=\"taskStatusID\">\n            <option value=\"null\">Please Select</option>\n\n            <option *ngFor=\"let taskStatus of taskStatuses | async\" [value]=\"taskStatus.taskStatusID\">\n              {{taskStatus.taskStatusName}}\n            </option>\n          </select>\n\n          <span class=\"text-danger\" *ngIf=\"editTaskStatusForm.get('taskStatusID').invalid && (editTaskStatusForm.get('taskStatusID').dirty || editTaskStatusForm.get('taskStatusID').touched || editTaskStatusForm.submitted) && editTaskStatusForm.get('taskStatusID').errors?.required\">\n            Please select current task status\n          </span>\n        </div>\n      </div>\n\n    </div>\n\n    <div class=\"col-lg-12 border-top text-center\">\n      <div>\n        <button class=\"btn btn-success btn-lg mt-2\" (click)=\"onUpdateTaskStatusClick($event)\">Update Task Status</button>\n      </div>\n      <div>\n        <a [routerLink]=\" [ '/employee', 'tasks' ] \" class=\"btn btn-info btn-sm mt-1\">Back to Tasks</a>\n      </div>\n    </div>\n\n  </div>\n</form>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TasksComponent } from '../components/tasks/tasks.component';\nimport { CreateTaskComponent } from '../components/create-task/create-task.component';\nimport { EditTaskComponent } from '../components/edit-task/edit-task.component';\nimport { UpdateTaskStatusComponent } from '../components/update-task-status/update-task-status.component';\n\nconst routes: Routes = [\n  {\n    path: 'employee',\n    data: { expectedRole: 'Employee' },\n    children: [\n      { path: 'tasks', component: TasksComponent, data: { linkIndex: 1 } },\n      {\n        path: 'createtask',\n        component: CreateTaskComponent,\n        data: { linkIndex: 2 },\n      },\n      {\n        path: 'edittask/:taskid',\n        component: EditTaskComponent,\n        data: { linkIndex: 3 },\n      },\n      {\n        path: 'updatetaskstatus/:taskid',\n        component: UpdateTaskStatusComponent,\n        data: { linkIndex: 4 },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EmployeeRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { TasksComponent } from './components/tasks/tasks.component';\nimport { EmployeeRoutingModule } from './employee-routing/employee-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { CreateTaskComponent } from './components/create-task/create-task.component';\nimport { EditTaskComponent } from './components/edit-task/edit-task.component';\nimport { UpdateTaskStatusComponent } from './components/update-task-status/update-task-status.component';\n\n\n\n@NgModule({\n  declarations: [TasksComponent, CreateTaskComponent, EditTaskComponent, UpdateTaskStatusComponent],\n  imports: [\n    SharedModule, EmployeeRoutingModule\n  ],\n  exports:[TasksComponent, CreateTaskComponent, EditTaskComponent, UpdateTaskStatusComponent]\n})\nexport class EmployeeModule { }\n","import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JwtInterceptorService implements HttpInterceptor {\n  constructor() {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    var currentUser = { token: '' };\n\n    if (sessionStorage['currentUser'] != null) {\n      currentUser = JSON.parse(sessionStorage['currentUser']);\n    }\n\n    req = req.clone({\n      setHeaders: {\n        Authorization: 'Bearer ' + currentUser.token,\n      },\n    });\n    return next.handle(req);\n  }\n}\n","import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JwtUnAuthorizedInterceptorService implements HttpInterceptor {\n  constructor() {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      tap({\n        next: (event: HttpEvent<any>) => {},\n        error: (error: any) => {\n          if (error instanceof HttpErrorResponse) {\n            if (error.status == 401) {\n              console.log(error);\n              alert('401 UnAuthorized');\n            }\n          }\n        },\n      })\n    );\n  }\n}\n","export class ClientLocation {\n    clientLocationID: any;\n    clientLocationName: any;\n\n    constructor()\n    {\n        this.clientLocationID = null;\n        this.clientLocationName = null;\n    }\n}\n","export class Country {\n    countryID: number|any;\n    countryName: string|any;\n\n    // constructor(countryIDParam: number, countryNameParam: string)\n    // {\n    //     this.countryID = countryIDParam;\n    //     this.countryName = countryNameParam;\n    // }\n\n    constructor()\n    {\n        this.countryID = null;\n        this.countryName = null;\n    }\n}\n","export class LoginViewModel {\n    UserName: string = \"\";\n    Password: string = \"\";\n}\n","import { ClientLocation } from \"./client-location\";\n\nexport class Project \n{\n    projectID: number | any;\n    projectName: string | any;\n    dateOfStart: string | any;\n    teamSize: number | any;\n    active: boolean | any;\n    status: string | any;\n    clientLocationID: number | any;\n    clientLocation: ClientLocation | any;\n\n    constructor()\n    {\n        this.projectID = null;\n        this.projectName = null;\n        this.dateOfStart = null;\n        this.teamSize = null;\n        this.active = true;\n        this.status = null;\n        this.clientLocationID = null;\n        this.clientLocation = new ClientLocation();\n    }\n}\n","export class TaskPriority {\n    taskPriorityID: number | any;\n    taskPriorityName: string | any;\n\n    constructor() {\n        this.taskPriorityID = null;\n        this.taskPriorityName = null;\n    }\n}\n","import { TaskStatus } from \"./task-status\";\n\nexport class TaskStatusDetail {\n    taskStatusDetailID: number|any;\n    taskID: number|any;\n    taskStatusID: number|any;\n    userID: string|any;\n    description: string|any;\n    taskstatus: TaskStatus|any;\n    user: any;\n    statsUpdationDateTimeString: string|any;\n\n    constructor()\n    {\n        this.taskStatusDetailID = null;\n        this.taskID = null;\n        this.taskStatusID = null;\n        this.description = null;\n        this.userID = null;\n        this.taskstatus = null;\n        this.user = null;\n        this.statsUpdationDateTimeString = null;\n    }\n}\n","export class TaskStatus {\n    taskStatusID: number|any;\n    taskStatusName: string|any;\n\n    constructor()\n    {\n        this.taskStatusID = null;\n        this.taskStatusName = null;\n    }\n}\n\n","import { Project } from \"./project\";\n\nexport class Task {\n    taskID: number|any;\n    taskName: string |any;\n    description: string |any;\n    createdOn: string |any;\n    projectID: number |any;\n    createdBy: string |any;\n    assignedTo: string |any;\n    taskPriorityID: number |any;\n    lastUpdatedOn: number |any;\n    currentStatus: number |any;\n    currentTaskStatusID: number |any;\n\n    project: Project |any;\n    createdByUser: any;\n    assignedToUser: any;\n    taskStatusDetails: any;\n\n    constructor()\n    {\n        this.taskID = null;\n        this.taskName = null;\n        this.description = null;\n        this.createdOn = null;\n        this.projectID = null;\n        this.createdBy = null;\n        this.assignedTo = null;\n        this.taskPriorityID = null;\n        this.lastUpdatedOn = null;\n        this.currentStatus = null;\n\n        this.project = null;\n        this.createdByUser = null;\n        this.assignedToUser = null;\n        this.taskStatusDetails = null;\n        this.taskStatusDetails = null;\n        this.currentTaskStatusID = null;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter',\n  pure:false\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: any[] | any, searchBy: string, searchText: string): any\n  {\n    if (value == null)\n    {\n      return value;\n    }\n\n    let resultArray = [];\n    for (let item of value)\n    {\n      if (String(item[searchBy]).toLowerCase().indexOf(searchText.toLowerCase()) >= 0)\n      {\n        resultArray.push(item);\n      }\n    }\n\n    return resultArray;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Project } from './../models/project';\n\n@Pipe({\n  name: 'paging'\n})\nexport class PagingPipe implements PipeTransform {\n  transform(value: Project[], currentPageIndex: number, pageSize: number): any\n  {\n    if (value == null)\n    {\n      return value;\n    }\n\n    let resultArray = [];\n    for (let i = currentPageIndex * pageSize; i < (currentPageIndex + 1) * pageSize; i++)\n    {\n      if (value[i])\n      {\n        resultArray.push(value[i]);\n      }\n    }\n    return resultArray;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sort'\n})\nexport class SortPipe implements PipeTransform\n{\n\n  transform(value: any[], sortBy: string, sortOrder: string): any\n  {\n    if (value == null)\n    {\n      return null;\n    }\n\n    value.sort(function(a, b) {\n      //less than 0        :   a comes before b\n      //greater than 0  :   b comes before a\n      //equal to 0         :   a and b are left unchanged\n\n      if (a[sortBy] && b[sortBy])\n      {\n        return a[sortBy].toString().toLowerCase()[0] - b[sortBy].toString().toLowerCase()[0];\n\n        //a = cat  --> 99\n        //b = dog --> 100\n        //99 - 100 = -1     --> less than 0        :   a comes before b\n      }\n      else\n      {\n        return 0;\n      }\n    });\n\n    if (sortOrder == \"DESC\")\n    {\n      value.reverse();\n    }\n\n    return value;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ClientLocation } from './../models/client-location';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientLocationsService {\n\n  constructor(private httpClient:HttpClient) { }\n\n  getClientLocations():Observable<ClientLocation[]>{\n    return this.httpClient.get<ClientLocation[]>(\"/api/clientlocations\", { responseType: \"json\" })\n\n  }\n\n  getClientLocationtByClientLocationID(ClientLocationID: number): Observable<ClientLocation> {\n    return this.httpClient.get<ClientLocation>(\"/api/clientlocations/searchbyclientlocationid/\" + ClientLocationID, { responseType: \"json\" });\n  }\n\n  insertClientLocation(newClientLocation: ClientLocation): Observable<ClientLocation> {\n    return this.httpClient.post<ClientLocation>( \"/api/clientlocations\", newClientLocation, { responseType: \"json\" });\n  }\n\n  updateClientLocation(existingClientLocation: ClientLocation): Observable<ClientLocation> {\n    return this.httpClient.put<ClientLocation>(\"/api/clientlocations\", existingClientLocation, { responseType: \"json\" });\n  }\n\n  deleteClientLocation(ClientLocationID: number): Observable<string> {\n    return this.httpClient.delete<string>(\"/api/clientlocations?ClientLocationID=\" + ClientLocationID);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Country } from './../models/country';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountriesService {\n\n  constructor(private httpClient: HttpClient)\n  {\n  }\n\n  getCountries(): Observable<Country[]>\n  {\n    return this.httpClient.get<Country[]>(\"/api/countries\", { responseType: \"json\" });\n  }\n\n  getCountryByCountryID(CountryID: number): Observable<Country> {\n    return this.httpClient.get<Country>(\"/api/countries/searchbycountryid/\" + CountryID, { responseType: \"json\" });\n  }\n\n  insertCountry(newCountry: Country): Observable<Country> {\n    return this.httpClient.post<Country>( \"/api/countries\", newCountry, { responseType: \"json\" });\n  }\n\n  updateCountry(existingCountry: Country): Observable<Country> {\n    return this.httpClient.put<Country>( \"/api/countries\", existingCountry, { responseType: \"json\" });\n  }\n\n  deleteCountry(CountryID: number | null): Observable<string> {\n    return this.httpClient.delete<string>( \"/api/countries?countryID=\" + CountryID);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl, AsyncValidatorFn, FormControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { Observable, map } from 'rxjs';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomValidatorsService {\n\n  constructor(private loginService: LoginService) { }\n\n  public minimumAgeValidator(minAge: number): ValidatorFn\n  {\n    return (control: AbstractControl): ValidationErrors | null =>\n    {\n      if (!control.value)\n        return null; //return, if the date of birth is null\n\n      var today = new Date();\n      var dateOfBirth = new Date(control.value);\n      var diffMilliSeconds = Math.abs(today.getTime() - dateOfBirth.getTime());\n      var diffYears = (diffMilliSeconds / (1000 * 60 * 60 * 24)) / 365.25;\n\n      if (diffYears >= minAge)\n        return null; //valid\n      else\n        return { minAge: { valid: false } }; //invalid\n    };\n  }\n  public compareValidator(controlToValidate: string, controlToCompare: string): ValidatorFn\n  {\n    return (formGroup: AbstractControl): ValidationErrors | null =>\n    {\n      if (!(formGroup.get(controlToValidate) as FormControl).value)\n        return null; //return, if the confirm password is null\n\n      if ((formGroup.get(controlToValidate) as FormControl).value == (formGroup.get(controlToCompare) as any).value)\n        return null; //valid\n      else\n      {\n        (formGroup.get(controlToValidate) as FormControl).setErrors({ compareValidator: { valid: false } });\n        return { compareValidator: { valid: false } }; //invalid\n      }\n    };\n  }\n\n  public DuplicateEmailValidator(): AsyncValidatorFn\n  {\n    return (control: AbstractControl): Observable<ValidationErrors | null> =>\n    {\n      return this.loginService.getUserByEmail(control.value).pipe(map((existingUser: any) =>\n      {\n        if (existingUser != null)\n        {\n          return { uniqueEmail: { valid: false } }; //invalid\n        }\n        else\n        {\n          return null;\n        }\n      }));\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DashboardService {\n\n  getTeamMembersSummary():any[]{\n    var TeamMembersSummary =[\n      {\n        Region: 'East',\n        TeamMembersCount: 20,\n        TemporarilyUnavailableMembers: 4,\n      },\n      {\n        Region: 'West',\n        TeamMembersCount: 15,\n        TemporarilyUnavailableMembers: 8,\n      },\n      {\n        Region: 'South',\n        TeamMembersCount: 17,\n        TemporarilyUnavailableMembers: 1,\n      },\n      {\n        Region: 'North',\n        TeamMembersCount: 15,\n        TemporarilyUnavailableMembers: 6,\n      },\n    ];\n    return TeamMembersSummary\n  }\n}\n","import { HttpBackend, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { LoginViewModel } from './../models/login-view-model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { SignUpViewModel } from './../models/sign-up-view-model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  private httpClient: HttpClient | null = null;\n  constructor(\n    private httpBackend: HttpBackend,\n    private jwtHelperService: JwtHelperService\n  ) {}\n\n  currentUserName: any = null;\n  currentUserRole: any = null;\n\n  public Login(loginViewModel: LoginViewModel): Observable<any>\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post<any>(\"/authenticate\", loginViewModel, { responseType: \"json\", observe: \"response\" })\n      .pipe(map(response =>\n      {\n        if (response)\n        {\n          this.currentUserName = response.body.userName;\n          this.currentUserRole = response.body.role;\n          sessionStorage['currentUser'] = JSON.stringify(response.body);\n          sessionStorage['XSRFRequestToken'] = response.headers.get(\"XSRF-REQUEST-TOKEN\");\n        }\n        return response.body;\n      }));\n  }\n\n  public detectIfAlreadyLoggedIn()\n  {\n    if (this.jwtHelperService.isTokenExpired() == false)\n    {\n      var currentUser = JSON.parse(sessionStorage['currentUser']);\n      this.currentUserName = currentUser.userName;\n      this.currentUserRole = currentUser.role;\n    }\n  }\n\n  public Register(signUpViewModel: SignUpViewModel): Observable<any>\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post<any>(\"/register\", signUpViewModel, { responseType: \"json\", observe: \"response\" })\n      .pipe(map(response =>\n      {\n        if (response)\n        {\n          this.currentUserName = response.body.userName;\n          sessionStorage['currentUser'] = JSON.stringify(response.body);\n          sessionStorage['XSRFRequestToken'] = response.headers.get(\"XSRF-REQUEST-TOKEN\");\n        }\n        return response.body;\n      }));\n  }\n\n  getUserByEmail(Email: string): Observable<any>\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.get<any>(\"/api/getUserByEmail/\" + Email, { responseType: \"json\" });\n  }\n\n  public Logout()\n  {\n    sessionStorage.removeItem(\"currentUser\");\n    this.currentUserName = null;\n  }\n\n  public isAuthenticated(): boolean\n  {\n    var token = sessionStorage.getItem(\"currentUser\") ? JSON.parse(sessionStorage.getItem(\"currentUser\") as string).token : null;\n    if (this.jwtHelperService.isTokenExpired())\n    {\n      return false; //token is not valid\n    }\n    else\n    {\n      return true; //token is valid\n    }\n  }\n  public getAllEmployes(): Observable<any>\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.get<any>(\"/api/getallemployees\", { responseType: \"json\" });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable, map } from 'rxjs';\nimport { Project } from './../models/project';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectsService {\n  public MySubject: BehaviorSubject<boolean>;\n\n  constructor(private httpClient: HttpClient) {\n    this.MySubject = new BehaviorSubject<boolean>(false);\n  }\n\n  //hideDetails:boolean = false;\n  toggleDetails(){\n    this.MySubject.next(!this.MySubject.value);\n  }\n\n  getAllProjects(): Observable<Project[]>{\n    \n    return this.httpClient.get<Project[]>(\"/api/projects\", {responseType:\"json\"})\n    .pipe(map((data:Project[])=>{\n      \n      return data;\n    }))\n  }\n\n  getProjectByProjectID(ProjectID: number): Observable<Project>\n  {\n    return this.httpClient.get<Project>(\"/api/projects/searchbyprojectid/\" + ProjectID, { responseType: \"json\" });\n  }\n\n  insertProject(newProject:Project):Observable<Project>{\n    // var requestHeaders = new HttpHeaders();\n    // requestHeaders = requestHeaders.set(\"X-XSRF-TOKEN\", sessionStorage['XSRFRequestToken']);\n    return this.httpClient.post<Project>(\"/api/projects\", newProject, { responseType:\"json\"})//headers: requestHeaders,\n  }\n\n  updateProject(existingProject:Project):Observable<Project>{\n    return this.httpClient.put<Project>(\"/api/projects\", existingProject, {responseType:\"json\"})\n  }\n\n  deleteProject(ProjectID: number): Observable<string>\n  {\n    return this.httpClient.delete<string>(\"/api/projects?ProjectID=\" + ProjectID);\n  }\n\n  SearchProjects(searchBy:string, searchText:string):Observable<Project[]>{\n    return this.httpClient.get<Project[]>(\"api/projects/search/\" + searchBy + \"/\" + searchText, {responseType:\"json\"} )  \n  }\n}\n","import { HttpBackend, HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouterLoggerService {\n  private httpClient: HttpClient | any = null;\n  currentUserName: string | null = null;\n\n  constructor(private httpBackend: HttpBackend) {\n  }\n\n  public log(logMsg: string): Observable<any> {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post(\"/api/routerlogger\", { log: logMsg },\n      { headers: new HttpHeaders().set(\"content-type\", \"text/plain\") }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TaskPriority } from '../models/task-priority';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskPrioritiesService {\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  getTaskPriorities(): Observable<TaskPriority[]> {\n    return this.httpClient.get<TaskPriority[]>( \"/api/taskpriorities\", { responseType: \"json\" });\n  }\n\n  getTaskPrioritytByTaskPriorityID(TaskPriorityID: number): Observable<TaskPriority> {\n    return this.httpClient.get<TaskPriority>(\"/api/taskpriorities/searchbytaskpriorityid/\" + TaskPriorityID, { responseType: \"json\" });\n  }\n\n  insertTaskPriority(newTaskPriority: TaskPriority): Observable<TaskPriority> {\n    return this.httpClient.post<TaskPriority>( \"/api/taskpriorities\", newTaskPriority, { responseType: \"json\" });\n  }\n\n  updateTaskPriority(existingTaskPriority: TaskPriority): Observable<TaskPriority> {\n    return this.httpClient.put<TaskPriority>(\"/api/taskpriorities\", existingTaskPriority, { responseType: \"json\" });\n  }\n\n  deleteTaskPriority(TaskPriorityID: number): Observable<string> {\n    return this.httpClient.delete<string>( \"/api/taskpriorities?TaskPriorityID=\" + TaskPriorityID);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TaskStatus } from '../models/task-status';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskStatusesService {\n  constructor(private httpClient: HttpClient)\n  {\n  }\n\n  getTaskStatuses(): Observable<TaskStatus[]>\n  {\n    return this.httpClient.get<TaskStatus[]>(\"/api/taskstatuses\", { responseType: \"json\" });\n  }\n\n  getTaskStatusByTaskStatusID(TaskStatusID: number): Observable<TaskStatus>\n  {\n    return this.httpClient.get<TaskStatus>(\"/api/taskstatuses/searchbytaskstatusid/\" + TaskStatusID, { responseType: \"json\" });\n  }\n\n  insertTaskStatus(newTaskStatus: TaskStatus): Observable<TaskStatus>\n  {\n    return this.httpClient.post<TaskStatus>(\"/api/taskstatuses\", newTaskStatus, { responseType: \"json\" });\n  }\n\n  updateTaskStatus(existingTaskStatus: TaskStatus): Observable<TaskStatus>\n  {\n    return this.httpClient.put<TaskStatus>(\"/api/taskstatuses\", existingTaskStatus, { responseType: \"json\" });\n  }\n\n  deleteTaskStatus(TaskStatusID: number): Observable<string>\n  {\n    return this.httpClient.delete<string>(\"/api/taskstatuses?TaskStatusID=\" + TaskStatusID);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Task } from '../models/task';\nimport { Observable } from 'rxjs';\nimport { GroupedTask } from '../models/grouped-task';\nimport { TaskStatusDetail } from '../models/task-status-detail';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TasksService {\n  constructor(private httpClient: HttpClient)\n  {\n  }\n\n  getTasks() : Observable<GroupedTask[]>\n  {\n    return this.httpClient.get<GroupedTask[]>(\"/api/tasks\", { responseType: \"json\" });\n  }\n\n  getTaskByTaskID(TaskID: number): Observable<Task> {\n    return this.httpClient.get<Task>(\"/api/tasks/searchbytaskid/\" + TaskID, { responseType: \"json\" });\n  }\n\n  updateTaskStatus(taskStatusDetail: TaskStatusDetail): Observable<TaskStatusDetail> {\n    var user = JSON.parse(sessionStorage['currentUser']);\n    //console.log(user);\n    taskStatusDetail.userID = user.id; //add this statement to store the current user's id in the 'taskStatusDetails' table\n\n    return this.httpClient.put<TaskStatusDetail>(\"/api/updatetaskstatus\", taskStatusDetail, { responseType: \"json\" });\n  }\n\n  insertTask(newTask: Task): Observable<Task>\n  {\n    var user = JSON.parse(sessionStorage['currentUser']);\n    newTask.createdBy = user.id; //add this statement to store the current user's id in the 'tasks' table\n    return this.httpClient.post<Task>(\"/api/createtask\", newTask, { responseType: \"json\" });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TeamSizeValidatorDirective } from '../directives/team-size-validator.directive';\nimport { ClientLocationStatusValidatorDirective } from '../directives/client-location-status-validator.directive';\nimport { ProjectIDUniqueValidatorDirective } from '../directives/project-idunique-validator.directive';\nimport { FilterPipe } from '../pipes/filter.pipe';\nimport { PagingPipe } from '../pipes/paging.pipe';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ComponentLoaderDirective } from '../directives/component-loader.directive';\nimport { SortPipe } from '../pipes/sort.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    TeamSizeValidatorDirective,\n    ClientLocationStatusValidatorDirective,\n    ProjectIDUniqueValidatorDirective,\n    FilterPipe,\n    PagingPipe,\n    ComponentLoaderDirective,\n    SortPipe\n  ],\n  imports: [\n    CommonModule, FormsModule, ReactiveFormsModule, HttpClientModule\n  ],\n  exports:[\n    CommonModule, FormsModule, ReactiveFormsModule, HttpClientModule,\n    \n    TeamSizeValidatorDirective,\n    ClientLocationStatusValidatorDirective,\n    ProjectIDUniqueValidatorDirective,\n    FilterPipe,\n    PagingPipe,\n    ComponentLoaderDirective,\n    SortPipe\n  ]\n})\nexport class SharedModule { }\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["trigger","transition","query","style","animate","group","fadeAnimation","position","width","optional","opacity","CommonModule","RouterModule","DashboardComponent","ProjectsComponent","ProjectDetailsComponent","MastersComponent","routes","path","data","expectedRole","children","component","AdminRoutingModule","forChild","imports","i1","exports","AboutComponent","MyProfileComponent","DashboardService","ProjectComponent","CheckBoxPrinterComponent","SharedModule","CountriesComponent","ClientLocationsComponent","TaskPrioritiesComponent","TaskStatusComponent","AdminModule","declarations","selectors","decls","vars","template","AboutComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","constructor","isChecked","ngOnInit","check","unCheck","consts","CheckBoxPrinterComponent_Template","ɵɵlistener","CheckBoxPrinterComponent_Template_input_ngModelChange_1_listener","$event","ɵɵadvance","ɵɵproperty","Validators","ClientLocation","FilterPipe","ɵɵelement","ClientLocationsComponent_i_27_Template_i_click_0_listener","ɵɵrestoreView","_r12","ctx_r11","ɵɵnextContext","sortBy","ɵɵresetView","sortOrder","ClientLocationsComponent_i_28_Template_i_click_0_listener","_r14","ctx_r13","ClientLocationsComponent_i_29_Template_i_click_0_listener","_r16","ctx_r15","ClientLocationsComponent_tr_32_Template_button_click_4_listener","restoredCtx","_r20","clientLocation_r17","$implicit","ctx_r19","onEditClick","ClientLocationsComponent_tr_32_Template_button_click_7_listener","ctx_r21","onDeleteClick","ɵɵtextInterpolate","clientLocationName","ClientLocationsComponent_ng_container_41_li_1_Template_li_click_0_listener","_r25","page_r23","ctx_r24","onPageIndexClicked","pageIndex","ɵɵpureFunction1","_c2","ctx_r22","currentPageIndex","ɵɵelementContainerStart","ɵɵtemplate","ClientLocationsComponent_ng_container_41_li_1_Template","ɵɵelementContainerEnd","ctx_r5","pages","ClientLocationsComponent_ng_container_42_li_8_Template_li_click_0_listener","_r29","ctx_r28","ctx_r27","ClientLocationsComponent_ng_container_42_Template_li_click_1_listener","_r31","ctx_r30","ClientLocationsComponent_ng_container_42_Template_li_click_4_listener","ctx_r32","ClientLocationsComponent_ng_container_42_li_7_Template","ClientLocationsComponent_ng_container_42_li_8_Template","ClientLocationsComponent_ng_container_42_Template_li_click_11_listener","ctx_r33","length","ClientLocationsComponent_ng_container_42_Template_li_click_14_listener","ctx_r34","ctx_r6","clientLocationsService","formBuilder","clientLocations","showLoading","deleteClientLocation","editIndex","deleteIndex","searchBy","searchText","pageSize","newForm","editForm","defaultTextBox_New","defaultTextBox_Edit","getClientLocations","subscribe","response","calculateNoOfPages","clientLocationID","control","required","filterPipe","noOfPages","Math","ceil","transform","i","push","ind","onNewClick","event","reset","setTimeout","nativeElement","focus","onSaveClick","valid","insertClientLocation","value","next","p","$","error","console","log","clientLocation","patchValue","indexOf","onUpdateClick","updateClientLocation","onDeleteConfirmClick","splice","onSearchTextChange","ɵɵdirectiveInject","ClientLocationsService","i2","FormBuilder","viewQuery","ClientLocationsComponent_Query","ClientLocationsComponent_i_2_Template","ClientLocationsComponent_Template_button_click_7_listener","ClientLocationsComponent_Template_select_ngModelChange_12_listener","ClientLocationsComponent_Template_input_ngModelChange_19_listener","ClientLocationsComponent_Template_input_keyup_19_listener","ClientLocationsComponent_i_27_Template","ClientLocationsComponent_i_28_Template","ClientLocationsComponent_i_29_Template","ClientLocationsComponent_tr_32_Template","ClientLocationsComponent_Template_li_click_38_listener","ClientLocationsComponent_ng_container_41_Template","ClientLocationsComponent_ng_container_42_Template","ClientLocationsComponent_Template_li_click_43_listener","ClientLocationsComponent_span_63_Template","ClientLocationsComponent_Template_button_click_67_listener","ClientLocationsComponent_span_86_Template","ClientLocationsComponent_Template_button_click_90_listener","ClientLocationsComponent_Template_input_ngModelChange_109_listener","ClientLocationsComponent_Template_button_click_113_listener","ɵɵpipeBind3","ɵɵpureFunction2","_c3","get","invalid","dirty","touched","submitted","errors","Country","CountriesComponent_i_27_Template_i_click_0_listener","CountriesComponent_i_28_Template_i_click_0_listener","CountriesComponent_i_29_Template_i_click_0_listener","CountriesComponent_tr_32_Template_button_click_4_listener","country_r17","CountriesComponent_tr_32_Template_button_click_7_listener","countryName","CountriesComponent_ng_container_41_li_1_Template_li_click_0_listener","CountriesComponent_ng_container_41_li_1_Template","CountriesComponent_ng_container_42_li_8_Template_li_click_0_listener","CountriesComponent_ng_container_42_Template_li_click_1_listener","CountriesComponent_ng_container_42_Template_li_click_4_listener","CountriesComponent_ng_container_42_li_7_Template","CountriesComponent_ng_container_42_li_8_Template","CountriesComponent_ng_container_42_Template_li_click_11_listener","CountriesComponent_ng_container_42_Template_li_click_14_listener","countriesService","countries","deleteCountry","getCountries","countryID","insertCountry","country","updateCountry","CountriesService","CountriesComponent_Query","CountriesComponent_i_2_Template","CountriesComponent_Template_button_click_7_listener","CountriesComponent_Template_select_ngModelChange_12_listener","CountriesComponent_Template_input_ngModelChange_19_listener","CountriesComponent_Template_input_keyup_19_listener","CountriesComponent_i_27_Template","CountriesComponent_i_28_Template","CountriesComponent_i_29_Template","CountriesComponent_tr_32_Template","CountriesComponent_Template_li_click_38_listener","CountriesComponent_ng_container_41_Template","CountriesComponent_ng_container_42_Template","CountriesComponent_Template_li_click_43_listener","CountriesComponent_span_63_Template","CountriesComponent_Template_button_click_67_listener","CountriesComponent_span_86_Template","CountriesComponent_Template_button_click_90_listener","CountriesComponent_Template_input_ngModelChange_109_listener","CountriesComponent_Template_button_click_113_listener","client_r5","DashboardComponent_a_56_Template_a_click_0_listener","_r8","ctx_r7","onProjectChange","project_r6","year_r9","teammembersummary_r10","Region","TeamMembersCount","TemporarilyUnavailableMembers","member_r14","ID","Name","ɵɵstyleProp","Status","DashboardComponent_div_103_tr_17_Template","ɵɵattribute","i_r12","ɵɵtextInterpolate1","teammember_r11","Members","dashboardService","Designation","Username","NoOfTeamMembers","TotalCostOfAllProjects","PendingTasks","UpComingProjects","ProjectCost","CurrentExpenditure","AvailableFunds","Clients","Projects","Years","TeamMembersSummary","TeamMembers","ToDay","Date","getTeamMembersSummary","target","innerHTML","trim","DashboardComponent_Template","DashboardComponent_li_46_Template","DashboardComponent_a_56_Template","DashboardComponent_a_62_Template","DashboardComponent_tr_96_Template","DashboardComponent_div_103_Template","ɵɵpipeBind2","ɵɵpipeBind1","ComponentLoaderDirective","MastersComponent_a_5_Template_a_click_0_listener","_r5","masterMenuItem_r3","ctx_r4","menuItemClick","_c0","ctx_r0","activeItem","itemName","displayName","MastersComponent_li_8_Template_a_click_1_listener","tab_r6","MastersComponent_li_8_Template_span_click_3_listener","ctx_r9","onCloseClick","ɵɵsanitizeUrl","ctx_r1","MastersComponent_div_10_ng_template_2_Template","tab_r10","ctx_r2","componentFactoryResolver","masterMenuItems","tabs","componentLoaders","clickedMasterMenuItem","matchingTabs","filter","tab","tabIndex","componentLoadersArray","toArray","componentFactory","resolveComponentFactory","viewContainterRef","viewContainerRef","componentRef","createComponent","name","componentInstance","instance","clickedTab","remove","ComponentFactoryResolver","MastersComponent_Query","MastersComponent_a_5_Template","MastersComponent_li_8_Template","MastersComponent_div_10_Template","MyProfileComponent_Template","Project","activatedRoute","projectsService","routeParmsSubscription","project","params","pid","getProjectByProjectID","proj","ngOnDestroy","unsubscribe","ActivatedRoute","ProjectsService","ProjectDetailsComponent_Template","projectID","projectName","dateOfStart","teamSize","status","ɵɵpureFunction0","EventEmitter","editClick","deleteClick","hideDetails","selectionBoxes","MySubscription","MySubject","hide","emit","isAllCheckedChange","b","selectionBox","contentQueries","ProjectComponent_ContentQueries","dirIndex","ɵɵprojection","ProjectComponent_Template_button_click_33_listener","ProjectComponent_Template_button_click_36_listener","_c1","ProjectsComponent_div_34_Template_app_project_editClick_1_listener","_r51","i_r47","index","ctx_r50","ProjectsComponent_div_34_Template_app_project_deleteClick_1_listener","ctx_r52","project_r46","ProjectsComponent_li_40_Template_li_click_0_listener","_r55","page_r53","ctx_r54","_c4","clientLocation_r56","clientLocation_r57","projectService","projects","newProject","editProject","deleteProject","isAllChecked","projs","prjID","getAllProjects","alert","resultProjects","resetForm","insertProject","active","split","reverse","join","updateProject","onSearchClick","onSearchTextKeyup","onHideShowDetails","toggleDetails","ProjectsComponent_Query","ProjectsComponent_i_2_Template","ProjectsComponent_Template_button_click_7_listener","ProjectsComponent_Template_button_click_10_listener","ProjectsComponent_Template_input_ngModelChange_13_listener","ProjectsComponent_Template_input_change_13_listener","ProjectsComponent_Template_select_ngModelChange_18_listener","ProjectsComponent_Template_input_ngModelChange_31_listener","ProjectsComponent_Template_input_keyup_31_listener","ProjectsComponent_div_34_Template","ProjectsComponent_li_40_Template","ProjectsComponent_Template_input_ngModelChange_57_listener","ProjectsComponent_span_60_Template","ProjectsComponent_span_61_Template","ProjectsComponent_span_62_Template","ProjectsComponent_Template_input_ngModelChange_67_listener","ProjectsComponent_span_69_Template","ProjectsComponent_span_70_Template","ProjectsComponent_span_71_Template","ProjectsComponent_Template_input_ngModelChange_76_listener","ProjectsComponent_span_78_Template","ProjectsComponent_Template_input_ngModelChange_83_listener","ProjectsComponent_span_85_Template","ProjectsComponent_span_86_Template","ProjectsComponent_Template_input_ngModelChange_92_listener","ProjectsComponent_Template_input_ngModelChange_100_listener","ProjectsComponent_Template_input_ngModelChange_105_listener","ProjectsComponent_span_109_Template","ProjectsComponent_Template_select_ngModelChange_114_listener","ProjectsComponent_option_118_Template","ProjectsComponent_span_119_Template","ProjectsComponent_span_120_Template","ProjectsComponent_Template_button_click_124_listener","ProjectsComponent_Template_input_ngModelChange_142_listener","ProjectsComponent_span_144_Template","ProjectsComponent_span_145_Template","ProjectsComponent_span_146_Template","ProjectsComponent_Template_input_ngModelChange_151_listener","ProjectsComponent_span_153_Template","ProjectsComponent_span_154_Template","ProjectsComponent_span_155_Template","ProjectsComponent_Template_input_ngModelChange_160_listener","ProjectsComponent_span_162_Template","ProjectsComponent_Template_input_ngModelChange_167_listener","ProjectsComponent_span_169_Template","ProjectsComponent_span_170_Template","ProjectsComponent_Template_input_ngModelChange_176_listener","ProjectsComponent_Template_input_ngModelChange_184_listener","ProjectsComponent_Template_input_ngModelChange_189_listener","ProjectsComponent_span_193_Template","ProjectsComponent_Template_select_ngModelChange_198_listener","ProjectsComponent_option_202_Template","ProjectsComponent_span_203_Template","ProjectsComponent_span_204_Template","ProjectsComponent_Template_button_click_208_listener","ProjectsComponent_Template_input_ngModelChange_227_listener","ProjectsComponent_Template_input_ngModelChange_232_listener","ProjectsComponent_Template_button_click_236_listener","_c5","_r4","_r3","_r9","_r13","_r15","_r18","_r21","_r26","_r30","_r34","_r36","_r39","_r42","TaskPriority","TaskPrioritiesComponent_i_27_Template_i_click_0_listener","TaskPrioritiesComponent_i_28_Template_i_click_0_listener","TaskPrioritiesComponent_i_29_Template_i_click_0_listener","TaskPrioritiesComponent_tr_32_Template_button_click_4_listener","taskPriority_r17","TaskPrioritiesComponent_tr_32_Template_button_click_7_listener","taskPriorityName","TaskPrioritiesComponent_ng_container_41_li_1_Template_li_click_0_listener","TaskPrioritiesComponent_ng_container_41_li_1_Template","TaskPrioritiesComponent_ng_container_42_li_8_Template_li_click_0_listener","TaskPrioritiesComponent_ng_container_42_Template_li_click_1_listener","TaskPrioritiesComponent_ng_container_42_Template_li_click_4_listener","TaskPrioritiesComponent_ng_container_42_li_7_Template","TaskPrioritiesComponent_ng_container_42_li_8_Template","TaskPrioritiesComponent_ng_container_42_Template_li_click_11_listener","TaskPrioritiesComponent_ng_container_42_Template_li_click_14_listener","taskPrioritiesService","taskPriorities","deleteTaskPriority","getTaskPriorities","taskPriorityID","insertTaskPriority","taskPriority","updateTaskPriority","TaskPrioritiesService","TaskPrioritiesComponent_Query","TaskPrioritiesComponent_i_2_Template","TaskPrioritiesComponent_Template_button_click_7_listener","TaskPrioritiesComponent_Template_select_ngModelChange_12_listener","TaskPrioritiesComponent_Template_input_ngModelChange_19_listener","TaskPrioritiesComponent_Template_input_keyup_19_listener","TaskPrioritiesComponent_i_27_Template","TaskPrioritiesComponent_i_28_Template","TaskPrioritiesComponent_i_29_Template","TaskPrioritiesComponent_tr_32_Template","TaskPrioritiesComponent_Template_li_click_38_listener","TaskPrioritiesComponent_ng_container_41_Template","TaskPrioritiesComponent_ng_container_42_Template","TaskPrioritiesComponent_Template_li_click_43_listener","TaskPrioritiesComponent_span_63_Template","TaskPrioritiesComponent_Template_button_click_67_listener","TaskPrioritiesComponent_span_86_Template","TaskPrioritiesComponent_Template_button_click_90_listener","TaskPrioritiesComponent_Template_input_ngModelChange_109_listener","TaskPrioritiesComponent_Template_button_click_113_listener","TaskStatus","TaskStatusComponent_i_27_Template_i_click_0_listener","TaskStatusComponent_i_28_Template_i_click_0_listener","TaskStatusComponent_i_29_Template_i_click_0_listener","TaskStatusComponent_tr_32_Template_button_click_4_listener","taskStatus_r17","TaskStatusComponent_tr_32_Template_button_click_7_listener","taskStatusName","TaskStatusComponent_ng_container_41_li_1_Template_li_click_0_listener","TaskStatusComponent_ng_container_41_li_1_Template","TaskStatusComponent_ng_container_42_li_8_Template_li_click_0_listener","TaskStatusComponent_ng_container_42_Template_li_click_1_listener","TaskStatusComponent_ng_container_42_Template_li_click_4_listener","TaskStatusComponent_ng_container_42_li_7_Template","TaskStatusComponent_ng_container_42_li_8_Template","TaskStatusComponent_ng_container_42_Template_li_click_11_listener","TaskStatusComponent_ng_container_42_Template_li_click_14_listener","taskStatusesService","taskStatuses","deleteTaskStatus","getTaskStatuses","taskStatusID","insertTaskStatus","taskStatus","updateTaskStatus","TaskStatusesService","TaskStatusComponent_Query","TaskStatusComponent_i_2_Template","TaskStatusComponent_Template_button_click_7_listener","TaskStatusComponent_Template_select_ngModelChange_12_listener","TaskStatusComponent_Template_input_ngModelChange_19_listener","TaskStatusComponent_Template_input_keyup_19_listener","TaskStatusComponent_i_27_Template","TaskStatusComponent_i_28_Template","TaskStatusComponent_i_29_Template","TaskStatusComponent_tr_32_Template","TaskStatusComponent_Template_li_click_38_listener","TaskStatusComponent_ng_container_41_Template","TaskStatusComponent_ng_container_42_Template","TaskStatusComponent_Template_li_click_43_listener","TaskStatusComponent_span_63_Template","TaskStatusComponent_Template_button_click_67_listener","TaskStatusComponent_span_86_Template","TaskStatusComponent_Template_button_click_90_listener","TaskStatusComponent_Template_input_ngModelChange_109_listener","TaskStatusComponent_Template_button_click_113_listener","LoginComponent","SignUpComponent","redirectTo","pathMatch","AppRoutingModule","forRoot","useHash","enableTracing","NavigationEnd","AppComponent_ng_container_13_Template_a_click_5_listener","_r6","loginService","Logout","ctx_r3","currentUserName","AppComponent","routerLoggerService","router","ngOnIntIt","detectIfAlreadyLoggedIn","events","userName","logMsg","toLocaleString","url","getState","outlet","isActivated","snapshot","LoginService","RouterLoggerService","i3","Router","AppComponent_Template","AppComponent_ng_container_7_Template","AppComponent_ng_container_8_Template","AppComponent_ng_container_9_Template","AppComponent_ng_container_13_Template","currentUserRole","_c6","BrowserModule","JwtModule","BrowserAnimationsModule","HTTP_INTERCEPTORS","JwtInterceptorService","JwtUnAuthorizedInterceptorService","AlertDirective","RepeaterDirective","EmployeeModule","AppModule","bootstrap","provide","useClass","multi","config","tokenGetter","sessionStorage","getItem","JSON","parse","token","LoginViewModel","loginError","loginViewModel","onLoginClick","Login","navigate","LoginComponent_Template","LoginComponent_div_7_Template","LoginComponent_Template_input_ngModelChange_13_listener","UserName","LoginComponent_Template_input_ngModelChange_18_listener","Password","LoginComponent_Template_button_click_20_listener","FormControl","FormGroup","gender_r19","country_r20","SignUpComponent_div_82_Template_button_click_16_listener","_r24","i_r22","ctx_r23","onRemoveClick","skill_r21","ctx_r18","signUpForm","customValidatorsService","genders","registerError","canLeave","personName","firstName","minLength","lastName","email","DuplicateEmailValidator","updateOn","mobile","pattern","dateOfBirth","minimumAgeValidator","password","confirmPassword","gender","receiveNewsLetters","skills","array","validators","compareValidator","valueChanges","onSubmitClick","signUpVieModel","Register","onAddSkill","formGroup","skillName","skillLevel","removeAt","CustomValidatorsService","i4","i5","SignUpComponent_Template","SignUpComponent_Template_form_ngSubmit_2_listener","SignUpComponent_span_13_Template","SignUpComponent_span_14_Template","SignUpComponent_span_20_Template","SignUpComponent_span_21_Template","SignUpComponent_span_27_Template","SignUpComponent_span_28_Template","SignUpComponent_span_29_Template","SignUpComponent_span_35_Template","SignUpComponent_span_36_Template","SignUpComponent_span_42_Template","SignUpComponent_span_43_Template","SignUpComponent_span_49_Template","SignUpComponent_span_55_Template","SignUpComponent_span_56_Template","SignUpComponent_div_61_Template","SignUpComponent_span_62_Template","SignUpComponent_option_70_Template","SignUpComponent_span_71_Template","SignUpComponent_div_82_Template","SignUpComponent_Template_button_click_83_listener","minlength","uniqueEmail","minAge","controls","elementRef","renderer2","title","divElement","createElement","setAttribute","setStyle","spanElement","spanText","createText","appendChild","onMouseEnter","onMouseLeave","ElementRef","Renderer2","hostVars","hostBindings","AlertDirective_HostBindings","AlertDirective_mouseleave_HostBindingHandler","NG_VALIDATORS","ClientLocationStatusValidatorDirective","validate","isValid","clientLocationStatus","features","ɵɵProvidersFeature","useExisting","ViewContainerRef","NG_ASYNC_VALIDATORS","map","ProjectIDUniqueValidatorDirective","pipe","existingProject","uniqueProjectID","templateRef","n","clear","createEmbeddedView","TemplateRef","inputs","TeamSizeValidatorDirective","currentValue","divisible","project_r7","employee_r8","id","taskPriority_r9","CreateTaskComponent","tasksService","newTaskForm","taskID","taskName","description","assignedTo","employees","getAllEmployes","onCreateTaskClick","insertTask","TasksService","CreateTaskComponent_Template","CreateTaskComponent_span_11_Template","CreateTaskComponent_option_25_Template","CreateTaskComponent_span_27_Template","CreateTaskComponent_option_35_Template","CreateTaskComponent_span_37_Template","CreateTaskComponent_option_46_Template","CreateTaskComponent_span_48_Template","CreateTaskComponent_Template_button_click_56_listener","EditTaskComponent","EditTaskComponent_Template","taskStatusDetail_r7","statusUpdationDateTimeString","getTaskGroupTextCssClass","user","task_r3","TasksComponent_div_5_div_9_tr_41_Template","TasksComponent_div_5_div_9_a_47_Template","ɵɵtextInterpolate2","i_r4","getTaskPriorityBadgeCssClass","createdByUser","createdOnString","assignedToUser","taskStatusDetails","TasksComponent_div_5_div_9_Template","getTaskGroupBgCssClass","taskGroup_r1","tasks","TasksComponent","taskGroups","getTasks","className","TasksComponent_Template","TasksComponent_div_5_Template","Task","TaskStatusDetail","taskStatus_r2","UpdateTaskStatusComponent","taskStatuesService","currentTask","currentTaskStatusDetail","editTaskStatusForm","thisStatusDetailID","getTaskByTaskID","task","currentTaskStatusID","taskStatusDetailID","onUpdateTaskStatusClick","UpdateTaskStatusComponent_Template","UpdateTaskStatusComponent_option_32_Template","UpdateTaskStatusComponent_span_34_Template","UpdateTaskStatusComponent_Template_button_click_37_listener","createdOn","lastUpdatedOn","linkIndex","EmployeeRoutingModule","intercept","req","currentUser","clone","setHeaders","Authorization","handle","factory","ɵfac","providedIn","HttpErrorResponse","tap","userID","taskstatus","statsUpdationDateTimeString","createdBy","currentStatus","resultArray","item","String","toLowerCase","pure","PagingPipe","SortPipe","sort","a","toString","httpClient","responseType","getClientLocationtByClientLocationID","ClientLocationID","newClientLocation","post","existingClientLocation","put","delete","ɵɵinject","HttpClient","getCountryByCountryID","CountryID","newCountry","existingCountry","today","diffMilliSeconds","abs","getTime","diffYears","controlToValidate","controlToCompare","setErrors","getUserByEmail","existingUser","httpBackend","jwtHelperService","observe","body","role","stringify","headers","isTokenExpired","signUpViewModel","Email","removeItem","isAuthenticated","HttpBackend","JwtHelperService","BehaviorSubject","ProjectID","SearchProjects","HttpHeaders","set","getTaskPrioritytByTaskPriorityID","TaskPriorityID","newTaskPriority","existingTaskPriority","getTaskStatusByTaskStatusID","TaskStatusID","newTaskStatus","existingTaskStatus","TaskID","taskStatusDetail","newTask","FormsModule","ReactiveFormsModule","HttpClientModule","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}