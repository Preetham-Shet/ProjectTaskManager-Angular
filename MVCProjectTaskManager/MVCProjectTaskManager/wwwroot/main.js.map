{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/MyAnimation.ts","./src/app/admin/about/about.component.ts","./src/app/admin/about/about.component.html","./src/app/admin/admin-routing/admin-routing.module.ts","./src/app/admin/admin.module.ts","./src/app/admin/check-box-printer/check-box-printer.component.ts","./src/app/admin/check-box-printer/check-box-printer.component.html","./src/app/admin/dashboard/dashboard.component.ts","./src/app/admin/dashboard/dashboard.component.html","./src/app/admin/my-profile/my-profile.component.ts","./src/app/admin/my-profile/my-profile.component.html","./src/app/admin/project-details/project-details.component.ts","./src/app/admin/project-details/project-details.component.html","./src/app/admin/project/project.component.ts","./src/app/admin/project/project.component.html","./src/app/admin/projects/projects.component.ts","./src/app/admin/projects/projects.component.html","./src/app/alert.directive.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/client-location-status-validator.directive.ts","./src/app/client-location.ts","./src/app/client-locations.service.ts","./src/app/countries.service.ts","./src/app/custom-validators.service.ts","./src/app/dashboard.service.ts","./src/app/employee/employee-routing/employee-routing.module.ts","./src/app/employee/employee.module.ts","./src/app/employee/tasks/tasks.component.ts","./src/app/employee/tasks/tasks.component.html","./src/app/filter.pipe.ts","./src/app/jwt-interceptor.service.ts","./src/app/jwt-un-authorized-interceptor.service.ts","./src/app/login-view-model.ts","./src/app/login.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/paging.pipe.ts","./src/app/project-idunique-validator.directive.ts","./src/app/project.ts","./src/app/projects.service.ts","./src/app/repeater.directive.ts","./src/app/router-logger.service.ts","./src/app/sign-up/sign-up.component.ts","./src/app/sign-up/sign-up.component.html","./src/app/team-size-validator.directive.ts","./src/main.ts"],"sourcesContent":["import { trigger, transition, query, style, animate, group } from \"@angular/animations\";\r\n\r\nexport const fadeAnimation =\r\n    trigger(\"routeAnimations\", [\r\n        transition(\"* <=> *\", [\r\n            query(\":enter, :leave\",\r\n                style({ position: 'absolute', width: '98%' }),\r\n                { optional: true }),\r\n\r\n            group([\r\n\r\n                query(\":enter\", [\r\n                    style({ opacity: 0 }),\r\n                    animate(\"0.6s\", style({ opacity: '1' }))\r\n                ], { optional: true }),\r\n\r\n                query(\":leave\", [\r\n                    style({ opacity: 1 }),\r\n                    animate(\"0.6s\", style({ opacity: '0' }))\r\n                ], { optional: true })\r\n\r\n            ])\r\n        ])\r\n    ]);","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent {\n\n}\n","<p>about works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from '../dashboard/dashboard.component';\nimport { ProjectsComponent } from '../projects/projects.component';\nimport { ProjectDetailsComponent } from '../project-details/project-details.component';\n\nconst routes:Routes = [\n  {\n    path: 'admin',\n    data: { expectedRole: 'Admin' },\n    children: [\n      { path: 'dashboard', component: DashboardComponent },\n      { path: 'projects', component: ProjectsComponent },\n      { path: 'projects/view/:projectid', component: ProjectDetailsComponent },\n    ],\n  },\n\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ],\n  exports:[RouterModule]\n})\nexport class AdminRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AboutComponent } from './about/about.component';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\nimport { DashboardService } from '../dashboard.service';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { FormsModule } from '@angular/forms';\nimport { TeamSizeValidatorDirective } from '../team-size-validator.directive';\nimport { ClientLocationStatusValidatorDirective } from '../client-location-status-validator.directive';\nimport { ProjectIDUniqueValidatorDirective } from '../project-idunique-validator.directive';\nimport { ProjectComponent } from './project/project.component';\nimport { CheckBoxPrinterComponent } from './check-box-printer/check-box-printer.component';\nimport { FilterPipe } from '../filter.pipe';\nimport { PagingPipe } from '../paging.pipe';\nimport { ProjectDetailsComponent } from './project-details/project-details.component';\nimport { AdminRoutingModule } from './admin-routing/admin-routing.module';\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    AboutComponent,\n    MyProfileComponent,\n    ProjectsComponent,\n    TeamSizeValidatorDirective,\n    ClientLocationStatusValidatorDirective,\n    ProjectIDUniqueValidatorDirective,\n    ProjectComponent,\n    CheckBoxPrinterComponent,\n    FilterPipe,\n    PagingPipe,\n    ProjectDetailsComponent\n  ],\n  imports: [CommonModule, FormsModule, AdminRoutingModule],\n  exports: [\n    DashboardComponent,\n    AboutComponent,\n    MyProfileComponent,\n    ProjectsComponent,\n    TeamSizeValidatorDirective,\n    ClientLocationStatusValidatorDirective,\n    ProjectIDUniqueValidatorDirective,\n    ProjectDetailsComponent\n  ],\n  providers: [DashboardService],\n})\nexport class AdminModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-check-box-printer',\n  templateUrl: './check-box-printer.component.html',\n  styleUrls: ['./check-box-printer.component.scss']\n})\nexport class CheckBoxPrinterComponent implements OnInit {\n  isChecked: boolean = false;\n\n  constructor() { }\n\n  ngOnInit()\n  {\n  }\n\n  check()\n  {\n    this.isChecked = true;\n  }\n\n  unCheck()\n  {\n    this.isChecked = false;\n  }\n}\n","<div>\n    <input type=\"checkbox\" value=\"true\" name=\"isChecked\" id=\"isChecked\" [(ngModel)]=\"isChecked\">\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { DashboardService } from 'src/app/dashboard.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit\n{\n  Designation: string = \"\";\n  Username: string = \"\";\n  NoOfTeamMembers: number = 0;\n  TotalCostOfAllProjects: number = 0;\n  PendingTasks: number = 0;\n  UpComingProjects: number = 0;\n  ProjectCost: number = 0;\n  CurrentExpenditure: number = 0;\n  AvailableFunds: number = 0;\n  ToDay !: Date;\n\n  Clients: string[] = [];\n  Projects: string[] = [];\n  Years: number[] = [];\n  TeamMembersSummary: any = [];\n  TeamMembers: any = [];\n\nconstructor(private dashboardService:DashboardService){}\n\n  ngOnInit()\n  {\n    this.Designation = 'Team Leader';\n    this.Username = 'Scott Smith';\n    this.NoOfTeamMembers = 67;\n    this.TotalCostOfAllProjects = 240;\n    this.PendingTasks = 15;\n    this.UpComingProjects = 2;\n    this.ProjectCost = 2113507;\n    this.CurrentExpenditure = 96788;\n    this.AvailableFunds = 52536;\n    this.ToDay=new Date();\n    \n    this.Clients = [\n      'ABC Infotech Ltd.',\n      'DEF Software Solutions',\n      'GHI Industries',\n    ];\n\n    this.Projects = ['Project A', 'Project B', 'Project C', 'Project D'];\n\n    for (var i = 2019; i >= 2010; i--)\n    {\n      this.Years.push(i);\n    }\n\n    this.TeamMembersSummary = this.dashboardService.getTeamMembersSummary();\n\n    this.TeamMembers = [\n      {\n        Region: 'East',\n        Members: [\n          { ID: 1, Name: 'Ford', Status: 'Available' },\n          { ID: 2, Name: 'Miller', Status: 'Available' },\n          { ID: 3, Name: 'Jones', Status: 'Busy' },\n          { ID: 4, Name: 'James', Status: 'Busy' },\n        ],\n      },\n      {\n        Region: 'West',\n        Members: [\n          { ID: 5, Name: 'Anna', Status: 'Available' },\n          { ID: 6, Name: 'Arun', Status: 'Available' },\n          { ID: 7, Name: 'Varun', Status: 'Busy' },\n          { ID: 8, Name: 'Jasmine', Status: 'Busy' },\n        ],\n      },\n      {\n        Region: 'South',\n        Members: [\n          { ID: 9, Name: 'Krishna', Status: 'Available' },\n          { ID: 10, Name: 'Mohan', Status: 'Available' },\n          { ID: 11, Name: 'Raju', Status: 'Busy' },\n          { ID: 12, Name: 'Farooq', Status: 'Busy' },\n        ],\n      },\n      {\n        Region: 'North',\n        Members: [\n          { ID: 13, Name: 'Jacob', Status: 'Available' },\n          { ID: 14, Name: 'Smith', Status: 'Available' },\n          { ID: 15, Name: 'Jones', Status: 'Busy' },\n          { ID: 16, Name: 'James', Status: 'Busy' },\n        ],\n      },\n    ];\n  }\n\n  onProjectChange($event:any){if ($event.target.innerHTML.trim() == 'Project A')\n  {\n    this.ProjectCost = 2113507;\n    this.CurrentExpenditure = 96788;\n    this.AvailableFunds = 52436;\n  } else if ($event.target.innerHTML.trim() == 'Project B')\n  {\n    this.ProjectCost = 88923;\n    this.CurrentExpenditure = 22450;\n    this.AvailableFunds = 2640;\n  } else if ($event.target.innerHTML.trim() == 'Project C')\n  {\n    this.ProjectCost = 662183;\n    this.CurrentExpenditure = 7721;\n    this.AvailableFunds = 9811;\n  } else if ($event.target.innerHTML.trim() == 'Project D')\n  {\n    this.ProjectCost = 928431;\n    this.CurrentExpenditure = 562;\n    this.AvailableFunds = 883;\n  }}\n}\n","<nav>\n    <ol class=\"breadcrumb\">\n      <li class=\"breadcrumb-item\"><a routerLink=\"/\">Home</a></li>\n      <li class=\"breadcrumb-item active\">Dashboard</li>\n    </ol>\n  </nav>\n  \n  <h5>Dashboard</h5>\n  <h6>{{ToDay | date:\"d/M/y\"}}</h6>\n  <div class=\"row\">\n    <div class=\"col-lg-3 pb-3\" style=\"background-color: #e9e6e6\">\n      <div class=\"row\">\n        <div\n          class=\"col-11 text-white text-center mx-auto rounded pt-2 pb-2 font-weight-bold\"\n          style=\"\n            background-color: #a39e9e;\n            font-family: 'Arial Narrow Bold', sans-serif;\n          \"\n        >\n          {{ Designation | uppercase}}\n        </div>\n        <div class=\"col-12 text-center mt-2\">\n          <img src=\"assets/user.png\" width=\"120px\" />\n        </div>\n        <div\n          class=\"col-12 text-center pt-2 pb-2 font-weight-bold\"\n          style=\"font-family: Tahoma\"\n        >\n          {{ Username }}\n        </div>\n        <div class=\"col-12 text-center pt-2 pb-2\" style=\"font-family: Arial\">\n          TEAM SUMMARY\n        </div>\n        <div class=\"col-12 mb-3\">\n          <ul class=\"list-group\">\n            <li\n              class=\"list-group-item d-flex justify-content-between align-items-center\"\n            >\n              NO. OF TEAM MEMBERS\n              <span\n                class=\"badge badge-secondary badge-pill\"\n                style=\"font-size: 13px\"\n                >{{ NoOfTeamMembers }}</span\n              >\n            </li>\n            <li\n              class=\"list-group-item d-flex justify-content-between align-items-center\"\n            >\n              TOTAL COST OF ALL PROJECTS\n              <span\n                class=\"badge badge-secondary badge-pill\"\n                style=\"font-size: 13px\"\n                >$ {{ TotalCostOfAllProjects }} k</span\n              >\n            </li>\n            <li\n              class=\"list-group-item d-flex justify-content-between align-items-center\"\n            >\n              PENDING TASKS\n              <span\n                class=\"badge badge-secondary badge-pill\"\n                style=\"font-size: 13px\"\n                >{{ PendingTasks }}</span\n              >\n            </li>\n            <li\n              class=\"list-group-item d-flex justify-content-between align-items-center\"\n            >\n              UPCOMING PROJECTS\n              <span\n                class=\"badge badge-secondary badge-pill\"\n                style=\"font-size: 13px\"\n                >{{ UpComingProjects }}</span\n              >\n            </li>\n          </ul>\n        </div>\n        <div\n          class=\"col-12 text-center pt-2 pb-2\"\n          style=\"font-family: 'Arial Narrow'\"\n        >\n          CLIENTS\n        </div>\n        <div class=\"col-12\">\n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\" *ngFor=\"let client of Clients\">{{client}}</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-lg-6\">\n      <div class=\"row\">\n        <div class=\"col-12 pt-0 pb-2\" style=\"background-color: #e9e6e6\">\n          <div class=\"row mt-2\">\n            <div class=\"col-6 text-left\">\n              <div class=\"dropdown\">\n                <button\n                  class=\"btn btn-secondary dropdown-toggle\"\n                  type=\"button\"\n                  id=\"dropdownMenuButton1\"\n                  data-toggle=\"dropdown\"\n                >\n                  Project A\n                </button>\n                <div class=\"dropdown-menu\">\n                  <a class=\"dropdown-item\" href=\"#\" *ngFor=\"let project of Projects\" onclick=\"return false\"\n                  (click)=\"onProjectChange($event)\"\n                  >{{project}}</a></div>\n              </div>\n            </div>\n            <div class=\"col-6 text-right\">\n              <div class=\"dropdown\">\n                <button\n                  class=\"btn btn-secondary dropdown-toggle\"\n                  type=\"button\"\n                  id=\"dropdownMenuButton2\"\n                  data-toggle=\"dropdown\"\n                >\n                  2019\n                </button>\n                <div class=\"dropdown-menu\">\n                  <a class=\"dropdown-item\" href=\"#\" *ngFor=\"let year of Years\" onclick=\"return false\">{{year}}</a>                  \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div\n          class=\"col-11 mx-auto mt-1 text-white text-center pt-2 pb-2 mx-auto rounded font-weight-bold\"\n          style=\"background-color: #718d97; font-family: 'Arial Narrow'\"\n        >\n          PROJECT BRIEFING\n        </div>\n        <div class=\"col-12\">\n          <table class=\"table table-borderless\">\n            <tr>\n              <td>Project Cost</td>\n              <td>{{ ProjectCost |currency:\"USD\"}}</td>\n            </tr>\n            <tr>\n              <td>Current Expenditure</td>\n              <td>{{ CurrentExpenditure|currency:\"USD\" }}</td>\n            </tr>\n            <tr>\n              <td>Available Funds</td>\n              <td>{{ AvailableFunds |currency:\"USD\"}}</td>\n            </tr>\n          </table>\n        </div>\n        <div\n          class=\"col-11 mx-auto mt-1 text-white text-center pt-2 pb-2 mx-2 rounded font-weight-bold\"\n          style=\"background-color: #718d97; font-family: 'Arial Narrow'\"\n        >\n          TEAM MEMBERS SUMMARY\n        </div>\n        <div class=\"col-12\">\n          <table class=\"table\">\n            <tr>\n              <th>Region</th>\n              <th>Team Members Count</th>\n              <th>Temporarily Unavailable Members</th>\n            </tr>\n            <tr *ngFor=\"let teammembersummary of TeamMembersSummary\">\n              <td>\n                <b>{{teammembersummary.Region}}</b>\n              </td>\n              <td>{{teammembersummary.TeamMembersCount}}</td>\n              <td>{{teammembersummary.TemporarilyUnavailableMembers}}</td>\n            </tr>\n           \n          </table>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-lg-3\" style=\"background-color: #e9e6e6\">\n      <div class=\"row\">\n        <div\n          class=\"col-11 mx-auto mt-1 text-white text-center pt-1 pb-2 mx-2 rounded font-weight-bold\"\n          style=\"background-color: #718d97; font-family: 'Arial Narrow'\"\n        >\n          TEAM MEMBERS\n        </div>\n        <div class=\"col-lg-12 pt-2\">\n          <div class=\"accordion\" id=\"accordion1\">\n            <!-- east starts -->\n            <div class=\"card\" *ngFor=\"let teammember of TeamMembers; let i=index\">\n              <div class=\"card-header bg-secondary\" id=\"card1\">\n                <h2 class=\"mb-0\">\n                  <button\n                    class=\"btn btn-link text-white\"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    [attr.data-target]=\"'#cardbody'+i\"\n                  >\n                    {{teammember.Region}}\n                  </button>\n                </h2>\n              </div>\n              <div [id]=\"'cardbody'+i\" class=\"collapse\" data-parent=\"#accordion1\" [ngClass]=\"(i==0)?'show':''\">\n                <div class=\"card-body\">\n                  <table class=\"table\">\n                    <thead>\n                      <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Status</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr *ngFor=\"let member of teammember.Members\">\n                        <td>{{member.ID}}</td>\n                        <td>{{member.Name}}</td>\n                        <td [style.color]=\"(member.Status=='Busy')?'red':'black'\" >{{member.Status}}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n           \n          </div>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.scss']\n})\nexport class MyProfileComponent {\n\n}\n","<p>my-profile works!</p>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Project } from 'src/app/project';\nimport { ProjectsService } from 'src/app/projects.service';\n\n@Component({\n  selector: 'app-project-details',\n  templateUrl: './project-details.component.html',\n  styleUrls: ['./project-details.component.scss']\n})\nexport class ProjectDetailsComponent {\n  project: Project;\n  routeParmsSubscription: Subscription | any = null;\n\n  constructor(private activatedRoute: ActivatedRoute, private projectsService: ProjectsService) {\n    this.project = new Project();\n  }\n\n  ngOnInit() {\n    this.routeParmsSubscription = this.activatedRoute.params.subscribe((params) => {\n      let pid = params[\"projectid\"];\n\n      this.projectsService.getProjectByProjectID(pid).subscribe((proj: Project) => {\n        this.project = proj;\n      });\n\n    });\n  }\n\n  ngOnDestroy() {\n    this.routeParmsSubscription.unsubscribe();\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-md-8 col-lg-6 col-xl-5 mx-auto\">\n      <div class=\"card card-primary mb-1\">\n  \n        <div class=\"card-header\">\n          <div>#{{project.projectID}}</div>\n          <h5>{{project.projectName}}</h5>\n        </div>\n  \n        <div class=\"card-body\">\n          <table class=\"table table-borderless table-sm\">\n            <tr>\n              <th>Date of Start</th>\n              <td>{{project.dateOfStart}}</td>\n            </tr>\n            <tr>\n              <th>Team Size</th>\n              <td>\n                <span>{{project.teamSize}} </span>\n                <!-- <span class=\"text-info\">{{project.teamSize}}</span> -->\n              </td>\n            </tr>\n            <tr>\n              <th>Client Location</th>\n              <td>{{project.clientLocation?.clientLocationName}}</td>\n            </tr>\n            <tr>\n              <th>Status</th>\n              <td>{{project.status}}</td>\n            </tr>\n          </table>\n        </div>\n  \n        <div class=\"card-footer\">\n          <a class=\"btn btn-info\" [routerLink]=\" [ '/admin', 'projects'] \">\n            Back\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, ContentChildren, EventEmitter, Input, OnInit, Output, QueryList } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Project } from 'src/app/project';\nimport { ProjectsService } from 'src/app/projects.service';\nimport { CheckBoxPrinterComponent } from '../check-box-printer/check-box-printer.component';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.scss']\n})\nexport class ProjectComponent implements OnInit {\n\n  @Input(\"currentProject\") project !: Project;\n  @Input(\"recordIndex\") i !: number;\n\n  @Output() editClick = new EventEmitter();\n  @Output() deleteClick = new EventEmitter();\n\n  MySubscription: Subscription | any;\n  \n  hideDetails: boolean = false;\n\n  constructor(public projectsService:ProjectsService){}\n  ngOnInit(): void {\n    this.MySubscription = this.projectsService.MySubject.subscribe((hide) => {\n      this.hideDetails = hide;\n    });\n  }\n\n  onEditClick(event: any, i: number)\n  {\n    this.editClick.emit({event, i})\n  }\n\n  onDeleteClick(event: any, i: number)\n  {\n    this.deleteClick.emit({event, i})\n  }\n\n  ngOnDestroy()\n  {\n    this.MySubscription.unsubscribe();\n  }\n\n  @ContentChildren(\"selectionBox\") selectionBoxes: QueryList<CheckBoxPrinterComponent> | any = null;\n\n  isAllCheckedChange(b: boolean)\n  {\n    let selectionBox = this.selectionBoxes.toArray();\n    if (b)\n    {\n      for (let i = 0; i < selectionBox.length; i++)\n      {\n        selectionBox[i].check();\n      }\n    }\n    else\n    {\n      for (let i = 0; i < selectionBox.length; i++)\n      {\n        selectionBox[i].unCheck();\n      }\n    }\n  }\n}\n","<div class=\"card card-primary\">\n\n  <div class=\"card-header\">\n    <div class=\"row\">\n      <div class=\"col-11\">\n        <div>#{{project.projectID}}</div>\n        <h5>{{project.projectName}}</h5>\n      </div>\n      <div class=\"col-1\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"card-body\">\n    <table class=\"table table-borderless table-sm\" [hidden]=\"hideDetails\">\n      <tr>\n        <th>Date of Start</th>\n        <td>{{project.dateOfStart}}</td>\n      </tr>\n      <tr>\n        <th>Team Size</th>\n        <td>{{project.teamSize}}</td>\n      </tr>\n      <tr>\n        <th>Client Location</th>\n        <td>{{project.clientLocation?.clientLocationName}}</td>\n      </tr>\n      <tr>\n        <th>Status</th>\n        <td>{{project.status}}</td>\n      </tr>\n    </table>\n  </div>\n\n  <div class=\"card-footer\">\n    <button class=\"btn btn-info\" (click)=\"onEditClick($event, i)\" data-toggle=\"modal\" data-target=\"#editModal\">Edit</button>&nbsp;\n    <button class=\"btn btn-warning\" (click)=\"onDeleteClick($event, i)\" data-toggle=\"modal\" data-target=\"#deleteModal\">Delete</button>\n    <a class=\"btn btn-primary\" [routerLink]=\" ['/admin' ,'projects', 'view', project.projectID] \">Learn More</a>\n  </div>\n</div>","import { Component, ElementRef, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ClientLocation } from 'src/app/client-location';\nimport { ClientLocationsService } from 'src/app/client-locations.service';\nimport { Project } from 'src/app/project';\nimport { ProjectsService } from 'src/app/projects.service';\nimport * as $ from 'jquery';\nimport { ProjectComponent } from '../project/project.component';\nimport { FilterPipe } from 'src/app/filter.pipe';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss'],\n})\n\nexport class ProjectsComponent implements OnInit {\n  projects: Project[] = [];\n  clientLocations: ClientLocation[] = [];\n  showLoading: boolean = true;\n\n  newProject: Project = new Project();\n  editProject: Project = new Project();\n  editIndex: any = null;\n  deleteProject: Project = new Project();\n  deleteIndex: any = null;\n  searchBy: string = 'ProjectName';\n  searchText: string = '';\n\n  currentPageIndex: number = 0;\n  pages: any[] = [];\n  pageSize: number = 3;\n\n  @ViewChild(\"newForm\") newForm: NgForm | any = null;\n  @ViewChild(\"editForm\") editForm: NgForm | any = null;\n\n  constructor(\n    private projectService: ProjectsService,\n    private clientLocationsService: ClientLocationsService\n  ) {}\n\n  ngOnInit() {\n    this.projectService.getAllProjects().subscribe({\n      next: (response: Project[]) => {\n        this.projects = response;\n        this.showLoading = false;\n        this.calculateNoOfPages();\n      },\n      error: (error) => {\n        console.log(error);\n        alert('Authentication Failed');\n      },\n    });\n\n    this.clientLocationsService.getClientLocations().subscribe({\n      next: (response) => {\n        this.clientLocations = response;\n      },\n      error: (error) => {\n        console.log(error);\n      },\n    });\n  }\n\n  calculateNoOfPages()\n  {\n    let filterPipe = new FilterPipe();\n    var resultProjects = filterPipe.transform(this.projects, this.searchBy, this.searchText);\n    var noOfPages = Math.ceil(resultProjects.length  / this.pageSize);\n\n    this.pages = [];\n    for (let i = 0; i < noOfPages; i++)\n    {\n      this.pages.push( { pageIndex: i });\n    }\n\n    this.currentPageIndex = 0;\n  }\n\n  isAllChecked: boolean = false;\n\n  @ViewChildren(\"prj\") projs : QueryList<ProjectComponent> | any = null;\n\n  isAllCheckedChange(event: any)\n  {\n    let proj = this.projs.toArray();\n    for (let i = 0; i < proj.length; i++)\n    {\n      proj[i].isAllCheckedChange(this.isAllChecked);\n    }\n  }\n\n  @ViewChild(\"prjID\") prjID: ElementRef | any = null;\n\n  onNewClick(event: any)\n  {\n    this.newForm.resetForm();\n    setTimeout(() => {\n      this.prjID.nativeElement.focus();\n    }, 100);\n  }\n\n  onSaveClick() {\n    if (this.newForm.valid) {\n      this.newProject.clientLocation.clientLocationID = 0;\n      this.projectService.insertProject(this.newProject).subscribe({\n        next: (response) => {\n          //Add Project to Grid\n          var p: Project = new Project();\n          p.projectID = response.projectID;\n          p.projectName = response.projectName;\n          p.dateOfStart = response.dateOfStart;\n          p.teamSize = response.teamSize;\n          p.clientLocation = response.clientLocation;\n          p.active = response.active;\n          p.clientLocationID = response.clientLocationID;\n          p.status = response.status;\n          this.projects.push(p);\n\n          //Clear New Project Dialog - TextBoxes\n          this.newProject.projectID = null;\n          this.newProject.projectName = null;\n          this.newProject.dateOfStart = null;\n          this.newProject.teamSize = null;\n          this.newProject.active = false;\n          this.newProject.clientLocationID = null;\n          this.newProject.status = null;\n          \n          $('#newFormCancel').trigger('click');\n          this.calculateNoOfPages();\n        },\n        error: (error) => {\n          console.log(error);\n        },\n      });\n    }\n  }\n\n  onEditClick(event: any, index: number) {\n    this.editForm.resetForm();\n    setTimeout(() => {\n      this.editProject.projectID = this.projects[index].projectID;\n      this.editProject.projectName = this.projects[index].projectName;\n      this.editProject.dateOfStart = this.projects[index].dateOfStart\n        .split('/')\n        .reverse()\n        .join('-'); //yyyy-MM-dd\n      this.editProject.teamSize = this.projects[index].teamSize;\n      this.editProject.active = this.projects[index].active;\n      this.editProject.clientLocationID = this.projects[index].clientLocationID;\n      this.editProject.clientLocation = this.projects[index].clientLocation;\n      this.editProject.status = this.projects[index].status;\n      this.editIndex = index;\n    }, 100);\n  }\n\n  onUpdateClick() {\n    debugger;\n    if (this.editForm.valid) {\n      this.projectService.updateProject(this.editProject).subscribe({\n        next: (response: Project) => {\n          var p: Project = new Project();\n          p.projectID = response.projectID;\n          p.projectName = response.projectName;\n          p.dateOfStart = response.dateOfStart;\n          p.teamSize = response.teamSize;\n          p.clientLocation = response.clientLocation;\n          p.active = response.active;\n          p.clientLocationID = response.clientLocationID;\n          p.status = response.status;\n          this.projects[this.editIndex] = p;\n\n          this.editProject.projectID = null;\n          this.editProject.projectName = null;\n          this.editProject.dateOfStart = null;\n          this.editProject.teamSize = null;\n          this.newProject.active = false;\n          this.newProject.clientLocationID = null;\n          this.newProject.status = null;\n\n          $('#editFormCancel').trigger('click');\n        },\n        error: (error) => {\n          console.log(error);\n        },\n      });\n    }\n  }\n\n  onDeleteClick(event: any, index: number) {\n    this.deleteIndex = index;\n    this.deleteProject.projectID = this.projects[index].projectID;\n    this.deleteProject.projectName = this.projects[index].projectName;\n    this.deleteProject.dateOfStart = this.projects[index].dateOfStart;\n    this.deleteProject.teamSize = this.projects[index].teamSize;\n  }\n\n  onDeleteConfirmClick() {\n    this.projectService.deleteProject(this.deleteProject.projectID).subscribe({\n      next: (response) => {\n        this.projects.splice(this.deleteIndex, 1);\n        this.deleteProject.projectID = null;\n        this.deleteProject.projectName = null;\n        this.deleteProject.dateOfStart = null;\n        this.deleteProject.teamSize = null;\n        this.calculateNoOfPages();\n      },\n      error: (error) => {\n        console.log(error);\n      },\n    });\n  }\n\n  onSearchClick() {\n    // this.projectService\n    //   .SearchProjects(this.searchBy, this.searchText)\n    //   .subscribe({\n    //     next: (response: Project[]) => {\n    //       this.projects = response;\n    //     },\n    //     error: (error) => {\n    //       console.log(error);\n    //     },\n    //   });\n  }\n\n  onSearchTextKeyup(event: any)\n  {\n    this.calculateNoOfPages();\n  }\n\n  onHideShowDetails(event:any){\n    this.projectService.toggleDetails();\n  }\n\n  onPageIndexClicked(pageIndex: number)\n  {\n    this.currentPageIndex = pageIndex;\n  }\n}\n","<h1>\n  Projects\n  <i class=\"fa fa-circle-o-notch fa-spin\" style=\"font-size:34px\" *ngIf=\"showLoading\"></i>\n</h1>\n<div class=\"row\">\n  <div class=\"col-xl-12 mx-auto\">\n    <div class=\"form-group form-row\">\n\n      <div class=\"col-2\">\n        <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#newModal\" (click)=\"onNewClick($event)\">Create\n          Project</button>\n      </div>\n      <div class=\"col-2\">\n        <button class=\"btn btn-secondary\" (click)=\"onHideShowDetails($event)\">Hide/Show Details</button>\n      </div>\n\n      <div class=\"col-1 custom-control custom-checkbox\">\n        <input type=\"checkbox\" value=\"true\" name=\"isAllChecked\" id=\"isAllChecked\" [(ngModel)]=\"isAllChecked\"\n          class=\"custom-control-input\" (change)=\"isAllCheckedChange($event)\">\n        <label class=\"custom-control-label\" for=\"isAllChecked\"></label>\n      </div>\n\n      <label for=\"drpSearchBy\" class=\"col-form-label col-1 text-right\">Search by:</label>\n\n      <div class=\"col-2\">\n        <select class=\"form-control\" id=\"drpSearchBy\" name=\"SearchBy\" [(ngModel)]=\"searchBy\">\n          <option value=\"projectID\">Project ID</option>\n          <option value=\"projectName\">Project Name</option>\n          <option value=\"dateOfStart\">Date of Start</option>\n          <option value=\"teamSize\">Team Size</option>\n        </select>\n      </div>\n\n      <label for=\"textSearchText\" class=\"col-form-label col-1 text-right\">Search:</label>\n\n      <div class=\"col-3\">\n        <div class=\"input-group\">\n          <input type=\"text\" class=\"form-control\" id=\"txtSearchText\" name=\"SearchText\" [(ngModel)]=\"searchText\"\n            (keyup)=\"onSearchTextKeyup($event)\">\n          <!-- <div class=\"input-group-append\" (click)=\"onSearchClick()\">\n            <span class=\"input-group-text\"><i class=\"fa fa-search\"></i></span>\n          </div> -->\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n  <div class=\"col-xl-12 mx-auto\">\n    <div class=\"row\">\n      <div class=\"col-md-4 mb-1 projectcard\"\n        *ngFor=\"let project of projects | filter: searchBy: searchText | paging : currentPageIndex : pageSize; let i=index\">\n        <app-project #prj [currentProject]=\"project\" [recordIndex]=\"i\" (editClick)=\"onEditClick($event,i)\"\n          (deleteClick)=\"onDeleteClick($event, i)\">\n          <app-check-box-printer #selectionBox>\n          </app-check-box-printer>\n\n        </app-project>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <ul class=\"pagination justify-content-center mt-1\">\n          \n          <li class=\"page-item\" *ngFor=\"let page of pages\" (click)=\"onPageIndexClicked(page.pageIndex)\" [ngClass]=\" { 'active': page.pageIndex == currentPageIndex}\">\n            <a href=\"#\" onclick=\"return false\" class=\"page-link\">\n              {{page.pageIndex + 1}}\n            </a>\n          </li>\n\n        </ul>\n      </div>\n    </div>\n\n  </div>\n</div>\n\n<form #newForm=\"ngForm\" novalidate=\"novalidate\" appClientLocationStatusValidator>\n  <div class=\"modal\" role=\"dialog\" id=\"newModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\" style=\"width:700px\">\n        <div class=\"modal-header bg-primary text-white\">\n          <div class=\"modal-title\">New Project</div>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n        </div>\n        <div class=\"modal-body\">\n\n          <div class=\"form-group row\">\n            <label for=\"txtNewProjectID\" class=\"col-sm-4 col-form-label\">Project ID</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtNewProjectID\" style=\"width:130px\" class=\"form-control\" placeholder=\"Project ID\"\n                name=\"ProjectID\" [(ngModel)]=\"newProject.projectID\" required=\"required\" pattern=\"^[0-9]*$\"\n                appProjectIDUniqueValidator #newProjectID=\"ngModel\" #prjID\n                [ngClass]=\"{ 'is-invalid': newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted), 'is-valid': newProjectID.valid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) && newProjectID.errors!['required']\">Project\n                ID can't be blank</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) && newProjectID.errors!['pattern']\">Project\n                ID should contain numbers only</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) && newProjectID.errors!['uniqueProjectID']\">Duplicate\n                Project ID</span>\n\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtNewProjectName\" class=\"col-sm-4 col-form-label\">Project Name</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtNewProjectName\" class=\"form-control\" placeholder=\"Project Name\"\n                name=\"ProjectName\" [(ngModel)]=\"newProject.projectName\" required=\"required\" minlength=\"3\" maxlength=\"30\"\n                pattern=\"^[A-Za-z0-9 /-]*$\" #newProjectName=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted), 'is-valid': newProjectName.valid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) && newProjectName.errors!['required']\">Project\n                Name can't be blank</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) && newProjectName.errors!['pattern']\">Project\n                Name can contain alphabets, digits, dot, hyphen or space only</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) && newProjectName.errors!['minlength']\">Project\n                name should be at least 3 characters long</span>\n\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtNewDateOfStart\" class=\"col-sm-4 col-form-label\">Date of Start</label>\n            <div class=\"col-sm-8\">\n              <input type=\"date\" id=\"txtNewDateOfStart\" style=\"width:180px\" class=\"form-control\"\n                placeholder=\"Date of Start\" name=\"DateOfStart\" [(ngModel)]=\"newProject.dateOfStart\" required=\"required\"\n                #newDateOfStart=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': newDateOfStart.invalid && (newDateOfStart.dirty || newDateOfStart.touched || newForm.submitted), 'is-valid': newDateOfStart.valid && (newDateOfStart.dirty || newDateOfStart.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"newDateOfStart.invalid && (newDateOfStart.dirty || newDateOfStart.touched || newForm.submitted) && newDateOfStart.errors!['required']\">Date\n                of Start can't be blank</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtTeamSize\" class=\"col-sm-4 col-form-label\">Team Size</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtTeamSize\" style=\"width:150px\" class=\"form-control\" placeholder=\"Team Size\"\n                name=\"TeamSize\" [(ngModel)]=\"newProject.teamSize\" pattern=\"^[0-9]*$\" maxlength=\"7\"\n                appTeamSizeValidator=\"5\" #newTeamSize=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted), 'is-valid': newTeamSize.valid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) && newTeamSize.errors!['required']\">Team\n                Size should be a number</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) && newTeamSize.errors!['divisible']\">Team\n                Size should be divisble by 5</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"col-sm-4 col-form-label\">&nbsp;</label>\n            <div class=\"col-sm-8\">\n              <div class=\"form-check\">\n                <input type=\"checkbox\" id=\"chkNewActive\" value=\"true\" class=\"form-check-input\"\n                  [(ngModel)]=\"newProject.active\" name=\"active\">\n                <label class=\"form-check-label\" for=\"chkNewActive\">Active</label>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"rbNewStatusInForce\" class=\"col-sm-4\">Status</label>\n            <div class=\"col-sm-8\">\n\n              <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" id=\"rbNewStatusInForce\" value=\"In Force\" class=\"form-check-input\" name=\"Status\"\n                  [(ngModel)]=\"newProject.status\" required=\"required\" #newStatusInForce=\"ngModel\">\n                <label for=\"rbNewStatusInForce\" class=\"form-check-label\">In Force</label>\n              </div>\n\n              <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" id=\"rbNewStatusSupport\" value=\"Support\" class=\"form-check-input\" name=\"Status\"\n                  [(ngModel)]=\"newProject.status\" required=\"required\" #newStatusSupport=\"ngModel\">\n                <label for=\"rbNewStatusSupport\" class=\"form-check-label\">Support</label>\n              </div>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newStatusInForce.invalid && (newStatusInForce.dirty || newStatusInForce.touched || newForm.submitted) && newStatusInForce.errors!['required']\">Please\n                select status</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"drpNewClientLocation\" class=\"col-sm-4 col-form-label\">Client Location</label>\n            <div class=\"col-sm-8\">\n              <select id=\"drpNewClientLocation\" class=\"form-control\" name=\"ClientLocation\"\n                [(ngModel)]=\"newProject.clientLocationID\" required=\"required\" #newClientLocationID=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': newClientLocationID.invalid && (newClientLocationID.dirty || newClientLocationID.touched || newForm.submitted), 'is-valid': newClientLocationID.valid && (newClientLocationID.dirty || newClientLocationID.touched || newForm.submitted) }\">\n                <option value=\"null\">Please Select</option>\n                <option *ngFor=\"let clientLocation of clientLocations\" [value]=\"clientLocation.clientLocationID\">\n                  {{clientLocation.clientLocationName}}\n                </option>\n              </select>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newClientLocationID.invalid && (newClientLocationID.dirty || newClientLocationID.touched || newForm.submitted) && newClientLocationID.errors!['required']\">Please\n                client location</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newForm.invalid && (newForm.dirty || newForm.touched || newForm.submitted) && (newForm.errors? newForm.errors!['clientLocationStatus'] : false)\">Support\n                projects are not allowed at Tokyo</span>\n            </div>\n          </div>\n\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"newFormCancel\">Cancel</button>\n          <button class=\"btn btn-success\" (click)=\"onSaveClick()\">Save</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n<!-- Edit Project -->\n<form #editForm=\"ngForm\" novalidate=\"novalidate\" appClientLocationStatusValidator>\n  <div class=\"modal\" role=\"dialog\" id=\"editModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\" style=\"width:700px\">\n        <div class=\"modal-header\">\n          <div class=\"modal-title\">Edit Project</div>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n        </div>\n        <div class=\"modal-body\">\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditProjectID\" class=\"col-sm-4 col-form-label\">Project ID</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtEditProjectID\" style=\"width:130px\" class=\"form-control-plain-text\"\n                placeholder=\"Project ID\" name=\"ProjectID\" [(ngModel)]=\"editProject.projectID\" disabled=\"disabled\"\n                required=\"required\" pattern=\"^[0-9]*$\" appProjectIDUniqueValidator #editProjectID=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || newForm.submitted), 'is-valid': editProjectID.valid && (editProjectID.dirty || editProjectID.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || editForm.submitted) && editProjectID.errors!['required']\">Project\n                ID can't be blank</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || editForm.submitted) && editProjectID.errors!['pattern']\">Project\n                ID should contain numbers only</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || editForm.submitted) && editProjectID.errors!['uniqueProjectID']\">Duplicate\n                Project ID</span>\n\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditProjectName\" class=\"col-sm-4 col-form-label\">Project Name</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtEditProjectName\" class=\"form-control\" placeholder=\"Project Name\"\n                name=\"ProjectName\" [(ngModel)]=\"editProject.projectName\" required=\"required\" minlength=\"3\"\n                maxlength=\"30\" pattern=\"^[A-Za-z0-9 /-]*$\" #editProjectName=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted), 'is-valid': editProjectName.valid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) && editProjectName.errors!['required']\">Project\n                Name can't be blank</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) && editProjectName.errors!['pattern']\">Project\n                Name can contain alphabets, digits, dot, hyphen or space only</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) && editProjectName.errors!['minlength']\">Project\n                name should be at least 3 characters long</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditDateOfStart\" class=\"col-sm-4 col-form-label\">Date of Start</label>\n            <div class=\"col-sm-8\">\n              <input type=\"date\" id=\"txtEditDateOfStart\" style=\"width:180px\" class=\"form-control\"\n                placeholder=\"Date of Start\" name=\"DateOfStart\" [(ngModel)]=\"editProject.dateOfStart\" required=\"required\"\n                #editDateOfStart=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': editDateOfStart.invalid && (editDateOfStart.dirty || editDateOfStart.touched || editForm.submitted), 'is-valid': editDateOfStart.valid && (editDateOfStart.dirty || editDateOfStart.touched || editForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"editDateOfStart.invalid && (editForm.submitted) && editDateOfStart.errors!['required']\">Date of\n                Start can't be blank</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditTeamSize\" class=\"col-sm-4 col-form-label\">Team Size</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtEditTeamSize\" style=\"width:150px\" class=\"form-control\" placeholder=\"Team Size\"\n                name=\"TeamSize\" [(ngModel)]=\"editProject.teamSize\" pattern=\"^[0-9]*$\" maxlength=\"7\"\n                appTeamSizeValidator=\"5\" #editTeamSize=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted), 'is-valid': editTeamSize.valid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted) && editTeamSize.errors!['required']\">Team\n                Size should be a number</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted) && editTeamSize.errors!['divisible']\">Team\n                Size should be divisble by 5</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"col-sm-4 col-form-label\">&nbsp;</label>\n            <div class=\"col-sm-8\">\n              <div class=\"form-check\">\n                <input type=\"checkbox\" id=\"chkEditActive\" value=\"true\" class=\"form-check-input\"\n                  [(ngModel)]=\"editProject.active\" name=\"active\">\n                <label class=\"form-check-label\" for=\"chkEditActive\">Active</label>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"rbEditStatusInForce\" class=\"col-sm-4\">Status</label>\n            <div class=\"col-sm-8\">\n\n              <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" id=\"rbEditStatusInForce\" value=\"In Force\" class=\"form-check-input\" name=\"Status\"\n                  [(ngModel)]=\"editProject.status\" required=\"required\" #editStatusInForce=\"ngModel\">\n                <label for=\"rbEditStatusInForce\" class=\"form-check-label\">In Force</label>\n              </div>\n\n              <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" id=\"rbEditStatusSupport\" value=\"Support\" class=\"form-check-input\" name=\"Status\"\n                  [(ngModel)]=\"editProject.status\" required=\"required\" #editStatusSupport=\"ngModel\">\n                <label for=\"rbEditStatusSupport\" class=\"form-check-label\">Support</label>\n              </div>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editStatusInForce.invalid && (editStatusInForce.dirty || editStatusInForce.touched || editForm.submitted) && editStatusInForce.errors!['required']\">Please\n                select status</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"drpEditClientLocation\" class=\"col-sm-4 col-form-label\">Client Location</label>\n            <div class=\"col-sm-8\">\n              <select id=\"drpEditClientLocation\" class=\"form-control\" name=\"ClientLocation\"\n                [(ngModel)]=\"editProject.clientLocationID\" required=\"required\" #editClientLocationID=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': editClientLocationID.invalid && (editClientLocationID.dirty || editClientLocationID.touched || editForm.submitted), 'is-valid': editClientLocationID.valid && (editClientLocationID.dirty || editClientLocationID.touched || editForm.submitted) }\">\n                <option value=\"null\">Please Select</option>\n                <option *ngFor=\"let clientLocation of clientLocations\" [value]=\"clientLocation.clientLocationID\">\n                  {{clientLocation.clientLocationName}}\n                </option>\n              </select>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editClientLocationID.invalid && (editClientLocationID.dirty || editClientLocationID.touched || editForm.submitted) && editClientLocationID.errors!['required']\">Please\n                client location</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editForm.invalid && (editForm.dirty || editForm.touched || editForm.submitted) && (editForm.errors? editForm.errors!['clientLocationStatus'] : false)\">Support\n                projects are not allowed at Tokyo</span>\n            </div>\n          </div>\n\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"editFormCancel\">Cancel</button>\n          <button class=\"btn btn-success\" (click)=\"onUpdateClick()\">Update</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n\n<!-- Delete Project -->\n<form>\n  <div class=\"modal\" role=\"dialog\" id=\"deleteModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\" style=\"width:700px\">\n        <div class=\"modal-header\">\n          <div class=\"modal-title\">Delete Project</div>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n        </div>\n        <div class=\"modal-body\">\n\n          <div class=\"text-warning\">Are you sure to delete this Project?</div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtDeleteProjectID\" class=\"col-sm-4 col-form-label\">Project ID</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtDeleteProjectID\" style=\"width:100px\" class=\"form-control-plain-text\"\n                placeholder=\"Project ID\" name=\"ProjectID\" [(ngModel)]=\"deleteProject.projectID\" disabled=\"disabled\">\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtDeleteProjectName\" class=\"col-sm-4 col-form-label\">Project Name</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtDeleteProjectName\" class=\"form-control-plain-text\" placeholder=\"Project Name\"\n                name=\"ProjectName\" [(ngModel)]=\"deleteProject.projectName\" disabled=\"disabled\">\n            </div>\n          </div>\n\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-dismiss=\"modal\">Cancel</button>\n          <button class=\"btn btn-success\" data-dismiss=\"modal\" (click)=\"onDeleteConfirmClick()\">Delete</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>","import { Directive, ElementRef, HostBinding, HostListener, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appAlert]'\n})\nexport class AlertDirective {\n  @Input(\"error\") error: string | any = null;\n  @HostBinding(\"title\") title: string | null = null;\n\n  constructor(private elementRef:ElementRef, private renderer2: Renderer2) { }\n\n  divElement: any;\n  spanElement: any;\n  spanText: any;\n\n  ngOnInit() {\n    /* div */\n    this.divElement = this.renderer2.createElement(\"div\"); //<div></div>\n\n    this.renderer2.setAttribute(this.divElement, \"role\", \"alert\"); //<div role=\"alert\"> </div>\n\n    this.renderer2.setAttribute(this.divElement, \"class\", \"alert alert-danger fade show\");\n    //<div role=\"alert\" class=\"alert alert-danger fade show\"> </div>\n\n    this.renderer2.setStyle(this.divElement, \"transition\", \"transform 0.5s\");\n    //<div role=\"alert\" class=\"alert alert-danger fade show\" style=\"transition: transform 0.5s\"> </div>\n\n    /* span */\n    this.spanElement = this.renderer2.createElement(\"span\");\n    this.renderer2.setAttribute(this.spanElement, \"class\", \"message\");\n    //<span class=\"message\"></span>\n\n    /* spanText */\n    this.spanText = this.renderer2.createText(this.error);\n    this.renderer2.appendChild(this.spanElement, this.spanText);\n    //<span class=\"message\">${this.error}</span>\n\n    this.renderer2.appendChild(this.divElement, this.spanElement);\n    //<div role=\"alert\" class=\"alert alert-danger fade show\" style=\"transition: transform 0.5s\"> <span class=\"message\">${this.error}</span> </div>\n\n    this.elementRef.nativeElement.appendChild(this.divElement);\n\n    this.title = \"Please try again!\";\n  }\n\n  @HostListener(\"mouseenter\", [\"$event\"])\n  onMouseEnter(event: any) {\n    //this.elementRef.nativeElement.querySelector(\".alert\").style.transform = \"scale(1.1)\";\n    this.renderer2.setStyle(this.divElement, \"transform\", \"scale(1.1)\");\n  }\n\n  @HostListener(\"mouseleave\", [\"$event\"])\n  onMouseLeave() {\n    //this.elementRef.nativeElement.querySelector(\".alert\").style.transform = \"scale(1)\";\n    this.renderer2.setStyle(this.divElement, \"transform\", \"scale(1)\");\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AboutComponent } from './admin/about/about.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignUpComponent },\n  { path: 'about', component: AboutComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true, enableTracing:true })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { LoginService } from './login.service';\nimport { RouterLoggerService } from './router-logger.service';\nimport { NavigationEnd, Router, RouterOutlet } from '@angular/router';\nimport { fadeAnimation } from './MyAnimation';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations:[fadeAnimation]\n})\nexport class AppComponent {\n  constructor(public loginService:LoginService, private routerLoggerService:RouterLoggerService, private router:Router){}\n\n  ngOnIntIt(){\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        let userName = (this.loginService.currentUserName) ? this.loginService.currentUserName : \"anonymous\";\n\n        let logMsg = new Date().toLocaleString() + \": \" + userName + \" navigates to \" + event.url;\n\n        this.routerLoggerService.log(logMsg).subscribe();\n      }\n    });\n  }\n\n  getState(outlet: RouterOutlet) {\n    return outlet.isActivated ? outlet.activatedRoute.snapshot.url[0].path : \"none\";\n  }\n}\n","<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n  <a class=\"navbar-brand\" href=\"#\"> Project Task Manager </a>\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#mynav\"\n  >\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"mynav\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != null\">\n        <a class=\"nav-link\" [routerLink]=\"['/admin','dashboard']\">Dashboard</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLink]=\"['/about']\">About</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != null\">\n        <a class=\"nav-link\" [routerLink]=\"['/admin','projects']\">Projects</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != null\">\n        <a class=\"nav-link\" href=\"#\">{{loginService.currentUserName}}</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != null\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"loginService.Logout()\">Logout</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"loginService.currentUserName == null\">\n        <a class=\"nav-link\" [routerLink]=\"['/login']\">Login</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"loginService.currentUserName == null\">\n        <a class=\"nav-link\" [routerLink]=\"['/signup']\">Sign Up</a>\n      </li>\n    </ul>\n    <form class=\"form-inline my-2 my-lg-0\">\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"search\"\n            ><i class=\"fa fa-search\"></i\n          ></span>\n        </div>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Search\" />\n      </div>\n      <button class=\"btn btn-warning my2- my-sm-0 ml-1\" type=\"button\">Search</button>\n    </form>\n  </div>\n</nav>\n\n<div class=\"container-fluid\" [@routeAnimations]=\"getState(outlet)\">\n  <router-outlet #outlet=\"outlet\"></router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AdminModule } from './admin/admin.module';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JwtInterceptorService } from './jwt-interceptor.service';\nimport { JwtUnAuthorizedInterceptorService } from './jwt-un-authorized-interceptor.service';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { AlertDirective } from './alert.directive';\nimport { RepeaterDirective } from './repeater.directive';\nimport { EmployeeModule } from './employee/employee.module';\n\n@NgModule({\n  declarations: [AppComponent, LoginComponent, SignUpComponent,  AlertDirective, RepeaterDirective],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    AdminModule,\n    EmployeeModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: () => {\n          return sessionStorage.getItem(\"currentUser\")\n            ? JSON.parse(sessionStorage.getItem(\"currentUser\") as string).token\n            : null;\n        },\n      },\n    }),\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptorService,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtUnAuthorizedInterceptorService,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Directive } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\n\n@Directive({\n  selector: '[appClientLocationStatusValidator]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: ClientLocationStatusValidatorDirective, multi: true }]\n})\nexport class ClientLocationStatusValidatorDirective implements Validator {\n\n  constructor() { }\n  validate(control: AbstractControl): ValidationErrors | null {\n    let isValid = true;\n    if (control.value.ClientLocation == 6 && control.value.Status == \"Support\") {\n      isValid = false; //indicates invalid\n    }\n\n    if (isValid == true) {\n      return null; //valid\n    }\n    else {\n      return { clientLocationStatus: { valid: false } }; //invalid\n    }\n  }\n\n}\n","export class ClientLocation {\n    clientLocationID: any;\n    clientLocationName: any;\n\n    constructor()\n    {\n        this.clientLocationID = null;\n        this.clientLocationName = null;\n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ClientLocation } from './client-location';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientLocationsService {\n\n  constructor(private httpClient:HttpClient) { }\n\n  getClientLocations():Observable<ClientLocation[]>{\n    return this.httpClient.get<ClientLocation[]>(\"/api/clientlocations\", { responseType: \"json\" })\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Country } from './country';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountriesService {\n\n  constructor(private httpClient: HttpClient)\n  {\n  }\n\n  getCountries(): Observable<Country[]>\n  {\n    return this.httpClient.get<Country[]>(\"/api/countries\", { responseType: \"json\" });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl, AsyncValidatorFn, FormControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { Observable, map } from 'rxjs';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomValidatorsService {\n\n  constructor(private loginService: LoginService) { }\n\n  public minimumAgeValidator(minAge: number): ValidatorFn\n  {\n    return (control: AbstractControl): ValidationErrors | null =>\n    {\n      if (!control.value)\n        return null; //return, if the date of birth is null\n\n      var today = new Date();\n      var dateOfBirth = new Date(control.value);\n      var diffMilliSeconds = Math.abs(today.getTime() - dateOfBirth.getTime());\n      var diffYears = (diffMilliSeconds / (1000 * 60 * 60 * 24)) / 365.25;\n\n      if (diffYears >= minAge)\n        return null; //valid\n      else\n        return { minAge: { valid: false } }; //invalid\n    };\n  }\n  public compareValidator(controlToValidate: string, controlToCompare: string): ValidatorFn\n  {\n    return (formGroup: AbstractControl): ValidationErrors | null =>\n    {\n      if (!(formGroup.get(controlToValidate) as FormControl).value)\n        return null; //return, if the confirm password is null\n\n      if ((formGroup.get(controlToValidate) as FormControl).value == (formGroup.get(controlToCompare) as any).value)\n        return null; //valid\n      else\n      {\n        (formGroup.get(controlToValidate) as FormControl).setErrors({ compareValidator: { valid: false } });\n        return { compareValidator: { valid: false } }; //invalid\n      }\n    };\n  }\n\n  public DuplicateEmailValidator(): AsyncValidatorFn\n  {\n    return (control: AbstractControl): Observable<ValidationErrors | null> =>\n    {\n      return this.loginService.getUserByEmail(control.value).pipe(map((existingUser: any) =>\n      {\n        if (existingUser != null)\n        {\n          return { uniqueEmail: { valid: false } }; //invalid\n        }\n        else\n        {\n          return null;\n        }\n      }));\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DashboardService {\n\n  getTeamMembersSummary():any[]{\n    var TeamMembersSummary =[\n      {\n        Region: 'East',\n        TeamMembersCount: 20,\n        TemporarilyUnavailableMembers: 4,\n      },\n      {\n        Region: 'West',\n        TeamMembersCount: 15,\n        TemporarilyUnavailableMembers: 8,\n      },\n      {\n        Region: 'South',\n        TeamMembersCount: 17,\n        TemporarilyUnavailableMembers: 1,\n      },\n      {\n        Region: 'North',\n        TeamMembersCount: 15,\n        TemporarilyUnavailableMembers: 6,\n      },\n    ];\n    return TeamMembersSummary\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TasksComponent } from '../tasks/tasks.component';\n\nconst routes:Routes=[\n  {\n    path: 'employee',\n    data: { expectedRole: 'Employee' },\n    children: [{ path: 'tasks', component: TasksComponent }],\n  },\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ],\n  exports:[RouterModule]\n})\nexport class EmployeeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EmployeeRoutingModule } from './employee-routing/employee-routing.module';\n\n\n\n@NgModule({\n  declarations: [TasksComponent],\n  imports: [\n    CommonModule, FormsModule, ReactiveFormsModule, EmployeeRoutingModule\n  ],\n  exports:[TasksComponent]\n})\nexport class EmployeeModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss']\n})\nexport class TasksComponent {\n\n}\n","<p>tasks works!</p>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Project } from './project';\n\n@Pipe({\n  name: 'filter',\n  pure:false\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: Project[] | any, searchBy: string, searchText: string): any\n  {\n    if (value == null)\n    {\n      return value;\n    }\n\n    let resultArray = [];\n    for (let item of value)\n    {\n      if (String(item[searchBy]).toLowerCase().indexOf(searchText.toLowerCase()) >= 0)\n      {\n        resultArray.push(item);\n      }\n    }\n\n    return resultArray;\n  }\n}\n","import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JwtInterceptorService implements HttpInterceptor {\n  constructor() {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    var currentUser = { token: '' };\n\n    if (sessionStorage['currentUser'] != null) {\n      currentUser = JSON.parse(sessionStorage['currentUser']);\n    }\n\n    req = req.clone({\n      setHeaders: {\n        Authorization: 'Bearer ' + currentUser.token,\n      },\n    });\n    return next.handle(req);\n  }\n}\n","import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JwtUnAuthorizedInterceptorService implements HttpInterceptor {\n  constructor() {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      tap({\n        next: (event: HttpEvent<any>) => {},\n        error: (error: any) => {\n          if (error instanceof HttpErrorResponse) {\n            if (error.status == 401) {\n              console.log(error);\n              alert('401 UnAuthorized');\n            }\n          }\n        },\n      })\n    );\n  }\n}\n","export class LoginViewModel {\n    UserName: string = \"\";\n    Password: string = \"\";\n}\n","import { HttpBackend, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { LoginViewModel } from './login-view-model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { SignUpViewModel } from './sign-up-view-model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  private httpClient: HttpClient | null = null;\n  constructor(\n    private httpBackend: HttpBackend,\n    private jwtHelperService: JwtHelperService\n  ) {}\n\n  currentUserName: any = null;\n\n  public Login(loginViewModel: LoginViewModel): Observable<any>\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post<any>(\"/authenticate\", loginViewModel, { responseType: \"json\", observe: \"response\" })\n      .pipe(map(response =>\n      {\n        if (response)\n        {\n          this.currentUserName = response.body.userName;\n          sessionStorage['currentUser'] = JSON.stringify(response.body);\n          sessionStorage['XSRFRequestToken'] = response.headers.get(\"XSRF-REQUEST-TOKEN\");\n        }\n        return response.body;\n      }));\n  }\n\n  public Register(signUpViewModel: SignUpViewModel): Observable<any>\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post<any>(\"/register\", signUpViewModel, { responseType: \"json\", observe: \"response\" })\n      .pipe(map(response =>\n      {\n        if (response)\n        {\n          this.currentUserName = response.body.userName;\n          sessionStorage['currentUser'] = JSON.stringify(response.body);\n          sessionStorage['XSRFRequestToken'] = response.headers.get(\"XSRF-REQUEST-TOKEN\");\n        }\n        return response.body;\n      }));\n  }\n\n  getUserByEmail(Email: string): Observable<any>\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.get<any>(\"/api/getUserByEmail/\" + Email, { responseType: \"json\" });\n  }\n\n  public Logout()\n  {\n    sessionStorage.removeItem(\"currentUser\");\n    this.currentUserName = null;\n  }\n\n  public isAuthenticated(): boolean\n  {\n    var token = sessionStorage.getItem(\"currentUser\") ? JSON.parse(sessionStorage.getItem(\"currentUser\") as string).token : null;\n    if (this.jwtHelperService.isTokenExpired())\n    {\n      return false; //token is not valid\n    }\n    else\n    {\n      return true; //token is valid\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LoginViewModel } from '../login-view-model';\nimport { LoginService } from '../login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  loginViewModel: LoginViewModel = new LoginViewModel();\n  loginError: string = '';\n  constructor(private loginService: LoginService, private router: Router) {}\n\n  ngOnInit() {}\n  onLoginClick(event: any) {\n    this.loginService.Login(this.loginViewModel).subscribe({\n      next: (response) => {\n        this.router.navigate([\"/admin\",\"dashboard\"]);\n      },\n      error: (error) => {\n        console.log(error);\n        this.loginError = 'Invalid Username or Password';\n      },\n    });\n  }\n}\n","<form>\n    <div class=\"row\">\n      <div class=\"col-lg-6 col-xl-5 col-md-9 mx-auto\">\n        <div class=\"card mt-4\">\n          <div class=\"card-header bg-secondary text-white\">\n            <h3>Login</h3>\n            <div appAlert [error]= \"loginError\" *ngIf=\"loginError\"></div>\n          </div>\n          <div class=\"card-body\">\n            <div class=\"form-group form-row\">\n              <label for=\"UserName\" class=\"col-md-4 col-form-label\">Username</label>\n              <div class=\"col-md-8\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Username\" [(ngModel)]=\"loginViewModel.UserName\" name=\"UserName\" autofocus=\"autofocus\">\n              </div>\n            </div>\n  \n            <div class=\"form-group form-row\">\n              <label for=\"Password\" class=\"col-md-4 col-form-label\">Password</label>\n              <div class=\"col-md-8\">\n                <input type=\"password\" class=\"form-control\" placeholder=\"Password\" [(ngModel)]=\"loginViewModel.Password\" name=\"Password\">\n              </div>\n            </div>\n  \n          </div>\n  \n          <div class=\"card-footer text-right\">\n            <!-- <span class=\"text-danger\">{{loginError}}&nbsp;</span> -->\n            <button class=\"btn btn-primary\" (click)=\"onLoginClick($event)\">Login</button>\n            <!-- <div *appRepeater=\"5; let i\">\n              <a class=\"btn btn-primary\" data-toggle=\"collapse\" [href]=\" '#collapse' + i \" role=\"button\">Show Details</a>\n  \n              <div class=\"collapse\" [id]=\" 'collapse' + i\">\n                <div class=\"card card-body\">\n                  Actual details here\n                </div>\n              </div>\n            </div> -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>","import { Pipe, PipeTransform } from '@angular/core';\nimport { Project } from './project';\n\n@Pipe({\n  name: 'paging'\n})\nexport class PagingPipe implements PipeTransform {\n  transform(value: Project[], currentPageIndex: number, pageSize: number): any\n  {\n    if (value == null)\n    {\n      return value;\n    }\n\n    let resultArray = [];\n    for (let i = currentPageIndex * pageSize; i < (currentPageIndex + 1) * pageSize; i++)\n    {\n      if (value[i])\n      {\n        resultArray.push(value[i]);\n      }\n    }\n    return resultArray;\n  }\n}\n","import { Directive } from '@angular/core';\nimport { AbstractControl, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { ProjectsService } from './projects.service';\nimport { Observable, map } from 'rxjs';\nimport { Project } from './project';\n\n@Directive({\n  selector: '[appProjectIDUniqueValidator]',\n  providers: [ { provide: NG_ASYNC_VALIDATORS, useExisting: ProjectIDUniqueValidatorDirective, multi: true }]\n})\nexport class ProjectIDUniqueValidatorDirective {\n\n  constructor(private projectsService: ProjectsService) { }\n\n  validate(control: AbstractControl) : Observable<ValidationErrors | null>\n  {\n    return this.projectsService.getProjectByProjectID(control.value).pipe(map( (existingProject: Project) => {\n      if (existingProject != null)\n      {\n        return { uniqueProjectID: { valid: false }};\n      }\n      else\n      {\n        return null;\n      }\n    }));\n  }\n}\n","import { ClientLocation } from \"./client-location\";\n\nexport class Project \n{\n    projectID: number | any;\n    projectName: string | any;\n    dateOfStart: string | any;\n    teamSize: number | any;\n    active: boolean | any;\n    status: string | any;\n    clientLocationID: number | any;\n    clientLocation: ClientLocation | any;\n\n    constructor()\n    {\n        this.projectID = null;\n        this.projectName = null;\n        this.dateOfStart = null;\n        this.teamSize = null;\n        this.active = true;\n        this.status = null;\n        this.clientLocationID = null;\n        this.clientLocation = new ClientLocation();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable, map } from 'rxjs';\nimport { Project } from './project';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectsService {\n  public MySubject: BehaviorSubject<boolean>;\n\n  constructor(private httpClient: HttpClient) {\n    this.MySubject = new BehaviorSubject<boolean>(false);\n  }\n\n  //hideDetails:boolean = false;\n  toggleDetails(){\n    this.MySubject.next(!this.MySubject.value);\n  }\n\n  getAllProjects(): Observable<Project[]>{\n    \n    return this.httpClient.get<Project[]>(\"/api/projects\", {responseType:\"json\"})\n    .pipe(map((data:Project[])=>{\n      \n      return data;\n    }))\n  }\n\n  getProjectByProjectID(ProjectID: number): Observable<Project>\n  {\n    return this.httpClient.get<Project>(\"/api/projects/searchbyprojectid/\" + ProjectID, { responseType: \"json\" });\n  }\n\n  insertProject(newProject:Project):Observable<Project>{\n    // var requestHeaders = new HttpHeaders();\n    // requestHeaders = requestHeaders.set(\"X-XSRF-TOKEN\", sessionStorage['XSRFRequestToken']);\n    return this.httpClient.post<Project>(\"/api/projects\", newProject, { responseType:\"json\"})//headers: requestHeaders,\n  }\n\n  updateProject(existingProject:Project):Observable<Project>{\n    return this.httpClient.put<Project>(\"/api/projects\", existingProject, {responseType:\"json\"})\n  }\n\n  deleteProject(ProjectID: number): Observable<string>\n  {\n    return this.httpClient.delete<string>(\"/api/projects?ProjectID=\" + ProjectID);\n  }\n\n  SearchProjects(searchBy:string, searchText:string):Observable<Project[]>{\n    return this.httpClient.get<Project[]>(\"api/projects/search/\" + searchBy + \"/\" + searchText, {responseType:\"json\"} )  \n  }\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appRepeater]'\n})\nexport class RepeaterDirective {\n  @Input(\"appRepeater\") n: number = 0;\n\n  constructor(private viewContainerRef: ViewContainerRef, private templateRef: TemplateRef<any>) {\n    this.viewContainerRef.clear();\n  }\n\n  ngOnInit() {\n    for (let i = 0; i < this.n; i++) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef, { $implicit: i });\n    }\n  }\n\n}\n","import { HttpBackend, HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouterLoggerService {\n  private httpClient: HttpClient | any = null;\n  currentUserName: string | null = null;\n\n  constructor(private httpBackend: HttpBackend) {\n  }\n\n  public log(logMsg: string): Observable<any> {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post(\"/api/routerlogger\", { log: logMsg },\n      { headers: new HttpHeaders().set(\"content-type\", \"text/plain\") }\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Country } from '../country';\nimport { CountriesService } from '../countries.service';\nimport { CustomValidatorsService } from '../custom-validators.service';\nimport { LoginService } from '../login.service';\nimport { Router } from '@angular/router';\nimport { SignUpViewModel } from '../sign-up-view-model';\nimport { CanComponentDeactivate } from '../can-deactivate-guard.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss'],\n})\n\nexport class SignUpComponent implements OnInit , CanComponentDeactivate{\n  signUpForm: FormGroup | any = null;\n  genders = ['male', 'female'];\n  countries: Country[] = [];\n  registerError: string | null = null;\n canLeave:boolean = false;\n\n  constructor(\n    private countriesService: CountriesService,\n    private formBuilder: FormBuilder,\n    private customValidatorsService: CustomValidatorsService,\n    private loginService: LoginService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.countriesService.getCountries().subscribe((response) => {\n      this.countries = response;\n    });\n\n    this.signUpForm = this.formBuilder.group(\n      {\n        personName: this.formBuilder.group({\n          firstName: [null, [Validators.required, Validators.minLength(2)]],\n          lastName: [null, [Validators.required, Validators.minLength(2)]],\n        }),\n\n        email: [\n          null,\n          [Validators.required, Validators.email],\n          [this.customValidatorsService.DuplicateEmailValidator()],\n          { updateOn: 'blur' },\n        ],\n        mobile: [\n          null,\n          [Validators.required, Validators.pattern(/^[789]\\d{9}$/)],\n        ],\n        dateOfBirth: [\n          null,\n          [\n            Validators.required,\n            this.customValidatorsService.minimumAgeValidator(18),\n          ],\n        ],\n        password: [null, [Validators.required]],\n        confirmPassword: [null, [Validators.required]],\n        gender: [null, [Validators.required]],\n        countryID: [null, [Validators.required]],\n        receiveNewsLetters: [null],\n        skills: this.formBuilder.array([]),\n      },\n      {\n        validators: [\n          this.customValidatorsService.compareValidator(\n            'confirmPassword',\n            'password'\n          ),\n        ],\n      }\n    );\n\n    this.signUpForm.valueChanges.subscribe((value: any) => {\n      //console.log(value);\n      this.canLeave=false;\n    });\n  }\n\n  onSubmitClick() {\n    debugger;\n    //Display current form value\n    this.signUpForm['submitted'] = true;\n    console.log(this.signUpForm);\n\n    if (this.signUpForm.valid) {\n      var signUpVieModel = this.signUpForm.value as SignUpViewModel;\n      this.loginService.Register(signUpVieModel).subscribe({\n        next: (response) => {\n          this.canLeave = true;\n          this.router.navigate([\"/employee\",\"tasks\"]);\n        },\n        error: (error) => {\n          console.log(error);\n          this.registerError = 'Unable to submit';\n        },\n      });\n    }\n\n    //setValue\n    // this.signUpForm.setValue({\n    //   firstName: \"Adam\",\n    //   lastName: \"Smith\",\n    //   email: \"smith@gmail.com\",\n    //   mobile: \"9876543210\",\n    //   dateOfBirth: \"2020-01-01\",\n    //   gender: \"male\",\n    //   countryID: 3,\n    //   receiveNewsLetters: true\n    // });\n\n    //patchValue\n    // this.signUpForm.patchValue({\n    //   firstName: \"Adam\",\n    //   lastName: \"Smith\",\n    //   email: \"smith@gmail.com\"\n    // });\n\n    //reset\n    //this.signUpForm.reset();\n\n    //reset with Parameters\n    // this.signUpForm.reset({\n    //   firstName: \"Adam\",\n    //   lastName: \"Smith\",\n    //   email: \"smith@gmail.com\"\n    // });\n  }\n\n  onAddSkill() {\n    var formGroup = new FormGroup({\n      skillName: new FormControl(null, [Validators.required]),\n      skillLevel: new FormControl(null, [Validators.required]),\n    });\n\n    (<FormArray>this.signUpForm.get('skills')).push(formGroup);\n  }\n\n  onRemoveClick(index: number) {\n    (<FormArray>this.signUpForm.get('skills')).removeAt(index);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-8 col-xl-6 mx-auto\">\n\n    <form [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmitClick()\">\n\n      <div class=\"card mt-1\">\n        <div class=\"card-header\">\n          <h4>Sign Up</h4>\n        </div>\n\n        <div class=\"card-body\">\n\n          <div class=\"form-group form-row\" formGroupName=\"personName\">\n            <label for=\"firstName\" class=\"col-md-4 col-form-label\">First Name:</label>\n            <div class=\"col-md-8\">\n              <input type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"First Name\" class=\"form-control\" formControlName=\"firstName\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('personName.firstName').valid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted) && signUpForm.get('personName.firstName').errors?.required\">First name can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted) && signUpForm.get('personName.firstName').errors?.minlength\">First name should contain at least 2 characters</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\" formGroupName=\"personName\">\n            <label for=\"lastName\" class=\"col-md-4 col-form-label\">Last Name:</label>\n            <div class=\"col-md-8\">\n              <input type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"Last Name\" class=\"form-control\" formControlName=\"lastName\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('personName.lastName').valid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted) && signUpForm.get('personName.lastName').errors?.required\">Last name can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted) && signUpForm.get('personName.lastName').errors?.minlength\">Last name should contain at least 2 characters</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"email\" class=\"col-md-4 col-form-label\">Email:</label>\n            <div class=\"col-md-8\">\n              <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"Email\" class=\"form-control\" formControlName=\"email\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('email').valid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) && signUpForm.get('email').errors?.required\">Email can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) && signUpForm.get('email').errors?.email\">Email is invalid</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) && signUpForm.get('email').errors?.uniqueEmail\">Email already exists</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"mobile\" class=\"col-md-4 col-form-label\">Mobile:</label>\n            <div class=\"col-md-8\">\n              <input type=\"text\" name=\"mobile\" id=\"mobile\" placeholder=\"Mobile\" class=\"form-control\" formControlName=\"mobile\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('mobile').valid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted) && signUpForm.get('mobile').errors?.required\">Mobile can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted) && signUpForm.get('mobile').errors?.pattern\">Mobile is invalid</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"dateOfBirth\" class=\"col-md-4 col-form-label\">Date of Birth:</label>\n            <div class=\"col-md-8\">\n              <input type=\"date\" name=\"dateOfBirth\" id=\"dateOfBirth\" placeholder=\"Date of Birth\" class=\"form-control\" formControlName=\"dateOfBirth\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('dateOfBirth').valid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted) && signUpForm.get('dateOfBirth').errors?.required\">Date of Birth can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted) && signUpForm.get('dateOfBirth').errors?.minAge\">Minimum Age must be 18</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"password\" class=\"col-md-4 col-form-label\">Password:</label>\n            <div class=\"col-md-8\">\n              <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" class=\"form-control\" formControlName=\"password\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('password').invalid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('password').valid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('password').invalid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted) && signUpForm.get('password').errors?.required\">Password can't be blank</span>\n            </div>\n          </div>\n\n\n          <div class=\"form-group form-row\">\n            <label for=\"confirmPassword\" class=\"col-md-4 col-form-label\">Confirm Password:</label>\n            <div class=\"col-md-8\">\n              <input type=\"password\" name=\"confirmPassword\" id=\"confirmPassword\" placeholder=\"Confirm Password\" class=\"form-control\" formControlName=\"confirmPassword\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('confirmPassword').invalid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('confirmPassword').valid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('confirmPassword').invalid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted) && signUpForm.get('confirmPassword').errors?.required\">Confirm Password can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.invalid && (signUpForm.dirty || signUpForm.touched || signUpForm.submitted) && signUpForm.errors?.compareValidator\">Password and Confirm Password do not match</span>\n            </div>\n          </div>\n\n\n          <div class=\"form-group form-row\">\n            <label class=\"col-md-4 col-form-label\">Gender:</label>\n            <div class=\"col-md-8\">\n\n              <div class=\"form-check-label form-check-inline\" *ngFor=\"let gender of genders\">\n                <input type=\"radio\" name=\"gender\" [id]=\"gender\" [value]=\"gender\" class=\"form-check-input\" formControlName=\"gender\">\n                <label [for]=\"gender\" class=\"form-check-label\">{{gender}}</label>\n              </div>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('gender').invalid && (signUpForm.get('gender').dirty || signUpForm.get('gender').touched || signUpForm.submitted) && signUpForm.get('gender').errors?.required\">Please select gender</span>\n\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"countryID\" class=\"col-md-4 col-form-label\">Country:</label>\n            <div class=\"col-md-8\">\n              <select name=\"countryID\" id=\"countryID\" class=\"form-control\" formControlName=\"countryID\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('countryID').invalid && (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('countryID').valid && (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted) }\">\n                <option value=\"null\">Please Select</option>\n                <option *ngFor=\"let country of countries\" [value]=\"country.countryID\">\n                  {{country.countryName}}\n                </option>\n              </select>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('countryID').invalid && (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted) && signUpForm.get('countryID').errors?.required\">Please select country</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label class=\"col-md-4 col-form-label\"></label>\n            <div class=\"col-md-8\">\n              <input type=\"checkbox\" name=\"receiveNewsLetters\" id=\"receiveNewsLetters\" value=\"true\" class=\"form-check-input\" formControlName=\"receiveNewsLetters\">\n              <label for=\"receiveNewsLetters\" class=\"form-check-label\">Receive News Letters</label>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label class=\"col-md-4 col-form-label\">Skills:</label>\n            <div class=\"col-md-8\" formArrayName=\"skills\">\n              <div class=\"row\" *ngFor=\"let skill of signUpForm.get('skills').controls; let i = index\" [formGroupName]=\"i\">\n\n                <div class=\"col-5\">\n                  <input type=\"text\" name=\"skillName\" id=\"skillName\" placeholder=\"Skill Name\" formControlName=\"skillName\" class=\"form-control\" [ngClass]=\"{\n                    'is-invalid': skill.get('skillName').invalid && (skill.get('skillName').dirty || skill.get('skillName').touched || signUpForm.submitted),\n    \n                    'is-valid': skill.get('skillName').valid && (skill.get('skillName').dirty || skill.get('skillName').touched || signUpForm.submitted) }\">\n                </div>\n\n                <div class=\"col-4\">\n                  <select name=\"level\" id=\"level\" formControlName=\"skillLevel\" class=\"form-control\" [ngClass]=\"{\n                    'is-invalid': skill.get('skillLevel').invalid && (skill.get('skillLevel').dirty || skill.get('skillLevel').touched || signUpForm.submitted),\n    \n                    'is-valid': skill.get('skillLevel').valid && (skill.get('skillLevel').dirty || skill.get('skillLevel').touched || signUpForm.submitted) }\">\n                    <option value=\"null\">Please Select</option>\n                    <option value=\"Beginner\">Beginner</option>\n                    <option value=\"Intermediate\">Intermediate</option>\n                    <option value=\"Professional\">Professional</option>\n                    <option value=\"Expert\">Expert</option>\n                  </select>\n                </div>\n\n                <div class=\"col-3\">\n                  <button class=\"btn btn-danger\" type=\"button\" (click)=\"onRemoveClick(i)\">Remove</button>\n                </div>\n              </div>\n\n              <button class=\"btn btn-primary\" type=\"button\" (click)=\"onAddSkill()\">Add Skill</button>\n            </div>\n\n          </div>\n\n          <!-- {{signUpForm.value | json}} -->\n        </div>\n\n        <div class=\"card-footer\">\n          <button class=\"btn btn-success float-right\">Create Account</button>\n          <div class=\"text-danger\">{{registerError}}</div>\n        </div>\n\n      </div>\n\n    </form>\n  </div>\n</div>","import { Directive, Input } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\n\n@Directive({\n  selector: '[appTeamSizeValidator]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: TeamSizeValidatorDirective, multi: true }]\n})\nexport class TeamSizeValidatorDirective implements Validator{\n\n  constructor() { }\n\n  @Input(\"appTeamSizeValidator\") n: number | any = 0;\n\n  validate(control: AbstractControl): ValidationErrors | null\n  {\n    let currentValue = control.value;\n    let isValid = currentValue % this.n == 0;\n\n    if (isValid)\n    {\n      return null; //valid\n    }\n    else\n    {\n      return { divisible: { valid: false } }; //indicates invalid\n    }\n  }\n}\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["trigger","transition","query","style","animate","group","fadeAnimation","position","width","optional","opacity","AboutComponent","selectors","decls","vars","template","AboutComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","CommonModule","RouterModule","DashboardComponent","ProjectsComponent","ProjectDetailsComponent","routes","path","data","expectedRole","children","component","AdminRoutingModule","forChild","imports","i1","exports","MyProfileComponent","DashboardService","FormsModule","TeamSizeValidatorDirective","ClientLocationStatusValidatorDirective","ProjectIDUniqueValidatorDirective","ProjectComponent","CheckBoxPrinterComponent","FilterPipe","PagingPipe","AdminModule","declarations","constructor","isChecked","ngOnInit","check","unCheck","consts","CheckBoxPrinterComponent_Template","ɵɵlistener","CheckBoxPrinterComponent_Template_input_ngModelChange_1_listener","$event","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate","client_r5","DashboardComponent_a_56_Template_a_click_0_listener","ɵɵrestoreView","_r8","ctx_r7","ɵɵnextContext","ɵɵresetView","onProjectChange","project_r6","year_r9","teammembersummary_r10","Region","TeamMembersCount","TemporarilyUnavailableMembers","member_r14","ID","Name","ɵɵstyleProp","Status","ɵɵtemplate","DashboardComponent_div_103_tr_17_Template","ɵɵattribute","i_r12","ɵɵtextInterpolate1","teammember_r11","Members","dashboardService","Designation","Username","NoOfTeamMembers","TotalCostOfAllProjects","PendingTasks","UpComingProjects","ProjectCost","CurrentExpenditure","AvailableFunds","Clients","Projects","Years","TeamMembersSummary","TeamMembers","ToDay","Date","i","push","getTeamMembersSummary","target","innerHTML","trim","ɵɵdirectiveInject","DashboardComponent_Template","ɵɵelement","DashboardComponent_li_46_Template","DashboardComponent_a_56_Template","DashboardComponent_a_62_Template","DashboardComponent_tr_96_Template","DashboardComponent_div_103_Template","ɵɵpipeBind2","ɵɵpipeBind1","MyProfileComponent_Template","Project","activatedRoute","projectsService","routeParmsSubscription","project","params","subscribe","pid","getProjectByProjectID","proj","ngOnDestroy","unsubscribe","ActivatedRoute","i2","ProjectsService","ProjectDetailsComponent_Template","projectID","projectName","dateOfStart","teamSize","clientLocation","clientLocationName","status","ɵɵpureFunction0","_c0","EventEmitter","editClick","deleteClick","hideDetails","selectionBoxes","MySubscription","MySubject","hide","onEditClick","event","emit","onDeleteClick","isAllCheckedChange","b","selectionBox","toArray","length","contentQueries","ProjectComponent_ContentQueries","dirIndex","ɵɵprojection","ProjectComponent_Template_button_click_33_listener","ProjectComponent_Template_button_click_36_listener","ɵɵpureFunction1","_c1","$","ProjectsComponent_div_34_Template_app_project_editClick_1_listener","restoredCtx","_r51","i_r47","index","ctx_r50","ProjectsComponent_div_34_Template_app_project_deleteClick_1_listener","ctx_r52","project_r46","ProjectsComponent_li_40_Template_li_click_0_listener","_r55","page_r53","$implicit","ctx_r54","onPageIndexClicked","pageIndex","_c4","ctx_r2","currentPageIndex","clientLocation_r56","clientLocationID","clientLocation_r57","projectService","clientLocationsService","projects","clientLocations","showLoading","newProject","editProject","editIndex","deleteProject","deleteIndex","searchBy","searchText","pages","pageSize","newForm","editForm","isAllChecked","projs","prjID","getAllProjects","next","response","calculateNoOfPages","error","console","log","alert","getClientLocations","filterPipe","resultProjects","transform","noOfPages","Math","ceil","onNewClick","resetForm","setTimeout","nativeElement","focus","onSaveClick","valid","insertProject","p","active","split","reverse","join","onUpdateClick","updateProject","onDeleteConfirmClick","splice","onSearchClick","onSearchTextKeyup","onHideShowDetails","toggleDetails","ClientLocationsService","viewQuery","ProjectsComponent_Query","ProjectsComponent_i_2_Template","ProjectsComponent_Template_button_click_7_listener","ProjectsComponent_Template_button_click_10_listener","ProjectsComponent_Template_input_ngModelChange_13_listener","ProjectsComponent_Template_input_change_13_listener","ProjectsComponent_Template_select_ngModelChange_18_listener","ProjectsComponent_Template_input_ngModelChange_31_listener","ProjectsComponent_Template_input_keyup_31_listener","ProjectsComponent_div_34_Template","ProjectsComponent_li_40_Template","ProjectsComponent_Template_input_ngModelChange_57_listener","ProjectsComponent_span_60_Template","ProjectsComponent_span_61_Template","ProjectsComponent_span_62_Template","ProjectsComponent_Template_input_ngModelChange_67_listener","ProjectsComponent_span_69_Template","ProjectsComponent_span_70_Template","ProjectsComponent_span_71_Template","ProjectsComponent_Template_input_ngModelChange_76_listener","ProjectsComponent_span_78_Template","ProjectsComponent_Template_input_ngModelChange_83_listener","ProjectsComponent_span_85_Template","ProjectsComponent_span_86_Template","ProjectsComponent_Template_input_ngModelChange_92_listener","ProjectsComponent_Template_input_ngModelChange_100_listener","ProjectsComponent_Template_input_ngModelChange_105_listener","ProjectsComponent_span_109_Template","ProjectsComponent_Template_select_ngModelChange_114_listener","ProjectsComponent_option_118_Template","ProjectsComponent_span_119_Template","ProjectsComponent_span_120_Template","ProjectsComponent_Template_button_click_124_listener","ProjectsComponent_Template_input_ngModelChange_142_listener","ProjectsComponent_span_144_Template","ProjectsComponent_span_145_Template","ProjectsComponent_span_146_Template","ProjectsComponent_Template_input_ngModelChange_151_listener","ProjectsComponent_span_153_Template","ProjectsComponent_span_154_Template","ProjectsComponent_span_155_Template","ProjectsComponent_Template_input_ngModelChange_160_listener","ProjectsComponent_span_162_Template","ProjectsComponent_Template_input_ngModelChange_167_listener","ProjectsComponent_span_169_Template","ProjectsComponent_span_170_Template","ProjectsComponent_Template_input_ngModelChange_176_listener","ProjectsComponent_Template_input_ngModelChange_184_listener","ProjectsComponent_Template_input_ngModelChange_189_listener","ProjectsComponent_span_193_Template","ProjectsComponent_Template_select_ngModelChange_198_listener","ProjectsComponent_option_202_Template","ProjectsComponent_span_203_Template","ProjectsComponent_span_204_Template","ProjectsComponent_Template_button_click_208_listener","ProjectsComponent_Template_input_ngModelChange_227_listener","ProjectsComponent_Template_input_ngModelChange_232_listener","ProjectsComponent_Template_button_click_236_listener","ɵɵpipeBind3","ɵɵpureFunction2","_c5","_r4","invalid","dirty","touched","_r3","submitted","errors","_r9","_r13","_r15","_r18","_r21","_r26","_r25","_r30","_r34","_r36","_r39","_r42","AlertDirective","elementRef","renderer2","title","divElement","createElement","setAttribute","setStyle","spanElement","spanText","createText","appendChild","onMouseEnter","onMouseLeave","ElementRef","Renderer2","hostVars","hostBindings","AlertDirective_HostBindings","AlertDirective_mouseleave_HostBindingHandler","LoginComponent","SignUpComponent","redirectTo","pathMatch","AppRoutingModule","forRoot","useHash","enableTracing","NavigationEnd","loginService","currentUserName","AppComponent_li_13_Template_a_click_1_listener","Logout","_c2","_c3","AppComponent","routerLoggerService","router","ngOnIntIt","events","userName","logMsg","toLocaleString","url","getState","outlet","isActivated","snapshot","LoginService","RouterLoggerService","i3","Router","AppComponent_Template","AppComponent_li_7_Template","AppComponent_li_11_Template","AppComponent_li_12_Template","AppComponent_li_13_Template","AppComponent_li_14_Template","AppComponent_li_15_Template","_r6","BrowserModule","JwtModule","BrowserAnimationsModule","HTTP_INTERCEPTORS","HttpClientModule","ReactiveFormsModule","JwtInterceptorService","JwtUnAuthorizedInterceptorService","RepeaterDirective","EmployeeModule","AppModule","bootstrap","provide","useClass","multi","config","tokenGetter","sessionStorage","getItem","JSON","parse","token","NG_VALIDATORS","validate","control","isValid","value","ClientLocation","clientLocationStatus","features","ɵɵProvidersFeature","useExisting","httpClient","get","responseType","ɵɵinject","HttpClient","factory","ɵfac","providedIn","CountriesService","getCountries","map","CustomValidatorsService","minimumAgeValidator","minAge","today","dateOfBirth","diffMilliSeconds","abs","getTime","diffYears","compareValidator","controlToValidate","controlToCompare","formGroup","setErrors","DuplicateEmailValidator","getUserByEmail","pipe","existingUser","uniqueEmail","TasksComponent","EmployeeRoutingModule","TasksComponent_Template","resultArray","item","String","toLowerCase","indexOf","pure","intercept","req","currentUser","clone","setHeaders","Authorization","handle","HttpErrorResponse","tap","LoginViewModel","UserName","Password","httpBackend","jwtHelperService","Login","loginViewModel","post","observe","body","stringify","headers","Register","signUpViewModel","Email","removeItem","isAuthenticated","isTokenExpired","HttpBackend","JwtHelperService","ctx_r0","loginError","onLoginClick","navigate","LoginComponent_Template","LoginComponent_div_7_Template","LoginComponent_Template_input_ngModelChange_13_listener","LoginComponent_Template_input_ngModelChange_18_listener","LoginComponent_Template_button_click_20_listener","NG_ASYNC_VALIDATORS","existingProject","uniqueProjectID","BehaviorSubject","ProjectID","put","delete","SearchProjects","viewContainerRef","templateRef","n","clear","createEmbeddedView","ViewContainerRef","TemplateRef","inputs","HttpHeaders","set","FormControl","FormGroup","Validators","gender_r19","country_r20","countryID","countryName","SignUpComponent_div_82_Template_button_click_16_listener","_r24","i_r22","ctx_r23","onRemoveClick","skill_r21","ctx_r18","signUpForm","countriesService","formBuilder","customValidatorsService","genders","countries","registerError","canLeave","personName","firstName","required","minLength","lastName","email","updateOn","mobile","pattern","password","confirmPassword","gender","receiveNewsLetters","skills","array","validators","valueChanges","onSubmitClick","signUpVieModel","onAddSkill","skillName","skillLevel","removeAt","FormBuilder","i4","i5","SignUpComponent_Template","SignUpComponent_Template_form_ngSubmit_2_listener","SignUpComponent_span_13_Template","SignUpComponent_span_14_Template","SignUpComponent_span_20_Template","SignUpComponent_span_21_Template","SignUpComponent_span_27_Template","SignUpComponent_span_28_Template","SignUpComponent_span_29_Template","SignUpComponent_span_35_Template","SignUpComponent_span_36_Template","SignUpComponent_span_42_Template","SignUpComponent_span_43_Template","SignUpComponent_span_49_Template","SignUpComponent_span_55_Template","SignUpComponent_span_56_Template","SignUpComponent_div_61_Template","SignUpComponent_span_62_Template","SignUpComponent_option_70_Template","SignUpComponent_span_71_Template","SignUpComponent_div_82_Template","SignUpComponent_Template_button_click_83_listener","minlength","controls","currentValue","divisible","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}