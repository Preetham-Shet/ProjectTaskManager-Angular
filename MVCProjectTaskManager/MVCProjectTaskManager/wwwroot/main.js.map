{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/admin/about/about.component.ts","./src/app/admin/about/about.component.html","./src/app/admin/admin.module.ts","./src/app/admin/check-box-printer/check-box-printer.component.ts","./src/app/admin/check-box-printer/check-box-printer.component.html","./src/app/admin/dashboard/dashboard.component.ts","./src/app/admin/dashboard/dashboard.component.html","./src/app/admin/my-profile/my-profile.component.ts","./src/app/admin/my-profile/my-profile.component.html","./src/app/admin/project/project.component.ts","./src/app/admin/project/project.component.html","./src/app/admin/projects/projects.component.ts","./src/app/admin/projects/projects.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/client-location-status-validator.directive.ts","./src/app/client-location.ts","./src/app/client-locations.service.ts","./src/app/countries.service.ts","./src/app/custom-validators.service.ts","./src/app/dashboard.service.ts","./src/app/jwt-interceptor.service.ts","./src/app/jwt-un-authorized-interceptor.service.ts","./src/app/login-view-model.ts","./src/app/login.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/project-idunique-validator.directive.ts","./src/app/project.ts","./src/app/projects.service.ts","./src/app/sign-up/sign-up.component.ts","./src/app/sign-up/sign-up.component.html","./src/app/tasks/tasks.component.ts","./src/app/tasks/tasks.component.html","./src/app/team-size-validator.directive.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent {\n\n}\n","<p>about works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AboutComponent } from './about/about.component';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\nimport { DashboardService } from '../dashboard.service';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { FormsModule } from '@angular/forms';\nimport { TeamSizeValidatorDirective } from '../team-size-validator.directive';\nimport { ClientLocationStatusValidatorDirective } from '../client-location-status-validator.directive';\nimport { ProjectIDUniqueValidatorDirective } from '../project-idunique-validator.directive';\nimport { ProjectComponent } from './project/project.component';\nimport { CheckBoxPrinterComponent } from './check-box-printer/check-box-printer.component';\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    AboutComponent,\n    MyProfileComponent,\n    ProjectsComponent,\n    TeamSizeValidatorDirective,\n    ClientLocationStatusValidatorDirective,\n    ProjectIDUniqueValidatorDirective,\n    ProjectComponent,\n    CheckBoxPrinterComponent\n  ],\n  imports: [CommonModule, FormsModule],\n  exports: [\n    DashboardComponent,\n    AboutComponent,\n    MyProfileComponent,\n    ProjectsComponent,\n    TeamSizeValidatorDirective,\n    ClientLocationStatusValidatorDirective,\n    ProjectIDUniqueValidatorDirective,\n    ProjectComponent\n  ],\n  providers: [DashboardService],\n})\nexport class AdminModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-check-box-printer',\n  templateUrl: './check-box-printer.component.html',\n  styleUrls: ['./check-box-printer.component.scss']\n})\nexport class CheckBoxPrinterComponent implements OnInit {\n  isChecked: boolean = false;\n\n  constructor() { }\n\n  ngOnInit()\n  {\n  }\n\n  check()\n  {\n    this.isChecked = true;\n  }\n\n  unCheck()\n  {\n    this.isChecked = false;\n  }\n}\n","<div>\n    <input type=\"checkbox\" value=\"true\" name=\"isChecked\" id=\"isChecked\" [(ngModel)]=\"isChecked\">\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { DashboardService } from 'src/app/dashboard.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit\n{\n  Designation: string = \"\";\n  Username: string = \"\";\n  NoOfTeamMembers: number = 0;\n  TotalCostOfAllProjects: number = 0;\n  PendingTasks: number = 0;\n  UpComingProjects: number = 0;\n  ProjectCost: number = 0;\n  CurrentExpenditure: number = 0;\n  AvailableFunds: number = 0;\n  ToDay !: Date;\n\n  Clients: string[] = [];\n  Projects: string[] = [];\n  Years: number[] = [];\n  TeamMembersSummary: any = [];\n  TeamMembers: any = [];\n\nconstructor(private dashboardService:DashboardService){}\n\n  ngOnInit()\n  {\n    this.Designation = 'Team Leader';\n    this.Username = 'Scott Smith';\n    this.NoOfTeamMembers = 67;\n    this.TotalCostOfAllProjects = 240;\n    this.PendingTasks = 15;\n    this.UpComingProjects = 2;\n    this.ProjectCost = 2113507;\n    this.CurrentExpenditure = 96788;\n    this.AvailableFunds = 52536;\n    this.ToDay=new Date();\n    \n    this.Clients = [\n      'ABC Infotech Ltd.',\n      'DEF Software Solutions',\n      'GHI Industries',\n    ];\n\n    this.Projects = ['Project A', 'Project B', 'Project C', 'Project D'];\n\n    for (var i = 2019; i >= 2010; i--)\n    {\n      this.Years.push(i);\n    }\n\n    this.TeamMembersSummary = this.dashboardService.getTeamMembersSummary();\n\n    this.TeamMembers = [\n      {\n        Region: 'East',\n        Members: [\n          { ID: 1, Name: 'Ford', Status: 'Available' },\n          { ID: 2, Name: 'Miller', Status: 'Available' },\n          { ID: 3, Name: 'Jones', Status: 'Busy' },\n          { ID: 4, Name: 'James', Status: 'Busy' },\n        ],\n      },\n      {\n        Region: 'West',\n        Members: [\n          { ID: 5, Name: 'Anna', Status: 'Available' },\n          { ID: 6, Name: 'Arun', Status: 'Available' },\n          { ID: 7, Name: 'Varun', Status: 'Busy' },\n          { ID: 8, Name: 'Jasmine', Status: 'Busy' },\n        ],\n      },\n      {\n        Region: 'South',\n        Members: [\n          { ID: 9, Name: 'Krishna', Status: 'Available' },\n          { ID: 10, Name: 'Mohan', Status: 'Available' },\n          { ID: 11, Name: 'Raju', Status: 'Busy' },\n          { ID: 12, Name: 'Farooq', Status: 'Busy' },\n        ],\n      },\n      {\n        Region: 'North',\n        Members: [\n          { ID: 13, Name: 'Jacob', Status: 'Available' },\n          { ID: 14, Name: 'Smith', Status: 'Available' },\n          { ID: 15, Name: 'Jones', Status: 'Busy' },\n          { ID: 16, Name: 'James', Status: 'Busy' },\n        ],\n      },\n    ];\n  }\n\n  onProjectChange($event:any){if ($event.target.innerHTML.trim() == 'Project A')\n  {\n    this.ProjectCost = 2113507;\n    this.CurrentExpenditure = 96788;\n    this.AvailableFunds = 52436;\n  } else if ($event.target.innerHTML.trim() == 'Project B')\n  {\n    this.ProjectCost = 88923;\n    this.CurrentExpenditure = 22450;\n    this.AvailableFunds = 2640;\n  } else if ($event.target.innerHTML.trim() == 'Project C')\n  {\n    this.ProjectCost = 662183;\n    this.CurrentExpenditure = 7721;\n    this.AvailableFunds = 9811;\n  } else if ($event.target.innerHTML.trim() == 'Project D')\n  {\n    this.ProjectCost = 928431;\n    this.CurrentExpenditure = 562;\n    this.AvailableFunds = 883;\n  }}\n}\n","<nav>\n    <ol class=\"breadcrumb\">\n      <li class=\"breadcrumb-item\"><a routerLink=\"/\">Home</a></li>\n      <li class=\"breadcrumb-item active\">Dashboard</li>\n    </ol>\n  </nav>\n  \n  <h5>Dashboard</h5>\n  <h6>{{ToDay | date:\"d/M/y\"}}</h6>\n  <div class=\"row\">\n    <div class=\"col-lg-3 pb-3\" style=\"background-color: #e9e6e6\">\n      <div class=\"row\">\n        <div\n          class=\"col-11 text-white text-center mx-auto rounded pt-2 pb-2 font-weight-bold\"\n          style=\"\n            background-color: #a39e9e;\n            font-family: 'Arial Narrow Bold', sans-serif;\n          \"\n        >\n          {{ Designation | uppercase}}\n        </div>\n        <div class=\"col-12 text-center mt-2\">\n          <img src=\"assets/user.png\" width=\"120px\" />\n        </div>\n        <div\n          class=\"col-12 text-center pt-2 pb-2 font-weight-bold\"\n          style=\"font-family: Tahoma\"\n        >\n          {{ Username }}\n        </div>\n        <div class=\"col-12 text-center pt-2 pb-2\" style=\"font-family: Arial\">\n          TEAM SUMMARY\n        </div>\n        <div class=\"col-12 mb-3\">\n          <ul class=\"list-group\">\n            <li\n              class=\"list-group-item d-flex justify-content-between align-items-center\"\n            >\n              NO. OF TEAM MEMBERS\n              <span\n                class=\"badge badge-secondary badge-pill\"\n                style=\"font-size: 13px\"\n                >{{ NoOfTeamMembers }}</span\n              >\n            </li>\n            <li\n              class=\"list-group-item d-flex justify-content-between align-items-center\"\n            >\n              TOTAL COST OF ALL PROJECTS\n              <span\n                class=\"badge badge-secondary badge-pill\"\n                style=\"font-size: 13px\"\n                >$ {{ TotalCostOfAllProjects }} k</span\n              >\n            </li>\n            <li\n              class=\"list-group-item d-flex justify-content-between align-items-center\"\n            >\n              PENDING TASKS\n              <span\n                class=\"badge badge-secondary badge-pill\"\n                style=\"font-size: 13px\"\n                >{{ PendingTasks }}</span\n              >\n            </li>\n            <li\n              class=\"list-group-item d-flex justify-content-between align-items-center\"\n            >\n              UPCOMING PROJECTS\n              <span\n                class=\"badge badge-secondary badge-pill\"\n                style=\"font-size: 13px\"\n                >{{ UpComingProjects }}</span\n              >\n            </li>\n          </ul>\n        </div>\n        <div\n          class=\"col-12 text-center pt-2 pb-2\"\n          style=\"font-family: 'Arial Narrow'\"\n        >\n          CLIENTS\n        </div>\n        <div class=\"col-12\">\n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\" *ngFor=\"let client of Clients\">{{client}}</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-lg-6\">\n      <div class=\"row\">\n        <div class=\"col-12 pt-0 pb-2\" style=\"background-color: #e9e6e6\">\n          <div class=\"row mt-2\">\n            <div class=\"col-6 text-left\">\n              <div class=\"dropdown\">\n                <button\n                  class=\"btn btn-secondary dropdown-toggle\"\n                  type=\"button\"\n                  id=\"dropdownMenuButton1\"\n                  data-toggle=\"dropdown\"\n                >\n                  Project A\n                </button>\n                <div class=\"dropdown-menu\">\n                  <a class=\"dropdown-item\" href=\"#\" *ngFor=\"let project of Projects\" onclick=\"return false\"\n                  (click)=\"onProjectChange($event)\"\n                  >{{project}}</a></div>\n              </div>\n            </div>\n            <div class=\"col-6 text-right\">\n              <div class=\"dropdown\">\n                <button\n                  class=\"btn btn-secondary dropdown-toggle\"\n                  type=\"button\"\n                  id=\"dropdownMenuButton2\"\n                  data-toggle=\"dropdown\"\n                >\n                  2019\n                </button>\n                <div class=\"dropdown-menu\">\n                  <a class=\"dropdown-item\" href=\"#\" *ngFor=\"let year of Years\" onclick=\"return false\">{{year}}</a>                  \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div\n          class=\"col-11 mx-auto mt-1 text-white text-center pt-2 pb-2 mx-auto rounded font-weight-bold\"\n          style=\"background-color: #718d97; font-family: 'Arial Narrow'\"\n        >\n          PROJECT BRIEFING\n        </div>\n        <div class=\"col-12\">\n          <table class=\"table table-borderless\">\n            <tr>\n              <td>Project Cost</td>\n              <td>{{ ProjectCost |currency:\"USD\"}}</td>\n            </tr>\n            <tr>\n              <td>Current Expenditure</td>\n              <td>{{ CurrentExpenditure|currency:\"USD\" }}</td>\n            </tr>\n            <tr>\n              <td>Available Funds</td>\n              <td>{{ AvailableFunds |currency:\"USD\"}}</td>\n            </tr>\n          </table>\n        </div>\n        <div\n          class=\"col-11 mx-auto mt-1 text-white text-center pt-2 pb-2 mx-2 rounded font-weight-bold\"\n          style=\"background-color: #718d97; font-family: 'Arial Narrow'\"\n        >\n          TEAM MEMBERS SUMMARY\n        </div>\n        <div class=\"col-12\">\n          <table class=\"table\">\n            <tr>\n              <th>Region</th>\n              <th>Team Members Count</th>\n              <th>Temporarily Unavailable Members</th>\n            </tr>\n            <tr *ngFor=\"let teammembersummary of TeamMembersSummary\">\n              <td>\n                <b>{{teammembersummary.Region}}</b>\n              </td>\n              <td>{{teammembersummary.TeamMembersCount}}</td>\n              <td>{{teammembersummary.TemporarilyUnavailableMembers}}</td>\n            </tr>\n           \n          </table>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-lg-3\" style=\"background-color: #e9e6e6\">\n      <div class=\"row\">\n        <div\n          class=\"col-11 mx-auto mt-1 text-white text-center pt-1 pb-2 mx-2 rounded font-weight-bold\"\n          style=\"background-color: #718d97; font-family: 'Arial Narrow'\"\n        >\n          TEAM MEMBERS\n        </div>\n        <div class=\"col-lg-12 pt-2\">\n          <div class=\"accordion\" id=\"accordion1\">\n            <!-- east starts -->\n            <div class=\"card\" *ngFor=\"let teammember of TeamMembers; let i=index\">\n              <div class=\"card-header bg-secondary\" id=\"card1\">\n                <h2 class=\"mb-0\">\n                  <button\n                    class=\"btn btn-link text-white\"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    [attr.data-target]=\"'#cardbody'+i\"\n                  >\n                    {{teammember.Region}}\n                  </button>\n                </h2>\n              </div>\n              <div [id]=\"'cardbody'+i\" class=\"collapse\" data-parent=\"#accordion1\" [ngClass]=\"(i==0)?'show':''\">\n                <div class=\"card-body\">\n                  <table class=\"table\">\n                    <thead>\n                      <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Status</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr *ngFor=\"let member of teammember.Members\">\n                        <td>{{member.ID}}</td>\n                        <td>{{member.Name}}</td>\n                        <td [style.color]=\"(member.Status=='Busy')?'red':'black'\" >{{member.Status}}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n           \n          </div>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.scss']\n})\nexport class MyProfileComponent {\n\n}\n","<p>my-profile works!</p>\n","import { Component, ContentChildren, EventEmitter, Input, OnInit, Output, QueryList } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Project } from 'src/app/project';\nimport { ProjectsService } from 'src/app/projects.service';\nimport { CheckBoxPrinterComponent } from '../check-box-printer/check-box-printer.component';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.scss']\n})\nexport class ProjectComponent implements OnInit {\n\n  @Input(\"currentProject\") project !: Project;\n  @Input(\"recordIndex\") i !: number;\n\n  @Output() editClick = new EventEmitter();\n  @Output() deleteClick = new EventEmitter();\n\n  MySubscription: Subscription | any;\n  \n  hideDetails: boolean = false;\n\n  constructor(public projectsService:ProjectsService){}\n  ngOnInit(): void {\n    this.MySubscription = this.projectsService.MySubject.subscribe((hide) => {\n      this.hideDetails = hide;\n    });\n  }\n\n  onEditClick(event: any, i: number)\n  {\n    this.editClick.emit({event, i})\n  }\n\n  onDeleteClick(event: any, i: number)\n  {\n    this.deleteClick.emit({event, i})\n  }\n\n  ngOnDestroy()\n  {\n    this.MySubscription.unsubscribe();\n  }\n\n  @ContentChildren(\"selectionBox\") selectionBoxes: QueryList<CheckBoxPrinterComponent> | any = null;\n\n  isAllCheckedChange(b: boolean)\n  {\n    let selectionBox = this.selectionBoxes.toArray();\n    if (b)\n    {\n      for (let i = 0; i < selectionBox.length; i++)\n      {\n        selectionBox[i].check();\n      }\n    }\n    else\n    {\n      for (let i = 0; i < selectionBox.length; i++)\n      {\n        selectionBox[i].unCheck();\n      }\n    }\n  }\n}\n","<div class=\"card card-primary\">\n\n  <div class=\"card-header\">\n    <div class=\"row\">\n      <div class=\"col-11\">\n        <div>#{{project.projectID}}</div>\n        <h5>{{project.projectName}}</h5>\n      </div>\n      <div class=\"col-1\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"card-body\">\n    <table class=\"table table-borderless\" [hidden]=\"hideDetails\">\n      <tr>\n        <th>Date of Start</th>\n        <td>{{project.dateOfStart}}</td>\n      </tr>\n      <tr>\n        <th>Team Size</th>\n        <td>{{project.teamSize}}</td>\n      </tr>\n      <tr>\n        <th>Client Location</th>\n        <td>{{project.clientLocation?.clientLocationName}}</td>\n      </tr>\n      <tr>\n        <th>Status</th>\n        <td>{{project.status}}</td>\n      </tr>\n    </table>\n  </div>\n\n  <div class=\"card-footer\">\n    <button class=\"btn btn-info\" (click)=\"onEditClick($event, i)\" data-toggle=\"modal\" data-target=\"#editModal\">Edit</button>&nbsp;\n    <button class=\"btn btn-warning\" (click)=\"onDeleteClick($event, i)\" data-toggle=\"modal\" data-target=\"#deleteModal\">Delete</button>\n  </div>\n</div>","import { Component, ElementRef, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ClientLocation } from 'src/app/client-location';\nimport { ClientLocationsService } from 'src/app/client-locations.service';\nimport { Project } from 'src/app/project';\nimport { ProjectsService } from 'src/app/projects.service';\nimport * as $ from 'jquery';\nimport { ProjectComponent } from '../project/project.component';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss'],\n})\n\nexport class ProjectsComponent implements OnInit {\n  projects: Project[] = [];\n  clientLocations: ClientLocation[] = [];\n  showLoading: boolean = true;\n\n  newProject: Project = new Project();\n  editProject: Project = new Project();\n  editIndex: any = null;\n  deleteProject: Project = new Project();\n  deleteIndex: any = null;\n  searchBy: string = 'ProjectName';\n  searchText: string = '';\n\n  @ViewChild(\"newForm\") newForm: NgForm | any = null;\n  @ViewChild(\"editForm\") editForm: NgForm | any = null;\n\n  constructor(\n    private projectService: ProjectsService,\n    private clientLocationsService: ClientLocationsService\n  ) {}\n\n  ngOnInit() {\n    this.projectService.getAllProjects().subscribe({\n      next: (response: Project[]) => {\n        this.projects = response;\n        this.showLoading = false;\n      },\n      error: (error) => {\n        console.log(error);\n        alert('Authentication Failed');\n      },\n    });\n\n    this.clientLocationsService.getClientLocations().subscribe({\n      next: (response) => {\n        this.clientLocations = response;\n      },\n      error: (error) => {\n        console.log(error);\n      },\n    });\n  }\n\n  isAllChecked: boolean = false;\n\n  @ViewChildren(\"prj\") projs : QueryList<ProjectComponent> | any = null;\n\n  isAllCheckedChange(event: any)\n  {\n    let proj = this.projs.toArray();\n    for (let i = 0; i < proj.length; i++)\n    {\n      proj[i].isAllCheckedChange(this.isAllChecked);\n    }\n  }\n\n  @ViewChild(\"prjID\") prjID: ElementRef | any = null;\n\n  onNewClick(event: any)\n  {\n    this.newForm.resetForm();\n    setTimeout(() => {\n      this.prjID.nativeElement.focus();\n    }, 100);\n  }\n\n  onSaveClick() {\n    if (this.newForm.valid) {\n      this.newProject.clientLocation.clientLocationID = 0;\n      this.projectService.insertProject(this.newProject).subscribe({\n        next: (response) => {\n          //Add Project to Grid\n          var p: Project = new Project();\n          p.projectID = response.projectID;\n          p.projectName = response.projectName;\n          p.dateOfStart = response.dateOfStart;\n          p.teamSize = response.teamSize;\n          p.clientLocation = response.clientLocation;\n          p.active = response.active;\n          p.clientLocationID = response.clientLocationID;\n          p.status = response.status;\n          this.projects.push(p);\n\n          //Clear New Project Dialog - TextBoxes\n          this.newProject.projectID = null;\n          this.newProject.projectName = null;\n          this.newProject.dateOfStart = null;\n          this.newProject.teamSize = null;\n          this.newProject.active = false;\n          this.newProject.clientLocationID = null;\n          this.newProject.status = null;\n          \n          $('#newFormCancel').trigger('click');\n        },\n        error: (error) => {\n          console.log(error);\n        },\n      });\n    }\n  }\n\n  onEditClick(event: any, index: number) {\n    this.editForm.resetForm();\n    setTimeout(() => {\n      this.editProject.projectID = this.projects[index].projectID;\n      this.editProject.projectName = this.projects[index].projectName;\n      this.editProject.dateOfStart = this.projects[index].dateOfStart\n        .split('/')\n        .reverse()\n        .join('-'); //yyyy-MM-dd\n      this.editProject.teamSize = this.projects[index].teamSize;\n      this.editProject.active = this.projects[index].active;\n      this.editProject.clientLocationID = this.projects[index].clientLocationID;\n      this.editProject.clientLocation = this.projects[index].clientLocation;\n      this.editProject.status = this.projects[index].status;\n      this.editIndex = index;\n    }, 100);\n  }\n\n  onUpdateClick() {\n    debugger;\n    if (this.editForm.valid) {\n      this.projectService.updateProject(this.editProject).subscribe({\n        next: (response: Project) => {\n          var p: Project = new Project();\n          p.projectID = response.projectID;\n          p.projectName = response.projectName;\n          p.dateOfStart = response.dateOfStart;\n          p.teamSize = response.teamSize;\n          p.clientLocation = response.clientLocation;\n          p.active = response.active;\n          p.clientLocationID = response.clientLocationID;\n          p.status = response.status;\n          this.projects[this.editIndex] = p;\n\n          this.editProject.projectID = null;\n          this.editProject.projectName = null;\n          this.editProject.dateOfStart = null;\n          this.editProject.teamSize = null;\n          this.newProject.active = false;\n          this.newProject.clientLocationID = null;\n          this.newProject.status = null;\n\n          $('#editFormCancel').trigger('click');\n        },\n        error: (error) => {\n          console.log(error);\n        },\n      });\n    }\n  }\n\n  onDeleteClick(event: any, index: number) {\n    this.deleteIndex = index;\n    this.deleteProject.projectID = this.projects[index].projectID;\n    this.deleteProject.projectName = this.projects[index].projectName;\n    this.deleteProject.dateOfStart = this.projects[index].dateOfStart;\n    this.deleteProject.teamSize = this.projects[index].teamSize;\n  }\n\n  onDeleteConfirmClick() {\n    this.projectService.deleteProject(this.deleteProject.projectID).subscribe({\n      next: (response) => {\n        this.projects.splice(this.deleteIndex, 1);\n        this.deleteProject.projectID = null;\n        this.deleteProject.projectName = null;\n        this.deleteProject.dateOfStart = null;\n        this.deleteProject.teamSize = null;\n      },\n      error: (error) => {\n        console.log(error);\n      },\n    });\n  }\n\n  onSearchClick() {\n    this.projectService\n      .SearchProjects(this.searchBy, this.searchText)\n      .subscribe({\n        next: (response: Project[]) => {\n          this.projects = response;\n        },\n        error: (error) => {\n          console.log(error);\n        },\n      });\n  }\n\n  \n\n  onHideShowDetails(event:any){\n    this.projectService.toggleDetails();\n  }\n}\n","<h1>\n  Projects\n  <i class=\"fa fa-circle-o-notch fa-spin\" style=\"font-size:34px\" *ngIf=\"showLoading\"></i>\n</h1>\n<div class=\"row\">\n  <div class=\"col-xl-12 mx-auto\">\n    <div class=\"form-group form-row\">\n\n      <div class=\"col-2\">\n        <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#newModal\" (click)=\"onNewClick($event)\">Create Project</button>\n      </div>\n      <div class=\"col-2\">\n      <button class=\"btn btn-secondary\" (click)=\"onHideShowDetails($event)\">Hide/Show Details</button>\n      </div>\n\n      <div class=\"col-1 custom-control custom-checkbox\">\n        <input type=\"checkbox\" value=\"true\" name=\"isAllChecked\" id=\"isAllChecked\" [(ngModel)]=\"isAllChecked\" class=\"custom-control-input\" (change)=\"isAllCheckedChange($event)\">\n        <label class=\"custom-control-label\" for=\"isAllChecked\"></label>\n      </div>\n\n      <label for=\"drpSearchBy\" class=\"col-form-label col-1 text-right\">Search by:</label>\n\n      <div class=\"col-2\">\n        <select class=\"form-control\" id=\"drpSearchBy\" name=\"SearchBy\" [(ngModel)]=\"searchBy\">\n          <option value=\"ProjectID\">Project ID</option>\n          <option value=\"ProjectName\">Project Name</option>\n          <option value=\"DateOfStart\">Date of Start</option>\n          <option value=\"TeamSize\">Team Size</option>\n        </select>\n      </div>\n\n      <label for=\"textSearchText\" class=\"col-form-label col-1 text-right\">Search:</label>\n\n      <div class=\"col-3\">\n        <div class=\"input-group\">\n          <input type=\"text\" class=\"form-control\" id=\"txtSearchText\" name=\"SearchText\" [(ngModel)]=\"searchText\">\n          <div class=\"input-group-append\" (click)=\"onSearchClick()\">\n            <span class=\"input-group-text\"><i class=\"fa fa-search\"></i></span>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n  <div class=\"col-xl-12 mx-auto\">\n   <div class=\"row\">\n    <div class=\"col-md-4\" *ngFor=\"let project of projects; let i=index\">\n      <app-project #prj [currentProject]=\"project\" [recordIndex]=\"i\" (editClick)=\"onEditClick($event,i)\" (deleteClick)=\"onDeleteClick($event, i)\">\n        <app-check-box-printer #selectionBox>\n        </app-check-box-printer>\n       \n      </app-project>\n    </div>\n   </div>\n  </div>\n</div>\n\n<form #newForm=\"ngForm\" novalidate=\"novalidate\" appClientLocationStatusValidator>\n  <div class=\"modal\" role=\"dialog\" id=\"newModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\" style=\"width:700px\">\n        <div class=\"modal-header bg-primary text-white\">\n          <div class=\"modal-title\">New Project</div>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n        </div>\n        <div class=\"modal-body\">\n\n          <div class=\"form-group row\">\n            <label for=\"txtNewProjectID\" class=\"col-sm-4 col-form-label\">Project ID</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtNewProjectID\" style=\"width:130px\" class=\"form-control\" placeholder=\"Project ID\" name=\"ProjectID\" [(ngModel)]=\"newProject.projectID\" required=\"required\" pattern=\"^[0-9]*$\" appProjectIDUniqueValidator #newProjectID=\"ngModel\" #prjID [ngClass]=\"{ 'is-invalid': newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted), 'is-valid': newProjectID.valid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) && newProjectID.errors!['required']\">Project ID can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) && newProjectID.errors!['pattern']\">Project ID should contain numbers only</span>\n\n              <span class=\"text-danger\" *ngIf=\"newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) && newProjectID.errors!['uniqueProjectID']\">Duplicate Project ID</span>\n\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtNewProjectName\" class=\"col-sm-4 col-form-label\">Project Name</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtNewProjectName\" class=\"form-control\" placeholder=\"Project Name\" name=\"ProjectName\" [(ngModel)]=\"newProject.projectName\" required=\"required\" minlength=\"3\" maxlength=\"30\" pattern=\"^[A-Za-z0-9 /-]*$\" #newProjectName=\"ngModel\" [ngClass]=\"{ 'is-invalid': newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted), 'is-valid': newProjectName.valid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) && newProjectName.errors!['required']\">Project Name can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) && newProjectName.errors!['pattern']\">Project Name can contain alphabets, digits, dot, hyphen or space only</span>\n\n              <span class=\"text-danger\" *ngIf=\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) && newProjectName.errors!['minlength']\">Project name should be at least 3 characters long</span>\n\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtNewDateOfStart\" class=\"col-sm-4 col-form-label\">Date of Start</label>\n            <div class=\"col-sm-8\">\n              <input type=\"date\" id=\"txtNewDateOfStart\" style=\"width:180px\" class=\"form-control\" placeholder=\"Date of Start\" name=\"DateOfStart\" [(ngModel)]=\"newProject.dateOfStart\" required=\"required\" #newDateOfStart=\"ngModel\" [ngClass]=\"{ 'is-invalid': newDateOfStart.invalid && (newDateOfStart.dirty || newDateOfStart.touched || newForm.submitted), 'is-valid': newDateOfStart.valid && (newDateOfStart.dirty || newDateOfStart.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"newDateOfStart.invalid && (newDateOfStart.dirty || newDateOfStart.touched || newForm.submitted) && newDateOfStart.errors!['required']\">Date of Start can't be blank</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtTeamSize\" class=\"col-sm-4 col-form-label\">Team Size</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtTeamSize\" style=\"width:150px\" class=\"form-control\" placeholder=\"Team Size\" name=\"TeamSize\" [(ngModel)]=\"newProject.teamSize\" pattern=\"^[0-9]*$\" maxlength=\"7\" appTeamSizeValidator=\"5\" #newTeamSize=\"ngModel\" [ngClass]=\"{ 'is-invalid': newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted), 'is-valid': newTeamSize.valid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) && newTeamSize.errors!['required']\">Team Size should be a number</span>\n\n              <span class=\"text-danger\" *ngIf=\"newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) && newTeamSize.errors!['divisible']\">Team Size should be divisble by 5</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"col-sm-4 col-form-label\">&nbsp;</label>\n            <div class=\"col-sm-8\">\n              <div class=\"form-check\">\n                <input type=\"checkbox\" id=\"chkNewActive\" value=\"true\" class=\"form-check-input\" [(ngModel)]=\"newProject.active\" name=\"active\">\n                <label class=\"form-check-label\" for=\"chkNewActive\">Active</label>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"rbNewStatusInForce\" class=\"col-sm-4\">Status</label>\n            <div class=\"col-sm-8\">\n\n              <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" id=\"rbNewStatusInForce\" value=\"In Force\" class=\"form-check-input\" name=\"Status\" [(ngModel)]=\"newProject.status\" required=\"required\" #newStatusInForce=\"ngModel\">\n                <label for=\"rbNewStatusInForce\" class=\"form-check-label\">In Force</label>\n              </div>\n\n              <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" id=\"rbNewStatusSupport\" value=\"Support\" class=\"form-check-input\" name=\"Status\" [(ngModel)]=\"newProject.status\" required=\"required\" #newStatusSupport=\"ngModel\">\n                <label for=\"rbNewStatusSupport\" class=\"form-check-label\">Support</label>\n              </div>\n\n              <span class=\"text-danger\" *ngIf=\"newStatusInForce.invalid && (newStatusInForce.dirty || newStatusInForce.touched || newForm.submitted) && newStatusInForce.errors!['required']\">Please select status</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"drpNewClientLocation\" class=\"col-sm-4 col-form-label\">Client Location</label>\n            <div class=\"col-sm-8\">\n              <select id=\"drpNewClientLocation\" class=\"form-control\" name=\"ClientLocation\" [(ngModel)]=\"newProject.clientLocationID\" required=\"required\" #newClientLocationID=\"ngModel\" [ngClass]=\"{ 'is-invalid': newClientLocationID.invalid && (newClientLocationID.dirty || newClientLocationID.touched || newForm.submitted), 'is-valid': newClientLocationID.valid && (newClientLocationID.dirty || newClientLocationID.touched || newForm.submitted) }\">\n                <option value=\"null\">Please Select</option>\n                <option *ngFor=\"let clientLocation of clientLocations\" [value]=\"clientLocation.clientLocationID\">\n                  {{clientLocation.clientLocationName}}\n                </option>\n              </select>\n\n              <span class=\"text-danger\" *ngIf=\"newClientLocationID.invalid && (newClientLocationID.dirty || newClientLocationID.touched || newForm.submitted) && newClientLocationID.errors!['required']\">Please client location</span>\n\n              <span class=\"text-danger\" *ngIf=\"newForm.invalid && (newForm.dirty || newForm.touched || newForm.submitted) && (newForm.errors? newForm.errors!['clientLocationStatus'] : false)\">Support projects are not allowed at Tokyo</span>\n            </div>\n          </div>\n\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"newFormCancel\">Cancel</button>\n          <button class=\"btn btn-success\" (click)=\"onSaveClick()\">Save</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n<!-- Edit Project -->\n<form #editForm=\"ngForm\" novalidate=\"novalidate\" appClientLocationStatusValidator>\n  <div class=\"modal\" role=\"dialog\" id=\"editModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\" style=\"width:700px\">\n        <div class=\"modal-header\">\n          <div class=\"modal-title\">Edit Project</div>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n        </div>\n        <div class=\"modal-body\">\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditProjectID\" class=\"col-sm-4 col-form-label\">Project ID</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtEditProjectID\" style=\"width:130px\" class=\"form-control-plain-text\" placeholder=\"Project ID\" name=\"ProjectID\" [(ngModel)]=\"editProject.projectID\" disabled=\"disabled\" required=\"required\" pattern=\"^[0-9]*$\" appProjectIDUniqueValidator #editProjectID=\"ngModel\" [ngClass]=\"{ 'is-invalid': editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || newForm.submitted), 'is-valid': editProjectID.valid && (editProjectID.dirty || editProjectID.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || editForm.submitted) && editProjectID.errors!['required']\">Project ID can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || editForm.submitted) && editProjectID.errors!['pattern']\">Project ID should contain numbers only</span>\n\n              <span class=\"text-danger\" *ngIf=\"editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || editForm.submitted) && editProjectID.errors!['uniqueProjectID']\">Duplicate Project ID</span>\n\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditProjectName\" class=\"col-sm-4 col-form-label\">Project Name</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtEditProjectName\" class=\"form-control\" placeholder=\"Project Name\" name=\"ProjectName\" [(ngModel)]=\"editProject.projectName\" required=\"required\" minlength=\"3\" maxlength=\"30\" pattern=\"^[A-Za-z0-9 /-]*$\" #editProjectName=\"ngModel\" [ngClass]=\"{ 'is-invalid': editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted), 'is-valid': editProjectName.valid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) && editProjectName.errors!['required']\">Project Name can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) && editProjectName.errors!['pattern']\">Project Name can contain alphabets, digits, dot, hyphen or space only</span>\n\n              <span class=\"text-danger\" *ngIf=\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) && editProjectName.errors!['minlength']\">Project name should be at least 3 characters long</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditDateOfStart\" class=\"col-sm-4 col-form-label\">Date of Start</label>\n            <div class=\"col-sm-8\">\n              <input type=\"date\" id=\"txtEditDateOfStart\" style=\"width:180px\" class=\"form-control\" placeholder=\"Date of Start\" name=\"DateOfStart\" [(ngModel)]=\"editProject.dateOfStart\" required=\"required\" #editDateOfStart=\"ngModel\" [ngClass]=\"{ 'is-invalid': editDateOfStart.invalid && (editDateOfStart.dirty || editDateOfStart.touched || editForm.submitted), 'is-valid': editDateOfStart.valid && (editDateOfStart.dirty || editDateOfStart.touched || editForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"editDateOfStart.invalid && (editForm.submitted) && editDateOfStart.errors!['required']\">Date of Start can't be blank</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditTeamSize\" class=\"col-sm-4 col-form-label\">Team Size</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtEditTeamSize\" style=\"width:150px\" class=\"form-control\" placeholder=\"Team Size\" name=\"TeamSize\" [(ngModel)]=\"editProject.teamSize\" pattern=\"^[0-9]*$\" maxlength=\"7\" appTeamSizeValidator=\"5\" #editTeamSize=\"ngModel\" [ngClass]=\"{ 'is-invalid': editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted), 'is-valid': editTeamSize.valid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted) && editTeamSize.errors!['required']\">Team Size should be a number</span>\n\n              <span class=\"text-danger\" *ngIf=\"editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted) && editTeamSize.errors!['divisible']\">Team Size should be divisble by 5</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"col-sm-4 col-form-label\">&nbsp;</label>\n            <div class=\"col-sm-8\">\n              <div class=\"form-check\">\n                <input type=\"checkbox\" id=\"chkEditActive\" value=\"true\" class=\"form-check-input\" [(ngModel)]=\"editProject.active\" name=\"active\">\n                <label class=\"form-check-label\" for=\"chkEditActive\">Active</label>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"rbEditStatusInForce\" class=\"col-sm-4\">Status</label>\n            <div class=\"col-sm-8\">\n\n              <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" id=\"rbEditStatusInForce\" value=\"In Force\" class=\"form-check-input\" name=\"Status\" [(ngModel)]=\"editProject.status\" required=\"required\" #editStatusInForce=\"ngModel\">\n                <label for=\"rbEditStatusInForce\" class=\"form-check-label\">In Force</label>\n              </div>\n\n              <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" id=\"rbEditStatusSupport\" value=\"Support\" class=\"form-check-input\" name=\"Status\" [(ngModel)]=\"editProject.status\" required=\"required\" #editStatusSupport=\"ngModel\">\n                <label for=\"rbEditStatusSupport\" class=\"form-check-label\">Support</label>\n              </div>\n\n              <span class=\"text-danger\" *ngIf=\"editStatusInForce.invalid && (editStatusInForce.dirty || editStatusInForce.touched || editForm.submitted) && editStatusInForce.errors!['required']\">Please select status</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"drpEditClientLocation\" class=\"col-sm-4 col-form-label\">Client Location</label>\n            <div class=\"col-sm-8\">\n              <select id=\"drpEditClientLocation\" class=\"form-control\" name=\"ClientLocation\" [(ngModel)]=\"editProject.clientLocationID\" required=\"required\" #editClientLocationID=\"ngModel\" [ngClass]=\"{ 'is-invalid': editClientLocationID.invalid && (editClientLocationID.dirty || editClientLocationID.touched || editForm.submitted), 'is-valid': editClientLocationID.valid && (editClientLocationID.dirty || editClientLocationID.touched || editForm.submitted) }\">\n                <option value=\"null\">Please Select</option>\n                <option *ngFor=\"let clientLocation of clientLocations\" [value]=\"clientLocation.clientLocationID\">\n                  {{clientLocation.clientLocationName}}\n                </option>\n              </select>\n\n              <span class=\"text-danger\" *ngIf=\"editClientLocationID.invalid && (editClientLocationID.dirty || editClientLocationID.touched || editForm.submitted) && editClientLocationID.errors!['required']\">Please client location</span>\n\n              <span class=\"text-danger\" *ngIf=\"editForm.invalid && (editForm.dirty || editForm.touched || editForm.submitted) && (editForm.errors? editForm.errors!['clientLocationStatus'] : false)\">Support projects are not allowed at Tokyo</span>\n            </div>\n          </div>\n\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"editFormCancel\">Cancel</button>\n          <button class=\"btn btn-success\" (click)=\"onUpdateClick()\">Update</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n\n<!-- Delete Project -->\n<form>\n  <div class=\"modal\" role=\"dialog\" id=\"deleteModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\" style=\"width:700px\">\n        <div class=\"modal-header\">\n          <div class=\"modal-title\">Delete Project</div>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n        </div>\n        <div class=\"modal-body\">\n\n          <div class=\"text-warning\">Are you sure to delete this Project?</div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtDeleteProjectID\" class=\"col-sm-4 col-form-label\">Project ID</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtDeleteProjectID\" style=\"width:100px\" class=\"form-control-plain-text\" placeholder=\"Project ID\" name=\"ProjectID\" [(ngModel)]=\"deleteProject.projectID\" disabled=\"disabled\">\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtDeleteProjectName\" class=\"col-sm-4 col-form-label\">Project Name</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtDeleteProjectName\" class=\"form-control-plain-text\" placeholder=\"Project Name\" name=\"ProjectName\" [(ngModel)]=\"deleteProject.projectName\" disabled=\"disabled\">\n            </div>\n          </div>\n\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-dismiss=\"modal\">Cancel</button>\n          <button class=\"btn btn-success\" data-dismiss=\"modal\" (click)=\"onDeleteConfirmClick()\">Delete</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './admin/dashboard/dashboard.component';\nimport { AboutComponent } from './admin/about/about.component';\nimport { ProjectsComponent } from './admin/projects/projects.component';\nimport { LoginComponent } from './login/login.component';\nimport { CanActivateGaurdService } from './can-activate-gaurd.service';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { TasksComponent } from './tasks/tasks.component';\n\nconst routes: Routes = [\n \n  { path: \"\", redirectTo: \"login\", pathMatch: \"full\" },\n  { path: \"login\", component: LoginComponent },\n  { path: \"signup\", component: SignUpComponent },\n  { path: \"dashboard\", component: DashboardComponent, data: { expectedRole: \"Admin\" } },\n  { path: \"about\", component: AboutComponent },\n  { path: \"projects\", component: ProjectsComponent, data: { expectedRole: \"Admin\" } },\n  {path:\"tasks\", component:TasksComponent,data: { expectedRole: \"Employee\" } }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { LoginService } from './login.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(public loginService:LoginService){}\n}\n","<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n  <a class=\"navbar-brand\" href=\"#\"> Project Task Manager </a>\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#mynav\"\n  >\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"mynav\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != null\">\n        <a class=\"nav-link\" routerLink=\"dashboard\">Dashboard</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"about\">About</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != null\">\n        <a class=\"nav-link\" routerLink=\"projects\">Projects</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != null\">\n        <a class=\"nav-link\" href=\"#\">{{loginService.currentUserName}}</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != null\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"loginService.Logout()\">Logout</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"loginService.currentUserName == null\">\n        <a class=\"nav-link\" routerLink=\"login\">Login</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"loginService.currentUserName == null\">\n        <a class=\"nav-link\" routerLink=\"signup\">Sign Up</a>\n      </li>\n    </ul>\n    <form class=\"form-inline my-2 my-lg-0\">\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"search\"\n            ><i class=\"fa fa-search\"></i\n          ></span>\n        </div>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Search\" />\n      </div>\n      <button class=\"btn btn-warning my2- my-sm-0 ml-1\" type=\"button\">Search</button>\n    </form>\n  </div>\n</nav>\n\n<div class=\"container-fluid\">\n <router-outlet></router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AdminModule } from './admin/admin.module';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JwtInterceptorService } from './jwt-interceptor.service';\nimport { JwtUnAuthorizedInterceptorService } from './jwt-un-authorized-interceptor.service';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { TasksComponent } from './tasks/tasks.component';\n@NgModule({\n  declarations: [AppComponent, LoginComponent, SignUpComponent, TasksComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AdminModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: () => {\n          return sessionStorage.getItem(\"currentUser\")\n            ? JSON.parse(sessionStorage.getItem(\"currentUser\") as string).token\n            : null;\n        },\n      },\n    }),\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptorService,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtUnAuthorizedInterceptorService,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Directive } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\n\n@Directive({\n  selector: '[appClientLocationStatusValidator]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: ClientLocationStatusValidatorDirective, multi: true }]\n})\nexport class ClientLocationStatusValidatorDirective implements Validator {\n\n  constructor() { }\n  validate(control: AbstractControl): ValidationErrors | null {\n    let isValid = true;\n    if (control.value.ClientLocation == 6 && control.value.Status == \"Support\") {\n      isValid = false; //indicates invalid\n    }\n\n    if (isValid == true) {\n      return null; //valid\n    }\n    else {\n      return { clientLocationStatus: { valid: false } }; //invalid\n    }\n  }\n\n}\n","export class ClientLocation {\n    clientLocationID: any;\n    clientLocationName: any;\n\n    constructor()\n    {\n        this.clientLocationID = null;\n        this.clientLocationName = null;\n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ClientLocation } from './client-location';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientLocationsService {\n\n  constructor(private httpClient:HttpClient) { }\n\n  getClientLocations():Observable<ClientLocation[]>{\n    return this.httpClient.get<ClientLocation[]>(\"/api/clientlocations\", { responseType: \"json\" })\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Country } from './country';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountriesService {\n\n  constructor(private httpClient: HttpClient)\n  {\n  }\n\n  getCountries(): Observable<Country[]>\n  {\n    return this.httpClient.get<Country[]>(\"/api/countries\", { responseType: \"json\" });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl, AsyncValidatorFn, FormControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { Observable, map } from 'rxjs';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomValidatorsService {\n\n  constructor(private loginService: LoginService) { }\n\n  public minimumAgeValidator(minAge: number): ValidatorFn\n  {\n    return (control: AbstractControl): ValidationErrors | null =>\n    {\n      if (!control.value)\n        return null; //return, if the date of birth is null\n\n      var today = new Date();\n      var dateOfBirth = new Date(control.value);\n      var diffMilliSeconds = Math.abs(today.getTime() - dateOfBirth.getTime());\n      var diffYears = (diffMilliSeconds / (1000 * 60 * 60 * 24)) / 365.25;\n\n      if (diffYears >= minAge)\n        return null; //valid\n      else\n        return { minAge: { valid: false } }; //invalid\n    };\n  }\n  public compareValidator(controlToValidate: string, controlToCompare: string): ValidatorFn\n  {\n    return (formGroup: AbstractControl): ValidationErrors | null =>\n    {\n      if (!(formGroup.get(controlToValidate) as FormControl).value)\n        return null; //return, if the confirm password is null\n\n      if ((formGroup.get(controlToValidate) as FormControl).value == (formGroup.get(controlToCompare) as any).value)\n        return null; //valid\n      else\n      {\n        (formGroup.get(controlToValidate) as FormControl).setErrors({ compareValidator: { valid: false } });\n        return { compareValidator: { valid: false } }; //invalid\n      }\n    };\n  }\n\n  public DuplicateEmailValidator(): AsyncValidatorFn\n  {\n    return (control: AbstractControl): Observable<ValidationErrors | null> =>\n    {\n      return this.loginService.getUserByEmail(control.value).pipe(map((existingUser: any) =>\n      {\n        if (existingUser != null)\n        {\n          return { uniqueEmail: { valid: false } }; //invalid\n        }\n        else\n        {\n          return null;\n        }\n      }));\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DashboardService {\n\n  getTeamMembersSummary():any[]{\n    var TeamMembersSummary =[\n      {\n        Region: 'East',\n        TeamMembersCount: 20,\n        TemporarilyUnavailableMembers: 4,\n      },\n      {\n        Region: 'West',\n        TeamMembersCount: 15,\n        TemporarilyUnavailableMembers: 8,\n      },\n      {\n        Region: 'South',\n        TeamMembersCount: 17,\n        TemporarilyUnavailableMembers: 1,\n      },\n      {\n        Region: 'North',\n        TeamMembersCount: 15,\n        TemporarilyUnavailableMembers: 6,\n      },\n    ];\n    return TeamMembersSummary\n  }\n}\n","import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JwtInterceptorService implements HttpInterceptor {\n  constructor() {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    var currentUser = { token: '' };\n\n    if (sessionStorage['currentUser'] != null) {\n      currentUser = JSON.parse(sessionStorage['currentUser']);\n    }\n\n    req = req.clone({\n      setHeaders: {\n        Authorization: 'Bearer ' + currentUser.token,\n      },\n    });\n    return next.handle(req);\n  }\n}\n","import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JwtUnAuthorizedInterceptorService implements HttpInterceptor {\n  constructor() {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      tap({\n        next: (event: HttpEvent<any>) => {},\n        error: (error: any) => {\n          if (error instanceof HttpErrorResponse) {\n            if (error.status == 401) {\n              console.log(error);\n              alert('401 UnAuthorized');\n            }\n          }\n        },\n      })\n    );\n  }\n}\n","export class LoginViewModel {\n    UserName: string = \"\";\n    Password: string = \"\";\n}\n","import { HttpBackend, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { LoginViewModel } from './login-view-model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { SignUpViewModel } from './sign-up-view-model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  private httpClient: HttpClient | null = null;\n  constructor(\n    private httpBackend: HttpBackend,\n    private jwtHelperService: JwtHelperService\n  ) {}\n\n  currentUserName: any = null;\n\n  public Login(loginViewModel: LoginViewModel): Observable<any>\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post<any>(\"/authenticate\", loginViewModel, { responseType: \"json\", observe: \"response\" })\n      .pipe(map(response =>\n      {\n        if (response)\n        {\n          this.currentUserName = response.body.userName;\n          sessionStorage['currentUser'] = JSON.stringify(response.body);\n          sessionStorage['XSRFRequestToken'] = response.headers.get(\"XSRF-REQUEST-TOKEN\");\n        }\n        return response.body;\n      }));\n  }\n\n  public Register(signUpViewModel: SignUpViewModel): Observable<any>\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post<any>(\"/register\", signUpViewModel, { responseType: \"json\", observe: \"response\" })\n      .pipe(map(response =>\n      {\n        if (response)\n        {\n          this.currentUserName = response.body.userName;\n          sessionStorage['currentUser'] = JSON.stringify(response.body);\n          sessionStorage['XSRFRequestToken'] = response.headers.get(\"XSRF-REQUEST-TOKEN\");\n        }\n        return response.body;\n      }));\n  }\n\n  getUserByEmail(Email: string): Observable<any>\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.get<any>(\"/api/getUserByEmail/\" + Email, { responseType: \"json\" });\n  }\n\n  public Logout()\n  {\n    sessionStorage.removeItem(\"currentUser\");\n    this.currentUserName = null;\n  }\n\n  public isAuthenticated(): boolean\n  {\n    var token = sessionStorage.getItem(\"currentUser\") ? JSON.parse(sessionStorage.getItem(\"currentUser\") as string).token : null;\n    if (this.jwtHelperService.isTokenExpired())\n    {\n      return false; //token is not valid\n    }\n    else\n    {\n      return true; //token is valid\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LoginViewModel } from '../login-view-model';\nimport { LoginService } from '../login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  loginViewModel: LoginViewModel = new LoginViewModel();\n  loginError: string = '';\n  constructor(private loginService: LoginService, private router: Router) {}\n\n  ngOnInit() {}\n  onLoginClick(event: any) {\n    this.loginService.Login(this.loginViewModel).subscribe({\n      next: (response) => {\n        this.router.navigateByUrl('/dashboard');\n      },\n      error: (error) => {\n        console.log(error);\n        this.loginError = 'Invalid Username or Password';\n      },\n    });\n  }\n}\n","<form>\n    <div class=\"row\">\n      <div class=\"col-lg-6 col-xl-5 col-md-9 mx-auto\">\n        <div class=\"card mt-4\">\n          <div class=\"card-header bg-secondary text-white\">\n            <h3>Login</h3>\n          </div>\n          <div class=\"card-body\">\n            <div class=\"form-group form-row\">\n              <label for=\"UserName\" class=\"col-md-4 col-form-label\">Username</label>\n              <div class=\"col-md-8\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Username\" [(ngModel)]=\"loginViewModel.UserName\" name=\"UserName\" autofocus=\"autofocus\">\n              </div>\n            </div>\n  \n            <div class=\"form-group form-row\">\n              <label for=\"Password\" class=\"col-md-4 col-form-label\">Password</label>\n              <div class=\"col-md-8\">\n                <input type=\"password\" class=\"form-control\" placeholder=\"Password\" [(ngModel)]=\"loginViewModel.Password\" name=\"Password\">\n              </div>\n            </div>\n  \n          </div>\n  \n          <div class=\"card-footer text-right\">\n            <span class=\"text-danger\">{{loginError}}&nbsp;</span>\n            <button class=\"btn btn-primary\" (click)=\"onLoginClick($event)\">Login</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>","import { Directive } from '@angular/core';\nimport { AbstractControl, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { ProjectsService } from './projects.service';\nimport { Observable, map } from 'rxjs';\nimport { Project } from './project';\n\n@Directive({\n  selector: '[appProjectIDUniqueValidator]',\n  providers: [ { provide: NG_ASYNC_VALIDATORS, useExisting: ProjectIDUniqueValidatorDirective, multi: true }]\n})\nexport class ProjectIDUniqueValidatorDirective {\n\n  constructor(private projectsService: ProjectsService) { }\n\n  validate(control: AbstractControl) : Observable<ValidationErrors | null>\n  {\n    return this.projectsService.getProjectByProjectID(control.value).pipe(map( (existingProject: Project) => {\n      if (existingProject != null)\n      {\n        return { uniqueProjectID: { valid: false }};\n      }\n      else\n      {\n        return null;\n      }\n    }));\n  }\n}\n","import { ClientLocation } from \"./client-location\";\n\nexport class Project \n{\n    projectID: number | any;\n    projectName: string | any;\n    dateOfStart: string | any;\n    teamSize: number | any;\n    active: boolean | any;\n    status: string | any;\n    clientLocationID: number | any;\n    clientLocation: ClientLocation | any;\n\n    constructor()\n    {\n        this.projectID = null;\n        this.projectName = null;\n        this.dateOfStart = null;\n        this.teamSize = null;\n        this.active = true;\n        this.status = null;\n        this.clientLocationID = null;\n        this.clientLocation = new ClientLocation();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable, map } from 'rxjs';\nimport { Project } from './project';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectsService {\n  public MySubject: BehaviorSubject<boolean>;\n\n  constructor(private httpClient: HttpClient) {\n    this.MySubject = new BehaviorSubject<boolean>(false);\n  }\n\n  //hideDetails:boolean = false;\n  toggleDetails(){\n    this.MySubject.next(!this.MySubject.value);\n  }\n\n  getAllProjects(): Observable<Project[]>{\n    \n    return this.httpClient.get<Project[]>(\"/api/projects\", {responseType:\"json\"})\n    .pipe(map((data:Project[])=>{\n      \n      return data;\n    }))\n  }\n\n  getProjectByProjectID(ProjectID: number): Observable<Project>\n  {\n    return this.httpClient.get<Project>(\"/api/projects/searchbyprojectid/\" + ProjectID, { responseType: \"json\" });\n  }\n\n  insertProject(newProject:Project):Observable<Project>{\n    // var requestHeaders = new HttpHeaders();\n    // requestHeaders = requestHeaders.set(\"X-XSRF-TOKEN\", sessionStorage['XSRFRequestToken']);\n    return this.httpClient.post<Project>(\"/api/projects\", newProject, { responseType:\"json\"})//headers: requestHeaders,\n  }\n\n  updateProject(existingProject:Project):Observable<Project>{\n    return this.httpClient.put<Project>(\"/api/projects\", existingProject, {responseType:\"json\"})\n  }\n\n  deleteProject(ProjectID: number): Observable<string>\n  {\n    return this.httpClient.delete<string>(\"/api/projects?ProjectID=\" + ProjectID);\n  }\n\n  SearchProjects(searchBy:string, searchText:string):Observable<Project[]>{\n    return this.httpClient.get<Project[]>(\"api/projects/search/\" + searchBy + \"/\" + searchText, {responseType:\"json\"} )  \n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Country } from '../country';\nimport { CountriesService } from '../countries.service';\nimport { CustomValidatorsService } from '../custom-validators.service';\nimport { LoginService } from '../login.service';\nimport { Router } from '@angular/router';\nimport { SignUpViewModel } from '../sign-up-view-model';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss'],\n})\n\nexport class SignUpComponent implements OnInit {\n  signUpForm: FormGroup | any = null;\n  genders = ['male', 'female'];\n  countries: Country[] = [];\n  registerError: string | null = null;\n\n  constructor(\n    private countriesService: CountriesService,\n    private formBuilder: FormBuilder,\n    private customValidatorsService: CustomValidatorsService,\n    private loginService: LoginService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.countriesService.getCountries().subscribe((response) => {\n      this.countries = response;\n    });\n\n    this.signUpForm = this.formBuilder.group(\n      {\n        personName: this.formBuilder.group({\n          firstName: [null, [Validators.required, Validators.minLength(2)]],\n          lastName: [null, [Validators.required, Validators.minLength(2)]],\n        }),\n\n        email: [\n          null,\n          [Validators.required, Validators.email],\n          [this.customValidatorsService.DuplicateEmailValidator()],\n          { updateOn: 'blur' },\n        ],\n        mobile: [\n          null,\n          [Validators.required, Validators.pattern(/^[789]\\d{9}$/)],\n        ],\n        dateOfBirth: [\n          null,\n          [\n            Validators.required,\n            this.customValidatorsService.minimumAgeValidator(18),\n          ],\n        ],\n        password: [null, [Validators.required]],\n        confirmPassword: [null, [Validators.required]],\n        gender: [null, [Validators.required]],\n        countryID: [null, [Validators.required]],\n        receiveNewsLetters: [null],\n        skills: this.formBuilder.array([]),\n      },\n      {\n        validators: [\n          this.customValidatorsService.compareValidator(\n            'confirmPassword',\n            'password'\n          ),\n        ],\n      }\n    );\n\n    this.signUpForm.valueChanges.subscribe((value: any) => {\n      //console.log(value);\n    });\n  }\n\n  onSubmitClick() {\n    debugger;\n    //Display current form value\n    this.signUpForm['submitted'] = true;\n    console.log(this.signUpForm);\n\n    if (this.signUpForm.valid) {\n      var signUpVieModel = this.signUpForm.value as SignUpViewModel;\n      this.loginService.Register(signUpVieModel).subscribe({\n        next: (response) => {\n          this.router.navigate(['tasks']);\n        },\n        error: (error) => {\n          console.log(error);\n          this.registerError = 'Unable to submit';\n        },\n      });\n    }\n\n    //setValue\n    // this.signUpForm.setValue({\n    //   firstName: \"Adam\",\n    //   lastName: \"Smith\",\n    //   email: \"smith@gmail.com\",\n    //   mobile: \"9876543210\",\n    //   dateOfBirth: \"2020-01-01\",\n    //   gender: \"male\",\n    //   countryID: 3,\n    //   receiveNewsLetters: true\n    // });\n\n    //patchValue\n    // this.signUpForm.patchValue({\n    //   firstName: \"Adam\",\n    //   lastName: \"Smith\",\n    //   email: \"smith@gmail.com\"\n    // });\n\n    //reset\n    //this.signUpForm.reset();\n\n    //reset with Parameters\n    // this.signUpForm.reset({\n    //   firstName: \"Adam\",\n    //   lastName: \"Smith\",\n    //   email: \"smith@gmail.com\"\n    // });\n  }\n\n  onAddSkill() {\n    var formGroup = new FormGroup({\n      skillName: new FormControl(null, [Validators.required]),\n      skillLevel: new FormControl(null, [Validators.required]),\n    });\n\n    (<FormArray>this.signUpForm.get('skills')).push(formGroup);\n  }\n\n  onRemoveClick(index: number) {\n    (<FormArray>this.signUpForm.get('skills')).removeAt(index);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-8 col-xl-6 mx-auto\">\n\n    <form [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmitClick()\">\n\n      <div class=\"card mt-1\">\n        <div class=\"card-header\">\n          <h4>Sign Up</h4>\n        </div>\n\n        <div class=\"card-body\">\n\n          <div class=\"form-group form-row\" formGroupName=\"personName\">\n            <label for=\"firstName\" class=\"col-md-4 col-form-label\">First Name:</label>\n            <div class=\"col-md-8\">\n              <input type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"First Name\" class=\"form-control\" formControlName=\"firstName\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('personName.firstName').valid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted) && signUpForm.get('personName.firstName').errors?.required\">First name can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted) && signUpForm.get('personName.firstName').errors?.minlength\">First name should contain at least 2 characters</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\" formGroupName=\"personName\">\n            <label for=\"lastName\" class=\"col-md-4 col-form-label\">Last Name:</label>\n            <div class=\"col-md-8\">\n              <input type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"Last Name\" class=\"form-control\" formControlName=\"lastName\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('personName.lastName').valid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted) && signUpForm.get('personName.lastName').errors?.required\">Last name can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted) && signUpForm.get('personName.lastName').errors?.minlength\">Last name should contain at least 2 characters</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"email\" class=\"col-md-4 col-form-label\">Email:</label>\n            <div class=\"col-md-8\">\n              <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"Email\" class=\"form-control\" formControlName=\"email\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('email').valid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) && signUpForm.get('email').errors?.required\">Email can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) && signUpForm.get('email').errors?.email\">Email is invalid</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) && signUpForm.get('email').errors?.uniqueEmail\">Email already exists</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"mobile\" class=\"col-md-4 col-form-label\">Mobile:</label>\n            <div class=\"col-md-8\">\n              <input type=\"text\" name=\"mobile\" id=\"mobile\" placeholder=\"Mobile\" class=\"form-control\" formControlName=\"mobile\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('mobile').valid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted) && signUpForm.get('mobile').errors?.required\">Mobile can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted) && signUpForm.get('mobile').errors?.pattern\">Mobile is invalid</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"dateOfBirth\" class=\"col-md-4 col-form-label\">Date of Birth:</label>\n            <div class=\"col-md-8\">\n              <input type=\"date\" name=\"dateOfBirth\" id=\"dateOfBirth\" placeholder=\"Date of Birth\" class=\"form-control\" formControlName=\"dateOfBirth\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('dateOfBirth').valid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted) && signUpForm.get('dateOfBirth').errors?.required\">Date of Birth can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted) && signUpForm.get('dateOfBirth').errors?.minAge\">Minimum Age must be 18</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"password\" class=\"col-md-4 col-form-label\">Password:</label>\n            <div class=\"col-md-8\">\n              <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" class=\"form-control\" formControlName=\"password\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('password').invalid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('password').valid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('password').invalid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted) && signUpForm.get('password').errors?.required\">Password can't be blank</span>\n            </div>\n          </div>\n\n\n          <div class=\"form-group form-row\">\n            <label for=\"confirmPassword\" class=\"col-md-4 col-form-label\">Confirm Password:</label>\n            <div class=\"col-md-8\">\n              <input type=\"password\" name=\"confirmPassword\" id=\"confirmPassword\" placeholder=\"Confirm Password\" class=\"form-control\" formControlName=\"confirmPassword\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('confirmPassword').invalid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('confirmPassword').valid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('confirmPassword').invalid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted) && signUpForm.get('confirmPassword').errors?.required\">Confirm Password can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.invalid && (signUpForm.dirty || signUpForm.touched || signUpForm.submitted) && signUpForm.errors?.compareValidator\">Password and Confirm Password do not match</span>\n            </div>\n          </div>\n\n\n          <div class=\"form-group form-row\">\n            <label class=\"col-md-4 col-form-label\">Gender:</label>\n            <div class=\"col-md-8\">\n\n              <div class=\"form-check-label form-check-inline\" *ngFor=\"let gender of genders\">\n                <input type=\"radio\" name=\"gender\" [id]=\"gender\" [value]=\"gender\" class=\"form-check-input\" formControlName=\"gender\">\n                <label [for]=\"gender\" class=\"form-check-label\">{{gender}}</label>\n              </div>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('gender').invalid && (signUpForm.get('gender').dirty || signUpForm.get('gender').touched || signUpForm.submitted) && signUpForm.get('gender').errors?.required\">Please select gender</span>\n\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"countryID\" class=\"col-md-4 col-form-label\">Country:</label>\n            <div class=\"col-md-8\">\n              <select name=\"countryID\" id=\"countryID\" class=\"form-control\" formControlName=\"countryID\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('countryID').invalid && (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('countryID').valid && (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted) }\">\n                <option value=\"null\">Please Select</option>\n                <option *ngFor=\"let country of countries\" [value]=\"country.countryID\">\n                  {{country.countryName}}\n                </option>\n              </select>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('countryID').invalid && (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted) && signUpForm.get('countryID').errors?.required\">Please select country</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label class=\"col-md-4 col-form-label\"></label>\n            <div class=\"col-md-8\">\n              <input type=\"checkbox\" name=\"receiveNewsLetters\" id=\"receiveNewsLetters\" value=\"true\" class=\"form-check-input\" formControlName=\"receiveNewsLetters\">\n              <label for=\"receiveNewsLetters\" class=\"form-check-label\">Receive News Letters</label>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label class=\"col-md-4 col-form-label\">Skills:</label>\n            <div class=\"col-md-8\" formArrayName=\"skills\">\n              <div class=\"row\" *ngFor=\"let skill of signUpForm.get('skills').controls; let i = index\" [formGroupName]=\"i\">\n\n                <div class=\"col-5\">\n                  <input type=\"text\" name=\"skillName\" id=\"skillName\" placeholder=\"Skill Name\" formControlName=\"skillName\" class=\"form-control\" [ngClass]=\"{\n                    'is-invalid': skill.get('skillName').invalid && (skill.get('skillName').dirty || skill.get('skillName').touched || signUpForm.submitted),\n    \n                    'is-valid': skill.get('skillName').valid && (skill.get('skillName').dirty || skill.get('skillName').touched || signUpForm.submitted) }\">\n                </div>\n\n                <div class=\"col-4\">\n                  <select name=\"level\" id=\"level\" formControlName=\"skillLevel\" class=\"form-control\" [ngClass]=\"{\n                    'is-invalid': skill.get('skillLevel').invalid && (skill.get('skillLevel').dirty || skill.get('skillLevel').touched || signUpForm.submitted),\n    \n                    'is-valid': skill.get('skillLevel').valid && (skill.get('skillLevel').dirty || skill.get('skillLevel').touched || signUpForm.submitted) }\">\n                    <option value=\"null\">Please Select</option>\n                    <option value=\"Beginner\">Beginner</option>\n                    <option value=\"Intermediate\">Intermediate</option>\n                    <option value=\"Professional\">Professional</option>\n                    <option value=\"Expert\">Expert</option>\n                  </select>\n                </div>\n\n                <div class=\"col-3\">\n                  <button class=\"btn btn-danger\" type=\"button\" (click)=\"onRemoveClick(i)\">Remove</button>\n                </div>\n              </div>\n\n              <button class=\"btn btn-primary\" type=\"button\" (click)=\"onAddSkill()\">Add Skill</button>\n            </div>\n\n          </div>\n\n          <!-- {{signUpForm.value | json}} -->\n        </div>\n\n        <div class=\"card-footer\">\n          <button class=\"btn btn-success float-right\">Create Account</button>\n          <div class=\"text-danger\">{{registerError}}</div>\n        </div>\n\n      </div>\n\n    </form>\n  </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss']\n})\nexport class TasksComponent {\n\n}\n","<p>tasks works!</p>\n","import { Directive, Input } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\n\n@Directive({\n  selector: '[appTeamSizeValidator]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: TeamSizeValidatorDirective, multi: true }]\n})\nexport class TeamSizeValidatorDirective implements Validator{\n\n  constructor() { }\n\n  @Input(\"appTeamSizeValidator\") n: number | any = 0;\n\n  validate(control: AbstractControl): ValidationErrors | null\n  {\n    let currentValue = control.value;\n    let isValid = currentValue % this.n == 0;\n\n    if (isValid)\n    {\n      return null; //valid\n    }\n    else\n    {\n      return { divisible: { valid: false } }; //indicates invalid\n    }\n  }\n}\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["AboutComponent","selectors","decls","vars","template","AboutComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","CommonModule","DashboardComponent","MyProfileComponent","DashboardService","ProjectsComponent","FormsModule","TeamSizeValidatorDirective","ClientLocationStatusValidatorDirective","ProjectIDUniqueValidatorDirective","ProjectComponent","CheckBoxPrinterComponent","AdminModule","imports","declarations","exports","constructor","isChecked","ngOnInit","check","unCheck","consts","CheckBoxPrinterComponent_Template","ɵɵlistener","CheckBoxPrinterComponent_Template_input_ngModelChange_1_listener","$event","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate","client_r5","DashboardComponent_a_56_Template_a_click_0_listener","ɵɵrestoreView","_r8","ctx_r7","ɵɵnextContext","ɵɵresetView","onProjectChange","project_r6","year_r9","teammembersummary_r10","Region","TeamMembersCount","TemporarilyUnavailableMembers","member_r14","ID","Name","ɵɵstyleProp","Status","ɵɵtemplate","DashboardComponent_div_103_tr_17_Template","ɵɵattribute","i_r12","ɵɵtextInterpolate1","teammember_r11","Members","dashboardService","Designation","Username","NoOfTeamMembers","TotalCostOfAllProjects","PendingTasks","UpComingProjects","ProjectCost","CurrentExpenditure","AvailableFunds","Clients","Projects","Years","TeamMembersSummary","TeamMembers","ToDay","Date","i","push","getTeamMembersSummary","target","innerHTML","trim","ɵɵdirectiveInject","i1","DashboardComponent_Template","ɵɵelement","DashboardComponent_li_46_Template","DashboardComponent_a_56_Template","DashboardComponent_a_62_Template","DashboardComponent_tr_96_Template","DashboardComponent_div_103_Template","ɵɵpipeBind2","ɵɵpipeBind1","MyProfileComponent_Template","EventEmitter","projectsService","editClick","deleteClick","hideDetails","selectionBoxes","MySubscription","MySubject","subscribe","hide","onEditClick","event","emit","onDeleteClick","ngOnDestroy","unsubscribe","isAllCheckedChange","b","selectionBox","toArray","length","ProjectsService","contentQueries","ProjectComponent_ContentQueries","dirIndex","ɵɵprojection","ProjectComponent_Template_button_click_33_listener","ProjectComponent_Template_button_click_36_listener","project","projectID","projectName","dateOfStart","teamSize","clientLocation","clientLocationName","status","Project","$","ProjectsComponent_div_37_Template_app_project_editClick_1_listener","restoredCtx","_r50","i_r46","index","ctx_r49","ProjectsComponent_div_37_Template_app_project_deleteClick_1_listener","ctx_r51","project_r45","clientLocation_r52","clientLocationID","clientLocation_r53","projectService","clientLocationsService","projects","clientLocations","showLoading","newProject","editProject","editIndex","deleteProject","deleteIndex","searchBy","searchText","newForm","editForm","isAllChecked","projs","prjID","getAllProjects","next","response","error","console","log","alert","getClientLocations","proj","onNewClick","resetForm","setTimeout","nativeElement","focus","onSaveClick","valid","insertProject","p","active","trigger","split","reverse","join","onUpdateClick","updateProject","onDeleteConfirmClick","splice","onSearchClick","SearchProjects","onHideShowDetails","toggleDetails","i2","ClientLocationsService","viewQuery","ProjectsComponent_Query","ProjectsComponent_i_2_Template","ProjectsComponent_Template_button_click_7_listener","ProjectsComponent_Template_button_click_10_listener","ProjectsComponent_Template_input_ngModelChange_13_listener","ProjectsComponent_Template_input_change_13_listener","ProjectsComponent_Template_select_ngModelChange_18_listener","ProjectsComponent_Template_input_ngModelChange_31_listener","ProjectsComponent_Template_div_click_32_listener","ProjectsComponent_div_37_Template","ProjectsComponent_Template_input_ngModelChange_54_listener","ProjectsComponent_span_57_Template","ProjectsComponent_span_58_Template","ProjectsComponent_span_59_Template","ProjectsComponent_Template_input_ngModelChange_64_listener","ProjectsComponent_span_66_Template","ProjectsComponent_span_67_Template","ProjectsComponent_span_68_Template","ProjectsComponent_Template_input_ngModelChange_73_listener","ProjectsComponent_span_75_Template","ProjectsComponent_Template_input_ngModelChange_80_listener","ProjectsComponent_span_82_Template","ProjectsComponent_span_83_Template","ProjectsComponent_Template_input_ngModelChange_89_listener","ProjectsComponent_Template_input_ngModelChange_97_listener","ProjectsComponent_Template_input_ngModelChange_102_listener","ProjectsComponent_span_106_Template","ProjectsComponent_Template_select_ngModelChange_111_listener","ProjectsComponent_option_115_Template","ProjectsComponent_span_116_Template","ProjectsComponent_span_117_Template","ProjectsComponent_Template_button_click_121_listener","ProjectsComponent_Template_input_ngModelChange_139_listener","ProjectsComponent_span_141_Template","ProjectsComponent_span_142_Template","ProjectsComponent_span_143_Template","ProjectsComponent_Template_input_ngModelChange_148_listener","ProjectsComponent_span_150_Template","ProjectsComponent_span_151_Template","ProjectsComponent_span_152_Template","ProjectsComponent_Template_input_ngModelChange_157_listener","ProjectsComponent_span_159_Template","ProjectsComponent_Template_input_ngModelChange_164_listener","ProjectsComponent_span_166_Template","ProjectsComponent_span_167_Template","ProjectsComponent_Template_input_ngModelChange_173_listener","ProjectsComponent_Template_input_ngModelChange_181_listener","ProjectsComponent_Template_input_ngModelChange_186_listener","ProjectsComponent_span_190_Template","ProjectsComponent_Template_select_ngModelChange_195_listener","ProjectsComponent_option_199_Template","ProjectsComponent_span_200_Template","ProjectsComponent_span_201_Template","ProjectsComponent_Template_button_click_205_listener","ProjectsComponent_Template_input_ngModelChange_224_listener","ProjectsComponent_Template_input_ngModelChange_229_listener","ProjectsComponent_Template_button_click_233_listener","ɵɵpureFunction2","_c4","_r3","invalid","dirty","touched","_r2","submitted","errors","_r12","_r14","_r17","_r20","_r25","_r24","_r29","_r33","_r35","_r38","_r41","RouterModule","LoginComponent","SignUpComponent","TasksComponent","routes","path","redirectTo","pathMatch","component","data","expectedRole","AppRoutingModule","forRoot","useHash","ctx_r2","loginService","currentUserName","AppComponent_li_13_Template_a_click_1_listener","_r7","ctx_r6","Logout","AppComponent","LoginService","AppComponent_Template","AppComponent_li_7_Template","AppComponent_li_11_Template","AppComponent_li_12_Template","AppComponent_li_13_Template","AppComponent_li_14_Template","AppComponent_li_15_Template","BrowserModule","JwtModule","HTTP_INTERCEPTORS","HttpClientModule","ReactiveFormsModule","JwtInterceptorService","JwtUnAuthorizedInterceptorService","AppModule","bootstrap","provide","useClass","multi","config","tokenGetter","sessionStorage","getItem","JSON","parse","token","NG_VALIDATORS","validate","control","isValid","value","ClientLocation","clientLocationStatus","features","ɵɵProvidersFeature","useExisting","httpClient","get","responseType","ɵɵinject","HttpClient","factory","ɵfac","providedIn","CountriesService","getCountries","map","CustomValidatorsService","minimumAgeValidator","minAge","today","dateOfBirth","diffMilliSeconds","Math","abs","getTime","diffYears","compareValidator","controlToValidate","controlToCompare","formGroup","setErrors","DuplicateEmailValidator","getUserByEmail","pipe","existingUser","uniqueEmail","intercept","req","currentUser","clone","setHeaders","Authorization","handle","HttpErrorResponse","tap","LoginViewModel","UserName","Password","httpBackend","jwtHelperService","Login","loginViewModel","post","observe","body","userName","stringify","headers","Register","signUpViewModel","Email","removeItem","isAuthenticated","isTokenExpired","HttpBackend","JwtHelperService","router","loginError","onLoginClick","navigateByUrl","Router","LoginComponent_Template","LoginComponent_Template_input_ngModelChange_12_listener","LoginComponent_Template_input_ngModelChange_17_listener","LoginComponent_Template_button_click_21_listener","NG_ASYNC_VALIDATORS","getProjectByProjectID","existingProject","uniqueProjectID","BehaviorSubject","ProjectID","put","delete","FormControl","FormGroup","Validators","gender_r19","country_r20","countryID","countryName","SignUpComponent_div_82_Template_button_click_16_listener","i_r22","ctx_r23","onRemoveClick","_c0","skill_r21","ctx_r18","signUpForm","countriesService","formBuilder","customValidatorsService","genders","countries","registerError","group","personName","firstName","required","minLength","lastName","email","updateOn","mobile","pattern","password","confirmPassword","gender","receiveNewsLetters","skills","array","validators","valueChanges","onSubmitClick","signUpVieModel","navigate","onAddSkill","skillName","skillLevel","removeAt","FormBuilder","i3","i4","i5","SignUpComponent_Template","SignUpComponent_Template_form_ngSubmit_2_listener","SignUpComponent_span_13_Template","SignUpComponent_span_14_Template","SignUpComponent_span_20_Template","SignUpComponent_span_21_Template","SignUpComponent_span_27_Template","SignUpComponent_span_28_Template","SignUpComponent_span_29_Template","SignUpComponent_span_35_Template","SignUpComponent_span_36_Template","SignUpComponent_span_42_Template","SignUpComponent_span_43_Template","SignUpComponent_span_49_Template","SignUpComponent_span_55_Template","SignUpComponent_span_56_Template","SignUpComponent_div_61_Template","SignUpComponent_span_62_Template","SignUpComponent_option_70_Template","SignUpComponent_span_71_Template","SignUpComponent_div_82_Template","SignUpComponent_Template_button_click_83_listener","minlength","controls","TasksComponent_Template","n","currentValue","divisible","inputs","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}